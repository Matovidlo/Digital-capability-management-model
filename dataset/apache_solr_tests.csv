Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Description,Environment,Log Work,Log Work,Log Work,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Blocker),Outward issue link (Duplicate),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Affects version (Component)),Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (Bugzilla Id),Custom field (Change Category),Custom field (Complexity),Custom field (Date of First Response),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Estimated Complexity),Custom field (Evidence Of Open Source Adoption),Custom field (Evidence Of Registration),Custom field (Evidence Of Use On World Wide Web),Custom field (Existing GitBox Approval),Custom field (External issue ID),Custom field (External issue URL),Custom field (Fix version (Component)),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Last public comment date),Custom field (Level of effort),Custom field (Machine Readable Info),Custom field (New-TLP-TLPName),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Review Date),Custom field (Reviewer),Custom field (Severity),Custom field (Severity),Custom field (Skill Level),Custom field (Source Control Link),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Tags),Custom field (Test and Documentation Plan),Custom field (Testcase included),Custom field (Tester),Custom field (Workaround),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
TestInPlaceUpdateWithRouteField.testUpdatingDocValuesWithRouteField reproducing failure on branch_8x,SOLR-15027,13343855,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,hossman,hossman,02/Dec/20 19:51,13/Feb/21 00:08,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"
{noformat}
   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestInPlaceUpdateWithRouteField -Dtests.method=testUpdatingDocValuesWithRouteField -Dtests.seed=80F75127980BAE95 -Dtests.nightly=true -Dtests.slow=true -Dtests.badapples=true -Dtests.locale=es-VE -Dtests.timezone=Asia/Sakhalin -Dtests.asserts=true -Dtests.file.encoding=UTF-8
   [junit4] FAILURE 1.90s | TestInPlaceUpdateWithRouteField.testUpdatingDocValuesWithRouteField <<<
   [junit4]    > Throwable #1: java.lang.AssertionError: Lucene doc id should not be changed for In-Place Updates.
   [junit4]    > Expected: is <21>
   [junit4]    >      but: was <30>
   [junit4]    > 	at __randomizedtesting.SeedInfo.seed([80F75127980BAE95:77AF61938946C1E4]:0)
   [junit4]    > 	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
   [junit4]    > 	at org.apache.solr.update.TestInPlaceUpdateWithRouteField.testUpdatingDocValuesWithRouteField(TestInPlaceUpdateWithRouteField.java:115)
   [junit4]    > 	at java.lang.Thread.run(Thread.java:748)
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 02 20:33:13 UTC 2020,,,,,,,"0|z0l55s:",9223372036854775807,,,,,,,,,,,,,,,"02/Dec/20 20:33;hossman;I don't really understand why/how but git bisect has identified SOLR-14641 / d52628d9facfc13d8c29a7ecaf646a3b90263f8c as the cause of this failure.

[~caomanhdat] / [~mkhl] - any ideas what's going on here?",,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition in TestPullReplicaErrorHandling,SOLR-15032,13344120,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,mdrob,mdrob,04/Dec/20 00:54,13/Feb/21 00:08,18/Feb/21 09:59,,,,,,,,Tests,,,,,0,race-condition,,,"See discussion at https://github.com/apache/lucene-solr/pull/2115#discussion_r534445545

There is a race condition in two tests in TestPullReplicaErrorHandling where we expire a ZK session, then wait for a node down and a node up. It's possible that the node recovers before we even start waiting for the first down.

Better would be to set a watch on the live-node that we're about to expire, and wait to see the delete before checking for the node to come back up. 

cc: [~tflobbe]",,,,,,,,,,,,,,,,SOLR-14992,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2020-12-04 00:54:07.0,,,,,,,"0|z0l6so:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CloudExitableDirectoryReaderTest failing about 25% of the time,SOLR-14684,13319757,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,erickerickson,erickerickson,28/Jul/20 13:46,22/Oct/20 13:31,18/Feb/21 10:02,,master (9.0),,,,,,Tests,,,,,0,,,,"If I beast this on my local machine, it fails (non reproducibly of course) about 1/4 of the time. Log attached. The test itself hasn't changed in 11 months or so.

It looks like occasionally the calls throw an error rather than return partial results with a message: ""Time allowed to handle this request exceeded:[]"".

It's been failing very intermittently for a couple of years, but the failure rate really picked up in the last couple of weeks. IDK whether the failures prior to the last couple of weeks are the same root cause.

I'll do some spelunking to see if I can pinpoint the commit that made this happen, but it'll take a while.",,"CaoManhDat opened a new pull request #1724:
URL: https://github.com/apache/lucene-solr/pull/1724


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Aug/20 11:31;githubbot;600","dsmiley commented on a change in pull request #1724:
URL: https://github.com/apache/lucene-solr/pull/1724#discussion_r468335971



##########
File path: solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBSolrClient.java
##########
@@ -155,6 +159,7 @@ public ServerIterator(Req req, Map<String, ServerWrapper> zombieServers) {
       this.req = req;
       this.zombieServers = zombieServers;
       this.timeAllowedNano = getTimeAllowedInNanos(req.getRequest());
+      log.info(""TimeAllowedNano:{}"", this.timeAllowedNano);

Review comment:
       Are you sure we should log at info level here?  This seems more like a debug situation.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Aug/20 05:34;githubbot;600","CaoManhDat commented on a change in pull request #1724:
URL: https://github.com/apache/lucene-solr/pull/1724#discussion_r468970705



##########
File path: solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBSolrClient.java
##########
@@ -155,6 +159,7 @@ public ServerIterator(Req req, Map<String, ServerWrapper> zombieServers) {
       this.req = req;
       this.zombieServers = zombieServers;
       this.timeAllowedNano = getTimeAllowedInNanos(req.getRequest());
+      log.info(""TimeAllowedNano:{}"", this.timeAllowedNano);

Review comment:
       Thank you, I totally forget that on creating this PR.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Aug/20 02:36;githubbot;600","CaoManhDat merged pull request #1724:
URL: https://github.com/apache/lucene-solr/pull/1724


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Aug/20 08:41;githubbot;600",,0,2400,,,0,2400,,,,,,,,"28/Jul/20 13:43;erickerickson;stdout;https://issues.apache.org/jira/secure/attachment/13008599/stdout",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2020-07-29 03:23:33.621,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 22 13:31:16 UTC 2020,,,,,,,"0|z0h9oo:",9223372036854775807,,,,,,,,,,,,,,,"29/Jul/20 00:11;erickerickson;Apparently the commit for ""SOLR-14354: HttpShardHandler send requests in async"" caused this test to fail more frequently:

 

a80eb84d5659a06a10860ad2470e87d80b19fa5d

[~caomanhdat] do you have any clues?","29/Jul/20 03:23;caomanhdat;I will take a look.","29/Jul/20 11:08;erickerickson;I can get this to fail pretty quickly, so let me know if you have anything you want me to test. Or, for that matter, if you have anything you want me to run to get information.","07/Aug/20 08:30;caomanhdat;Ok, I figured out the problem for this issue. In the past we never check wether a request is already timeout or not before sending request to other shards. So in the test we can set timeAllowed with minimal value like 1 (1ms), SOLR-14354 actually do the check before sending query request to other shards.

Therefore it leads to above failure, my gut feeling that change made by SOLR-14354 is correct, but I did not know a quick way to solving the test failure properly. Therefore I will revert the behaviour like we used to do and fire another issue for this which needs more thought and checks.","07/Aug/20 08:36;caomanhdat;Opened SOLR-14719 for that.","07/Aug/20 11:31;jira-bot;Commit 1b37c981a0ced4876455c9e5effa488d71b70160 in lucene-solr's branch refs/heads/jira/SOLR-14684 from Cao Manh Dat
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=1b37c98 ]

SOLR-14684: CloudExitableDirectoryReaderTest failing about 25% of the time
","07/Aug/20 11:31;caomanhdat;I created a PR for this one, can you trying to reproduce the problem [~erickerickson]? Thanks a lot!","07/Aug/20 11:49;erickerickson;Actually, as luck would have it, I can't try this until probably Sunday or Monday. We lost power due to a storm and the machine I can reliably reproduce it on won't be available until then. I'll leave a note to myself to do it as soon as I can.","10/Aug/20 11:12;erickerickson;[~caomanhdat] I was able to run 1,000 iterations with the patch over night and got no failures, so this looks good!","21/Aug/20 08:41;jira-bot;Commit 2b2b9e71d3defe6aa4578f9a571078de8b88c7c6 in lucene-solr's branch refs/heads/master from Cao Manh Dat
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=2b2b9e7 ]

SOLR-14684: CloudExitableDirectoryReaderTest failing about 25% of the time (#1724)

","21/Aug/20 23:46;tflobbe;There are a bunch of failures in Jenkins like:

{noformat}
FAILED:  org.apache.solr.client.solrj.impl.LBSolrClientTest.testServerIteratorTimeAllowed

Error Message:
Expected exception SolrServerException but no exception was thrown

Stack Trace:
junit.framework.AssertionFailedError: Expected exception SolrServerException but no exception was thrown
        at org.apache.lucene.util.LuceneTestCase.expectThrows(LuceneTestCase.java:2750)
        at org.apache.lucene.util.LuceneTestCase.expectThrows(LuceneTestCase.java:2740)
        at org.apache.solr.client.solrj.impl.LBSolrClientTest.testServerIteratorTimeAllowed(LBSolrClientTest.java:77)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.base/java.lang.reflect.Method.invoke(Method.java:567)
        at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
        at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
        at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
        at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
        at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
        at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
        at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
        at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
        at com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:269)
        at com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:394)
        at com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:13)
{noformat}
Looks related to this commit, but I didn't validate","21/Aug/20 23:55;tflobbe;Ah, I noticed Erick created SOLR-14771 for the failure","24/Aug/20 03:11;jira-bot;Commit a4a0d9e8ce6b48da00ca54cb1fcc0210735aca9b in lucene-solr's branch refs/heads/master from Cao Manh Dat
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=a4a0d9e ]

SOLR-14684: Skipping check time exceeded for the first request in a proper way
","24/Aug/20 12:58;erickerickson;[~caomanhdat] Can we close this Jira too? It's fine if it stays open for a while, just wondered...","25/Aug/20 06:39;caomanhdat;I would like to wait for couple of days for any new failures caused by this change. If everything is good then I will backport to branch_8x and close this issue.","28/Aug/20 04:01;jira-bot;Commit a93cb7102f02b25e50dfac2353e9c4c2a445b177 in lucene-solr's branch refs/heads/branch_8x from Cao Manh Dat
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=a93cb71 ]

SOLR-14684: CloudExitableDirectoryReaderTest failing about 25% of the time (#1724)

","28/Aug/20 04:01;jira-bot;Commit 5f0c9dfbabd99f470823241437b20ada05ee79d7 in lucene-solr's branch refs/heads/branch_8x from Cao Manh Dat
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=5f0c9df ]

SOLR-14684: Skipping check time exceeded for the first request in a proper way
","22/Oct/20 13:31;jira-bot;Commit 3749e79cf0f920de29eff6b625fc41cb99e59134 in lucene-solr's branch refs/heads/jira/SOLR-14684-revert from Cao Manh Dat
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=3749e79 ]

SOLR-14684: Revert changes for 8.x
",,,,,,,,,,
Create docker test for the prometheus exporter,SOLR-14858,13327133,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,houston,houston,11/Sep/20 17:20,09/Oct/20 15:52,18/Feb/21 10:02,,master (9.0),,,,,,Docker,Tests,,,,0,,,,"Currently there are a fair number of tests for running the Solr docker image, however none of them actually test running the prometheus exporter from within the image.

This should spin up a solr container as well as a prometheus exporter container that collects metrics from the solr container. Check that the metrics endpoint is available and sends back results.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2020-09-11 17:20:00.0,,,,,,,"0|z0ij1k:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update processor initialization should be skipped on PULL replicas,SOLR-14715,13321295,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,erickerickson,erickerickson,06/Aug/20 12:03,19/Aug/20 21:25,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"From the user's list:
{quote}
Our PULL replicas... fail to start with below
exception when DocBasedVersionConstraintsProcessorFactory is added to
UpdateProcessorChain.

Caused by: org.apache.solr.common.SolrException: updateLog must be enabled.
       at org.apache.solr.core.SolrCore.<init>(SolrCore.java:1014)
       at org.apache.solr.core.SolrCore.<init>(SolrCore.java:869)
       at
org.apache.solr.core.CoreContainer.createFromDescriptor(CoreContainer.java:1138)
       ... 45 more
Caused by: org.apache.solr.common.SolrException: updateLog must be enabled.
       at
org.apache.solr.update.processor.DocBasedVersionConstraintsProcessorFactory.inform(DocBasedVersionConstraintsProcessorFactory.java:168)
       at
org.apache.solr.core.SolrResourceLoader.inform(SolrResourceLoader.java:696)
       at org.apache.solr.core.SolrCore.<init>(SolrCore.java:993)
       ... 47 more

{quote}

and Tomás' reply:

{quote}
This is an interesting bug. I’m wondering if we can completely skip the
initialization of UpdateRequestProcessorFactories in PULL replicas...
{quote}
 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2020-08-06 12:03:59.0,,,,,,,"0|z0hj3k:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Distributed Test for uniqueBlock({!v=$qp}) in JSON Facet,SOLR-14313,13290422,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,mkhl,mkhl,mkhl,08/Mar/20 21:01,27/May/20 18:03,18/Feb/21 10:02,,,,,,,,Facet Module,,,,,0,,,,Continue SOLR-12325 after {{8.5}} is cut.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2020-03-08 21:01:13.0,,,,,,,"0|z0cb4w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Security manager access denied not causing tests to fail,SOLR-14084,13274517,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,krisden,krisden,14/Dec/19 00:01,21/Jan/20 17:00,18/Feb/21 10:02,,,,,,,,Tests,,,,,0,,,,"FYI [~rcmuir] this is from a run where all the tests pass. 

Looking at the output in ./build/solr-core/test/tests-report.txt

{code:java}
# grep -F 'access denied' tests-report.txt | cut -d':' -f2 | sort | uniq -c

   1  access denied (""java.io.FilePermission"" ""/Users/krisden/repos/apache/lucene-solr/solr/build/solr-core/test/J2/temp/solr.util.TestSolrCLIRunExample_7960AD1EAA781935-001/tempDir-001/failExecuteScript"" ""execute"")
 952  access denied (""java.io.FilePermission"" ""/Users/krisden/repos/apache/lucene-solr/solr/core/src/test-files/solr/filestore"" ""write"")
  30  access denied (""java.io.FilePermission"" ""/Users/krisden/repos/apache/lucene-solr/solr/core/src/test-files/solr/userfiles"" ""write"")
  54  access denied (""java.net.SocketPermission"" ""----------"" ""resolve"")
   2  access denied (""java.net.SocketPermission"" ""thrasher-T100"" ""resolve"")
   4 127.0.0.1
{code}

These didn't cause tests to fail but need to see why these are happening. I wouldn't expect we need most of these. ",,,,,,,,,,,,,,,,SOLR-14096,SOLR-13991,SOLR-14078,,"16/Dec/19 15:29;ichattopadhyaya;log.gz;https://issues.apache.org/jira/secure/attachment/12988936/log.gz",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2019-12-14 02:16:27.074,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 16 16:11:58 UTC 2019,,,,,,,"0|z09oc0:",9223372036854775807,,,,,,,,,,,,,,,"14/Dec/19 02:16;rcmuir;Yeah, its good to look into: especially the ones happening many times. The java.security.debug flag can help (you can get stacktrace of the code doing this, even when the test does not fail). 

I will warn you, it can get a little messy with complex tests that act more like integration tests than unit tests: kinda like if you were to strace your web browser, you'd see all kinds of things that look like errors but are ""normal"".","14/Dec/19 02:59;rcmuir;Some of this can be found with grep. For example the all-dashes:

{noformat}
git grep -- ""----------""
...
core/src/test/org/apache/solr/cloud/ZkCLITest.java:      new SolrZkClient(""----------:33332"", 100);
...
{noformat}

The ""thrasher"" one might be TestStressLiveNodes:
{noformat}
core/src/test/org/apache/solr/cloud/TestStressLiveNodes.java:        final String nodePath = ZkStateReader.LIVE_NODES_ZKNODE + ""/thrasher-"" + id + ""-"" + i;
{noformat}

The tests are probably just swallowing all RuntimeException/Throwable and treat it like any other error.","14/Dec/19 03:11;krisden;I'm pretty sure most of ""/solr/core/src/test-files/solr/filestore"" is from SOLR-14078 which is a bulk of them. ","16/Dec/19 14:27;jbernste;Let's also discuss the ""userfiles"" directory which is appearing in the test reports.
{code:java}
   30  access denied (""java.io.FilePermission"" ""/Users/krisden/repos/apache/lucene-solr/solr/core/src/test-files/solr/userfiles"" ""write""){code}
 

This directory is created in the SolrResourceLoader as follows:
{code:java}
/**
 * Solr allows users to store arbitrary files in a special directory located directly under SOLR_HOME.
 * <p>
 * This directory is generally created by each node on startup.  Files located in this directory can then be
 * manipulated using select Solr features (e.g. streaming expressions).
 */
public static final String USER_FILES_DIRECTORY = ""userfiles"";

public static void ensureUserFilesDataDir(Path solrHome) {
  final Path userFilesPath = getUserFilesPath(solrHome);
  final File userFilesDirectory = new File(userFilesPath.toString());
  if (!userFilesDirectory.exists()) {
    try {
      final boolean created = userFilesDirectory.mkdir();
      if (!created) {
        log.warn(""Unable to create [{}] directory in SOLR_HOME [{}].  Features requiring this directory may fail."", USER_FILES_DIRECTORY, solrHome);
      }
    } catch (Exception e) {
      log.warn(""Unable to create ["" + USER_FILES_DIRECTORY + ""] directory in SOLR_HOME ["" + solrHome + ""].  Features requiring this directory may fail."", e);
    }
  }
}

public static Path getUserFilesPath(Path solrHome) {
  return Paths.get(solrHome.toAbsolutePath().toString(), USER_FILES_DIRECTORY).toAbsolutePath();
} {code}
Tests pass for me when they are run using the basic:
{code:java}
ant test {code}
There are specific tests that exercise this directory which pass, but that may be because the tests also populate this directory with a file in a way that would create the directory if it does not exist.

 ","16/Dec/19 14:55;krisden;I think userfiles falls into the same category of SOLR-14078 where the Solr home isn't set correctly by SolrTestCaseJ4.","16/Dec/19 14:56;jbernste;Yes, it's the same problem. So the action item here is to change SolrTestCaseJ4 it seems. Is this a blocker for 8.4?","16/Dec/19 14:58;krisden;I don't personally think its a blocker for 8.4. It hasn't caused any tests to fail. It is isolated to tests only.","16/Dec/19 14:59;dweiss;I don't think it's a new regression. It's just general flakiness of those tests.","16/Dec/19 15:27;ichattopadhyaya;FYI, I saw this in LoggingHandlerTest:

{code}
   [junit4]   2> access: access denied (""java.io.FilePermission"" ""/boot"" ""read"")
   [junit4]   2> java.lang.Exception: Stack trace
   [junit4]   2> 	at java.base/java.lang.Thread.dumpStack(Thread.java:1387)
   [junit4]   2> 	at java.base/java.security.AccessControlContext.checkPermission(AccessControlContext.java:462)
   [junit4]   2> 	at java.base/java.security.AccessController.checkPermission(AccessController.java:897)
   [junit4]   2> 	at java.base/java.lang.SecurityManager.checkPermission(SecurityManager.java:322)
   [junit4]   2> 	at java.base/java.lang.SecurityManager.checkRead(SecurityManager.java:661)
   [junit4]   2> 	at java.base/sun.nio.fs.UnixFileSystem$FileStoreIterator.readNext(UnixFileSystem.java:205)
   [junit4]   2> 	at java.base/sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext(UnixFileSystem.java:222)
   [junit4]   2> 	at org.apache.lucene.util.IOUtils.getFileStore(IOUtils.java:595)
   [junit4]   2> 	at org.apache.lucene.util.IOUtils.spinsLinux(IOUtils.java:539)
   [junit4]   2> 	at org.apache.lucene.util.IOUtils.spins(IOUtils.java:528)
   [junit4]   2> 	at org.apache.lucene.util.IOUtils.spins(IOUtils.java:503)
   [junit4]   2> 	at org.apache.lucene.index.ConcurrentMergeScheduler.initDynamicDefaults(ConcurrentMergeScheduler.java:412)
   [junit4]   2> 	at org.apache.lucene.index.ConcurrentMergeScheduler.merge(ConcurrentMergeScheduler.java:501)
   [junit4]   2> 	at org.apache.lucene.index.IndexWriter.waitForMerges(IndexWriter.java:2538)
   [junit4]   2> 	at org.apache.lucene.index.IndexWriter.shutdown(IndexWriter.java:1045)
   [junit4]   2> 	at org.apache.lucene.index.IndexWriter.close(IndexWriter.java:1087)
   [junit4]   2> 	at org.apache.lucene.search.spell.SpellChecker.setSpellIndex(SpellChecker.java:172)
   [junit4]   2> 	at org.apache.lucene.search.spell.SpellChecker.<init>(SpellChecker.java:150)
   [junit4]   2> 	at org.apache.solr.spelling.AbstractLuceneSpellChecker.init(AbstractLuceneSpellChecker.java:116)
   [junit4]   2> 	at org.apache.solr.spelling.IndexBasedSpellChecker.init(IndexBasedSpellChecker.java:52)
   [junit4]   2> 	at org.apache.solr.handler.component.SpellCheckComponent.addSpellChecker(SpellCheckComponent.java:759)
   [junit4]   2> 	at org.apache.solr.handler.component.SpellCheckComponent.inform(SpellCheckComponent.java:713)
   [junit4]   2> 	at org.apache.solr.core.SolrResourceLoader.inform(SolrResourceLoader.java:709)
   [junit4]   2> 	at org.apache.solr.core.SolrCore.<init>(SolrCore.java:1023)
   [junit4]   2> 	at org.apache.solr.core.SolrCore.<init>(SolrCore.java:901)
   [junit4]   2> 	at org.apache.solr.core.CoreContainer.createFromDescriptor(CoreContainer.java:1292)
   [junit4]   2> 	at org.apache.solr.core.CoreContainer.lambda$load$13(CoreContainer.java:788)
   [junit4]   2> 	at com.codahale.metrics.InstrumentedExecutorService$InstrumentedCallable.call(InstrumentedExecutorService.java:202)
   [junit4]   2> 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
   [junit4]   2> 	at org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor.lambda$execute$0(ExecutorUtil.java:210)
   [junit4]   2> 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
   [junit4]   2> 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
   [junit4]   2> 	at java.base/java.lang.Thread.run(Thread.java:834)

{code}","16/Dec/19 15:30;ichattopadhyaya;Not just /boot, but it seems to be iterating over all entries in my / folder! Attaching log.","16/Dec/19 16:11;rcmuir;it is the lucene spinning-disk detector. on linux it tries to do evil stuff for your mount points (so its not /, but more like everything in 'df'). if it is confusing, it can be disabled via system property or i think configured explicit in CMS. It is about to be 2020 after all :)",,,,,,,,,,,,,,,,,
Eliminate 'Port Roulette' in Solr Testing,SOLR-13868,13264323,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,hossman,hossman,24/Oct/19 19:49,21/Jan/20 16:59,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"Although our testing is generally pretty good about not having hard coded ports, we still have some places in our code where we can encounter ""port roulette"" bugs -- expecting that a particular network port will be available to use to Bind to at some point in the test.

But instead of classic port bugs -- basing that assumption off of hardcoded ports -- the problematic portions of our test code expect that since a port *was* available to us previously (via code asking the OS to assign a port by binding to '0') it will _still_ be available to us later even if we release it.  But there is no guarantee the OS won't have already re-allocated that port to a different process/purpose.

I'm creating this issue to serve as a parent for Sub-Tasks targeting the specific instances where this problematic practice comes up.  Some of these can be solved easily, others may be more challenging.

This issue can also serve as a reference point for citating/linking from other jiras, in case there is any general discussion/concern about the overall problem, or in case new instances are discovered later.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-10-24 19:49:40.0,,,,,,,"0|z07xfc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Harden SystemCollectionCompatTest,SOLR-14126,13275612,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,hossman,hossman,19/Dec/19 23:38,21/Jan/20 16:59,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"Based on Historic jenkins failure stats, it appears that SystemCollectionCompatTest has had a fairly consistent 2-5% failure rate every week since it was added.

Based on the jenkins failure logs from the last 7 days, there appear to be 2 completely independent failure paths for this test -- but it's not clear if they indicate test problems or actual bugs.

i'll open a subtask to track each of them.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-12-19 23:38:12.0,,,,,,,"0|z09v3c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Assert returning ExtendedFileField,SOLR-13740,13254854,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,mkhl,mkhl,04/Sep/19 19:51,21/Jan/20 16:59,18/Feb/21 10:02,,,,,,,,Schema and Analysis,,,,,0,,,,"It works, commit sometimes later 
{code}
diff --git a/solr/core/src/test/org/apache/solr/schema/ExternalFileFieldSortTest.java b/solr/core/src/test/org/apache/solr/schema/ExternalFileFieldSortTest.java
index 632b413..4106e15 100644
--- a/solr/core/src/test/org/apache/solr/schema/ExternalFileFieldSortTest.java
+++ b/solr/core/src/test/org/apache/solr/schema/ExternalFileFieldSortTest.java
@@ -48,8 +48,9 @@
 
     addDocuments();
     assertQ(""query"",
-        req(""q"", ""*:*"", ""sort"", ""eff asc""),
+        req(""q"", ""*:*"", ""sort"", ""eff asc"", ""fl"", ""id,field(eff)""),
         ""//result/doc[position()=1]/str[.='3']"",
+        ""//result/doc[position()=1]/float[@name='field(eff)' and .='0.001']"",
         ""//result/doc[position()=2]/str[.='1']"",
         ""//result/doc[position()=10]/str[.='8']"");
   }
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-09-04 19:51:16.0,,,,,,,"0|z06bw0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Check that (negative) sharded join behavior is consistent ,SOLR-13716,13252750,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,mkhl,mkhl,23/Aug/19 20:13,21/Jan/20 16:58,18/Feb/21 10:02,,,,,,,,query parsers,,,,,0,,,,"Error might be inconsistent, make sure it's always the same. see the thread linked.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-08-23 20:13:43.0,,,,,,,"0|z05zrs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BasicDistributedZkTest reproducible jenkins failure due to exceeding file handle limit,SOLR-14179,13278227,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,hossman,hossman,08/Jan/20 18:29,21/Jan/20 16:58,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"jenkins recently found a reproducing seed for BasicDistributedZkTest - the exact failures can vary in each run, but the common root issue appears to be that with this seed it's very easy to hit ""Too many open files""...

{noformat}
   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=BasicDistributedZkTest -Dtests.method=test -Dtests.seed=DE4EDB45974CB32A -Dtests.multiplier=3 -Dtests.slow=true -Dtests.badapples=true -Dtests.locale=zh-TW -Dtests.timezone=Canada/Pacific -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1
   [junit4] ERROR   41.8s | BasicDistributedZkTest.test <<<
   [junit4]    > Throwable #1: org.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException: Error from server at http://127.0.0.1:44105/collection1: /home/hossman/lucene/alt_dev/solr/build/solr-core/test/J0/temp/solr.cloud.BasicDistributedZkTest_DE4EDB45974CB32A-001/index-SimpleFSDirectory-003/_x_MockRandom_0.tix: Too many open files
   [junit4]    > 	at __randomizedtesting.SeedInfo.seed([DE4EDB45974CB32A:561AE49F39B0DED2]:0)
   [junit4]    > 	at org.apache.solr.client.solrj.impl.HttpSolrClient.executeMethod(HttpSolrClient.java:665)
   [junit4]    > 	at org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:265)
   [junit4]    > 	at org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:248)
   [junit4]    > 	at org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:211)
   [junit4]    > 	at org.apache.solr.client.solrj.SolrClient.commit(SolrClient.java:504)
   [junit4]    > 	at org.apache.solr.client.solrj.SolrClient.commit(SolrClient.java:479)
   [junit4]    > 	at org.apache.solr.cloud.BasicDistributedZkTest.testUpdateProcessorsRunOnlyOnce(BasicDistributedZkTest.java:852)
   [junit4]    > 	at org.apache.solr.cloud.BasicDistributedZkTest.test(BasicDistributedZkTest.java:438)
   [junit4]    > 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
   [junit4]    > 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
   [junit4]    > 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
   [junit4]    > 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
   [junit4]    > 	at org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsFixedStatement.callStatement(BaseDistributedSearchTestCase.java:1082)
   [junit4]    > 	at org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsStatement.evaluate(BaseDistributedSearchTestCase.java:1054)
   [junit4]    > 	at java.base/java.lang.Thread.run(Thread.java:834)
   [junit4]   2> NOTE: leaving temporary files on disk at: /home/hossman/lucene/alt_dev/solr/build/solr-core/test/J0/temp/solr.cloud.BasicDistributedZkTest_DE4EDB45974CB32A-001
   [junit4]   2> Jan 08, 2020 11:27:32 AM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks
   [junit4]   2> WARNING: Will linger awaiting termination of 1 leaked thread(s).
   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene84): {regex_dup_A_s=PostingsFormat(name=LuceneVarGapFixedInterval), regex_dup_B_s=Lucene84, SubjectTerms_mfacet=PostingsFormat(name=MockRandom), multiDefault=Lucene84, _root_=PostingsFormat(name=MockRandom), genre_s=PostingsFormat(name=LuceneVarGapDocFreqInterval), author_t=PostingsFormat(name=MockRandom), series_t=PostingsFormat(name=MockRandom), rnd_b=PostingsFormat(name=LuceneVarGapDocFreqInterval), oddField_s=PostingsFormat(name=LuceneVarGapDocFreqInterval), a_t=Lucene84, cat=Lucene84, foo_b=PostingsFormat(name=LuceneVarGapFixedInterval), name=PostingsFormat(name=LuceneVarGapDocFreqInterval), inStock=PostingsFormat(name=LuceneVarGapFixedInterval), id=PostingsFormat(name=LuceneVarGapDocFreqInterval), text=PostingsFormat(name=LuceneVarGapFixedInterval), t_sortable=PostingsFormat(name=LuceneVarGapDocFreqInterval)}, docValues:{other_tl1=DocValuesFormat(name=Lucene80), range_facet_l_dv=DocValuesFormat(name=Direct), n_l1=DocValuesFormat(name=Asserting), intDefault=DocValuesFormat(name=Lucene80), n_td1=DocValuesFormat(name=Lucene80), n_d1=DocValuesFormat(name=Asserting), range_facet_l=DocValuesFormat(name=Asserting), n_f1=DocValuesFormat(name=Lucene80), n_tl1=DocValuesFormat(name=Lucene80), n_tf1=DocValuesFormat(name=Asserting), price=DocValuesFormat(name=Lucene80), sequence_i=DocValuesFormat(name=Direct), intDvoDefault=DocValuesFormat(name=Direct), t_sortable=DocValuesFormat(name=Direct), timestamp=DocValuesFormat(name=Asserting), foo_i=DocValuesFormat(name=Lucene80), val_i=DocValuesFormat(name=Direct), n_dt1=DocValuesFormat(name=Lucene80), a_i1=DocValuesFormat(name=Asserting), n_ti1=DocValuesFormat(name=Direct), _version_=DocValuesFormat(name=Lucene80), n_tdt1=DocValuesFormat(name=Lucene80), id_i1=DocValuesFormat(name=Lucene80), foo_d=DocValuesFormat(name=Direct), range_facet_i_dv=DocValuesFormat(name=Asserting), foo_f=DocValuesFormat(name=Lucene80)}, maxPointsInLeafNode=1214, maxMBSortInHeap=7.926887523783416, sim=Asserting(org.apache.lucene.search.similarities.AssertingSimilarity@4ead536d), locale=zh-TW, timezone=Canada/Pacific
   [junit4]   2> NOTE: Linux 5.0.0-32-generic amd64/AdoptOpenJDK 11.0.4 (64-bit)/cpus=8,threads=2,free=135495624,total=522190848
   [junit4]   2> NOTE: All tests run in this JVM: [BasicDistributedZkTest]

{noformat}",,,,,,,,,,,,,,,,,,,,"08/Jan/20 18:28;hossman;thetaphi_Lucene-Solr-8.x-Linux_1752.log.txt;https://issues.apache.org/jira/secure/attachment/12990239/thetaphi_Lucene-Solr-8.x-Linux_1752.log.txt",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2020-01-08 18:29:37.0,,,,,,,"0|z0ab7s:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TimeRoutedAliasUpdateProcessorTest.testDateMathInStart: multi-threaded race condition due to ZK assumptions,SOLR-13943,13269197,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,gus,hossman,hossman,18/Nov/19 23:25,21/Jan/20 16:58,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"TimeRoutedAliasUpdateProcessorTest does not currently run in many jenkins builds due to being marked BadApple(SOLR-13059) -- however when it does run, the method {{testDateMathInStart}} frequently fails due to what appears to be a multi-threaded race condition in the test logic...

{noformat}
   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TimeRoutedAliasUpdateProcessorTest -Dtests.method=testDateMathInStart -Dtests.seed=8879E35521A4B9EA -Dtests.multiplier=2 -Dtests.
slow=true -Dtests.badapples=true -Dtests.locale=nl-BQ -Dtests.timezone=America/Porto_Acre -Dtests.asserts=true -Dtests.file.encoding=UTF-8
   [junit4] FAILURE 6.96s J0 | TimeRoutedAliasUpdateProcessorTest.testDateMathInStart <<<
   [junit4]    > Throwable #1: java.lang.AssertionError: router.start should not have any date math by this point and parse as an instant. Using class org.apache.solr.client.solrj.impl.ZkCl
ientClusterStateProvider Found:2019-09-14T03:00:00Z/DAY
   [junit4]    >        at __randomizedtesting.SeedInfo.seed([8879E35521A4B9EA:64FE3DD88112B802]:0)
   [junit4]    >        at org.apache.solr.update.processor.TimeRoutedAliasUpdateProcessorTest.testDateMathInStart(TimeRoutedAliasUpdateProcessorTest.java:765)
   [junit4]    >        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
   [junit4]    >        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
   [junit4]    >        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
   [junit4]    >        at java.base/java.lang.reflect.Method.invoke(Method.java:566)
   [junit4]    >        at java.base/java.lang.Thread.run(Thread.java:834)
{noformat}

I'll attach some logs from recent failures and my own quick analysis of the problems of how the test appears to be asserting ZK updates.
",,,,,,,,,,,,,,,,SOLR-13059,,,,"18/Nov/19 23:26;hossman;apache_Lucene-Solr-BadApples-Tests-master_531.log.txt;https://issues.apache.org/jira/secure/attachment/12986173/apache_Lucene-Solr-BadApples-Tests-master_531.log.txt","18/Nov/19 23:26;hossman;apache_Lucene-Solr-BadApples-Tests-master_533.log.txt;https://issues.apache.org/jira/secure/attachment/12986174/apache_Lucene-Solr-BadApples-Tests-master_533.log.txt","18/Nov/19 23:26;hossman;apache_Lucene-Solr-repro-Java11_618.log.txt;https://issues.apache.org/jira/secure/attachment/12986175/apache_Lucene-Solr-repro-Java11_618.log.txt",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2019-11-18 23:32:31.391,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 19 00:56:59 UTC 2019,,,,,,,"0|z08ri8:",9223372036854775807,,,,,,,,,,,,,,,"18/Nov/19 23:26;hossman;
The root cause of the problem apperas to be that the test assumes it can set a ""watcher"" on ZK to monitor for changes to {{/aliases.json}} and then {{await()}} on a latch that will be updated when that watcher fires.  Once the {{await()}} returns, it tries to parse the {{ROUTER_START}} property of the (updated) alias.

The problem with this approach, is that when ZK updates result in notifying watchers, there is no garuntee which order the watchers are called in or how quickly they will be called.  The watcher registered (and {{await()}}ed) by the test thread can fire before the {{AliasesManager}} is updated in the {{ZkStateReader}} used by the {{ZkClientClusterStateProvider}} -- _which is what the test consults when asserting the value of the {{ROUTER_START}} property_.

The test either needs to ignore the {{clusterStateProvider}} and use the data provided to it's own watcher to veirfying the property was updated as expected, *OR* it needs to ""hook in"" to the {{ZkStateReader}} / {{AliasesManager}} and only proceed once they aware of the latest {{aliases.json}} information.

----

FWIW: I notice that the {{AliasesManager}} is public on {{ZkStateReader}} and has a a public {{update()}} method that forces a sync with ZK.

While it's almost certianly not a best practice to do force sync's with ZK in production code, doing so here *using the ZkStateReader of the underlying {{ClusterStateProvider}}* after the {{aliasUpdate.await()}} may be suitable for test purposes?

I should also point out: if monitoring/wating on {{/alias.json}} updates is a common occurance (even if just for tests), there should probably be public APIs for doing so similar to the {{DocCollectionWatcher}}, {{CollectionPropsWatcher}}, and {{LiveNodesWatcher}} APIs
","18/Nov/19 23:32;jira-bot;Commit 59465c20c462147f0239449ea43f4844cfa585c2 in lucene-solr's branch refs/heads/master from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=59465c2 ]

SOLR-13943: AwaitsFix TimeRoutedAliasUpdateProcessorTest.testDateMathInStart
","18/Nov/19 23:36;jira-bot;Commit 8759dea69adfadfcfd448aeae2cafc8273f0912d in lucene-solr's branch refs/heads/branch_8x from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=8759dea ]

SOLR-13943: AwaitsFix TimeRoutedAliasUpdateProcessorTest.testDateMathInStart

(cherry picked from commit 59465c20c462147f0239449ea43f4844cfa585c2)
","18/Nov/19 23:37;hossman;assigning to gus in the hopes that he can take a look and refactor the test to remove the race condition.","19/Nov/19 00:56;gus;Thanks Chris! I had noticed and been irritated by this but not yet had time to dig into it.  Your analysis is very helpful.  I'll try to work on it this weekend.",,,,,,,,,,,,,,,,,,,,,,,
contrib/ltr (and maybe others?) does not have test logging configured correctly,SOLR-13777,13257538,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,hossman,hossman,19/Sep/19 00:01,21/Jan/20 16:58,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"i'm not 100% certain what magical properties/files are needed to get test logging setup consistently across all solr modules, but it doesn't seem to be in place for contrib/ltr.

Consider this trivial example...

{noformat}
hossman@slate:~/lucene/dev/solr/contrib/ltr [j11] [master] $ ant test -Dtestcase=TestManagedFeatureStore -Dtests.showSuccess=true
...
-test:
   [junit4] <JUnit4> says 你好! Master seed: CEC8592E171B132F
   [junit4] Executing 1 suite with 1 JVM.
   [junit4] 
   [junit4] Started J0 PID(18975@slate).
   [junit4] Suite: org.apache.solr.ltr.store.rest.TestManagedFeatureStore
   [junit4]   2> ERROR StatusLogger No Log4j 2 configuration file found. Using default configuration (logging only errors to the console), or user programmatically provided configurations. Set system property 'log4j2.debug' to show Log4j 2 internal initialization logging. See https://logging.apache.org/log4j/2.x/manual/configuration.html for instructions on how to configure Log4j 2
   [junit4] OK      2.37s | TestManagedFeatureStore.testMissingFeatureReturnsNull
   [junit4] OK      0.66s | TestManagedFeatureStore.testDefaultFeatureStoreName
   [junit4] OK      0.48s | TestManagedFeatureStore.getInstanceTest
   [junit4] OK      0.34s | TestManagedFeatureStore.testFeatureStoreAdd
   [junit4] OK      0.35s | TestManagedFeatureStore.getInvalidInstanceTest
   [junit4] OK      0.35s | TestManagedFeatureStore.testFeatureStoreGet
   [junit4] Completed [1/1] in 5.71s, 6 tests
...
{noformat}

Notably this means that when tests in this module fail as part of jenkins builds, the only thing that gets logged is the final exception -- not any of the normal test scafolding (like what randomized SSL/clientAuth values were used) or logging leading up to that failure.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-09-19 00:01:18.0,,,,,,,"0|z06sfk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MathExpressionTest non-reproducible failures due to assertions of non-absolutes and randomization beyond test seed,SOLR-13864,13264089,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,jbernste,hossman,hossman,23/Oct/19 18:16,21/Jan/20 16:58,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"We're seeing a a fairly steady trickle of MathExpressionTest from various jenkins boxes going back quite a while ... mostly from testGammaDistribution, but other tests pop up now and then.

the crux of the problem with this test seems to break down into 2 categories:
 # tests that make assumptions about the relative values that will come out of taking samples from different random distributions that aren't garunteed to be true
 ** ie: comparing 2 random samples from 2 diff shaped gamma distributions and expecting one to always be strictly greater then the other. I'm not a stats guy, but my naive understanding is that on the low end some of these shapes may cross over, so every possible random sample from one shape is not garunteed to be less then every ossible random sample from a diff shape
 # the code being tested does it's own randomization outside of the crontrol of the test framework (or test client)
 ** this causes the seeds to not reproduce

----
Tests should not be making assertions about random data that aren't 100% garunteed to be true in all cases (ie: {{random().nextInt(5) < (5.0D + (double) random().nextInt(5))}} is one thing, {{random().nextInt(5) < (4.99999D + (double) random().nextInt(5))}} is a diff story.

Randomized behavior in solr (non-test) code should ideally have some way for being controlled by the client/tests ... either via a request param used to initialize any new Random instances, or for example the use of the ""tests.seed"" property in various places in the code to try and provide some reproducibility even when the external solr client isn't even aware of randomization being a factor in the behavior of the code.",,,,,,,,,,,,,,,,,,,,"12/Nov/19 20:37;hossman;apache_Lucene-Solr-BadApples-Tests-master_531.log.txt;https://issues.apache.org/jira/secure/attachment/12985657/apache_Lucene-Solr-BadApples-Tests-master_531.log.txt",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2019-11-05 14:29:47.937,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 13 00:26:04 UTC 2019,,,,,,,"0|z07vzc:",9223372036854775807,,,,,,,,,,,,,,,"23/Oct/19 18:16;hossman;Examples of recent (non-reproducible) failures...
{noformat}
apache_Lucene-Solr-NightlyTests-8.x_245.log.txt:   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=MathExpressionTest -Dtests.method=testGammaDistribution -Dtests.seed=62B2829CCD203ECC -Dtests.multiplier=2 -Dtests.nightly=true -Dtests.slow=true -Dtests.linedocsfile=/home/jenkins/jenkins-slave/workspace/Lucene-Solr-NightlyTests-8.x/test-data/enwiki.random.lines.txt -Dtests.locale=en-MT -Dtests.timezone=Indian/Comoro -Dtests.asserts=true -Dtests.file.encoding=UTF-8
apache_Lucene-Solr-NightlyTests-8.x_245.log.txt-   [junit4] FAILURE 0.20s J1 | MathExpressionTest.testGammaDistribution <<<
apache_Lucene-Solr-NightlyTests-8.x_245.log.txt-   [junit4]    > Throwable #1: java.lang.AssertionError: 0.8040745659900277 0.8279168504973756
apache_Lucene-Solr-NightlyTests-8.x_245.log.txt-   [junit4]    > 	at __randomizedtesting.SeedInfo.seed([62B2829CCD203ECC:5FC8A932EE5894DB]:0)
apache_Lucene-Solr-NightlyTests-8.x_245.log.txt-   [junit4]    > 	at org.apache.solr.client.solrj.io.stream.MathExpressionTest.testGammaDistribution(MathExpressionTest.java:5147)
--
apache_Lucene-Solr-Tests-8.3_59.log.txt:   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=MathExpressionTest -Dtests.method=testGammaDistribution -Dtests.seed=787CC6375426DE7C -Dtests.multiplier=2 -Dtests.slow=true -Dtests.locale=es-CU -Dtests.timezone=America/Porto_Velho -Dtests.asserts=true -Dtests.file.encoding=UTF-8
apache_Lucene-Solr-Tests-8.3_59.log.txt-   [junit4] FAILURE 0.15s J2 | MathExpressionTest.testGammaDistribution <<<
apache_Lucene-Solr-Tests-8.3_59.log.txt-   [junit4]    > Throwable #1: java.lang.AssertionError: 0.8002267235282494 0.8028839656135557
apache_Lucene-Solr-Tests-8.3_59.log.txt-   [junit4]    > 	at __randomizedtesting.SeedInfo.seed([787CC6375426DE7C:4506ED99775E746B]:0)
apache_Lucene-Solr-Tests-8.3_59.log.txt-   [junit4]    > 	at org.apache.solr.client.solrj.io.stream.MathExpressionTest.testGammaDistribution(MathExpressionTest.java:5147)
--
apache_Lucene-Solr-Tests-8.x_724.log.txt:   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=MathExpressionTest -Dtests.method=testGammaDistribution -Dtests.seed=434AE7D0EEA429C2 -Dtests.multiplier=2 -Dtests.slow=true -Dtests.locale=es-GT -Dtests.timezone=Indian/Kerguelen -Dtests.asserts=true -Dtests.file.encoding=UTF-8
apache_Lucene-Solr-Tests-8.x_724.log.txt-   [junit4] FAILURE 1.51s J0 | MathExpressionTest.testGammaDistribution <<<
apache_Lucene-Solr-Tests-8.x_724.log.txt-   [junit4]    > Throwable #1: java.lang.AssertionError: 0.8329074504421361 0.8595661849933443
apache_Lucene-Solr-Tests-8.x_724.log.txt-   [junit4]    > 	at __randomizedtesting.SeedInfo.seed([434AE7D0EEA429C2:7E30CC7ECDDC83D5]:0)
apache_Lucene-Solr-Tests-8.x_724.log.txt-   [junit4]    > 	at org.apache.solr.client.solrj.io.stream.MathExpressionTest.testGammaDistribution(MathExpressionTest.java:5147)
{noformat}
MathExpressionTest Jenkins so far this year...
{noformat}
reports/archive/daily$ zgrep MathExpressionTest 2019*.method-failures.csv.gz
2019-01-02.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,sarowe/Lucene-Solr-tests-7.x/7518/
2019-01-04.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-master-Linux/23464/
2019-01-06.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,initializationError,sarowe/Lucene-Solr-tests-7.x/7592/
2019-01-10.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,sarowe/Lucene-Solr-tests-master/19995/
2019-01-20.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,,sarowe/Lucene-Solr-tests-7.x/7768/
2019-01-20.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,,sarowe/Lucene-Solr-tests-7.x/7768/
2019-01-24.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-7.x-Linux/3445/
2019-01-26.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,sarowe/Lucene-Solr-BadApples-tests-7.x/303/
2019-01-26.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-8.x-Windows/27/
2019-01-26.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testZipFDistribution,apache/Lucene-Solr-BadApples-Tests-8.x/11/
2019-01-27.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,sarowe/Lucene-Solr-tests-master/20142/
2019-01-28.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-master-Solaris/2278/
2019-01-31.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,sarowe/Lucene-Solr-tests-master/20167/
2019-01-31.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-8.x-Linux/111/
2019-02-06.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-master-Linux/23631/
2019-02-08.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-7.7-Linux/148/
2019-02-08.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-7.7-Linux/151/
2019-02-08.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testZipFDistribution,thetaphi/Lucene-Solr-7.7-Linux/148/
2019-02-10.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,apache/Lucene-Solr-Tests-8.x/30/
2019-02-11.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testZipFDistribution,thetaphi/Lucene-Solr-7.x-Linux/3533/
2019-02-17.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-master-Windows/7731/
2019-02-19.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,apache/Lucene-Solr-Tests-8.0/4/
2019-02-22.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,apache/Lucene-Solr-Tests-master/3185/
2019-03-19.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testZipFDistribution,apache/Lucene-Solr-NightlyTests-8.x/48/
2019-03-20.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,sarowe/Lucene-Solr-tests-master/20346/
2019-03-21.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,apache/Lucene-Solr-Tests-8.x/78/
2019-03-27.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,sarowe/Lucene-Solr-tests-master/20556/
2019-04-02.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,apache/Lucene-Solr-Clover-8.x/12/
2019-04-03.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,sarowe/Lucene-Solr-tests-master/20757/
2019-04-05.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,sarowe/Lucene-Solr-tests-master/20819/
2019-04-06.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,apache/Lucene-Solr-Tests-master/3248/
2019-04-15.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,sarowe/Lucene-Solr-tests-master/20938/
2019-04-16.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-8.x-Linux/412/
2019-04-17.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testFuzzyKmeans,sarowe/Lucene-Solr-tests-master/20979/
2019-04-19.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-8.x-Solaris/83/
2019-04-20.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-master-MacOSX/5104/
2019-05-03.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-master-Linux/24025/
2019-05-08.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-8.1-Linux/299/
2019-05-14.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-8.x-Linux/554/
2019-05-19.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,apache/Lucene-Solr-BadApples-Tests-8.x/105/
2019-05-27.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-master-Linux/24151/
2019-06-26.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGeometricDistribution,apache/Lucene-Solr-Tests-8.1/63/
2019-07-06.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-master-MacOSX/5243/
2019-07-15.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-8.x-MacOSX/243/
2019-09-17.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testZipFDistribution,thetaphi/Lucene-Solr-8.x-Linux/1226/
2019-10-02.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-8.x-MacOSX/357/
2019-10-03.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testZipFDistribution,thetaphi/Lucene-Solr-8.x-Linux/1326/
2019-10-13.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,thetaphi/Lucene-Solr-master-Linux/24905/
2019-10-19.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,apache/Lucene-Solr-Tests-8.x/724/
2019-10-22.method-failures.csv.gz:org.apache.solr.client.solrj.io.stream.MathExpressionTest,testGammaDistribution,apache/Lucene-Solr-NightlyTests-8.x/245/
{noformat}","23/Oct/19 18:19;hossman;Hey [~jbernste] - any thoughts on these two issues? 

Fixing the reproducibility aspects of the code seems like it may be hard given how much of the match code is based on randomization (including randomization built into external libraries) but can you take a look at some of these failures and see if there are ways to harden the assertions themselves to be more absolute regardless of the random data?","05/Nov/19 14:29;jbernste;I'll fix this. I went overboard on these tests. No need to test that the random behavior is as expected. Just need to test the function works and it brings back results that look right. We're not testing that the underlying math is right, those tests are in Apache Commons math, we're just testing the integration is working.

 

 ","05/Nov/19 20:15;jira-bot;Commit 4f849e7a496e9ce0065d65390642af9949f60a65 in lucene-solr's branch refs/heads/master from Joel Bernstein
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=4f849e7 ]

SOLR-13864: MathExpressionTest non-reproducible failures due to assertions of non-absolutes and randomization beyond test seed
","05/Nov/19 20:16;jira-bot;Commit e4f23388dc2e520ea65618edbe6aec008dc9cc6a in lucene-solr's branch refs/heads/branch_8x from Joel Bernstein
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=e4f2338 ]

SOLR-13864: MathExpressionTest non-reproducible failures due to assertions of non-absolutes and randomization beyond test seed
","05/Nov/19 20:19;jbernste;I pushed a fix that made the test non-probabilistic and also tests more functions than just sampling. This test should pass every time, unless there is something that I'm not understanding about how the underlying commons math api works.","12/Nov/19 20:37;hossman;[~jbernste] - it looks like you only fixed testGammaDistribution ?

what about testZipFDistribution, testGeometricDistribution, and testFuzzyKmeans ? ... as mentioned above they also seem to fail sporadically due to explicit assumptions about the underlying random distributions.

Attaching a recent jenkins failure from testZipFDistribution...

{noformat}
   [junit4]   2> 288619 INFO  (TEST-MathExpressionTest.testZipFDistribution-seed#[4B489A4C6D218B8D]) [     ] o.a.s.SolrTestCaseJ4 ###Ending testZipFDistribution
   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=MathExpressionTest -Dtests.method=testZipFDistribution -Dtests.seed=4B489A4C6D218B8D -Dtests.multiplier=2 -Dtests.slow=true -Dtests.badapples=true -Dtests.locale=ja-JP -Dtests.timezone=America/St_Lucia -Dtests.asserts=true -Dtests.file.encoding=UTF-8
   [junit4] ERROR   0.07s J1 | MathExpressionTest.testZipFDistribution <<<
   [junit4]    > Throwable #1: java.lang.Exception: Zipf distribution not descending!!!
   [junit4]    >        at __randomizedtesting.SeedInfo.seed([4B489A4C6D218B8D:6FFDF7687A8983A5]:0)
   [junit4]    >        at org.apache.solr.client.solrj.io.stream.MathExpressionTest.testZipFDistribution(MathExpressionTest.java:3766)
{noformat}","12/Nov/19 20:41;jira-bot;-Commit 603be023feaf3f8e3e739e532b488068710d9097 in lucene-solr's branch refs/heads/master from Chris M. Hostetter-
 -[ [https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=603be02] ]-

-SOLR-13864: SolrTestCaseJ4.getNextAvailablePort() has been deprecated-

Mistaken Jira tagging in commit message","12/Nov/19 20:50;jira-bot;-Commit b872863da9e06a9f21562830cbd26d24d30a8138 in lucene-solr's branch refs/heads/branch_8x from Chris M. Hostetter-
 -[ [https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=b872863] ]-

-SOLR-13864: SolrTestCaseJ4.getNextAvailablePort() has been deprecated-

-(cherry picked from commit 603be023feaf3f8e3e739e532b488068710d9097)-

Mistaken Jira tagging in commit message","13/Nov/19 00:26;jbernste;[~hossman], I'll fix the others as well. ",,,,,,,,,,,,,,,,,,
DimensionalRoutedAliasUpdateProcessorTest / RoutedAliasUpdateProcessorTest failures due commitWithin/openSearcher delays,SOLR-13696,13250879,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,gus,hossman,hossman,14/Aug/19 21:32,21/Jan/20 16:57,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"Recent jenkins failure...
Build: https://jenkins.thetaphi.de/job/Lucene-Solr-8.x-MacOSX/272/
Java: 64bit/jdk1.8.0 -XX:-UseCompressedOops -XX:+UseParallelGC
{noformat}
Stack Trace:
java.lang.AssertionError: expected:<16> but was:<15>
        at __randomizedtesting.SeedInfo.seed([DB6DC28D5560B1D2:E295833E1541FDB9]:0)
        at org.junit.Assert.fail(Assert.java:88)
        at org.junit.Assert.failNotEquals(Assert.java:834)
        at org.junit.Assert.assertEquals(Assert.java:645)
        at org.junit.Assert.assertEquals(Assert.java:631)
        at
org.apache.solr.update.processor.DimensionalRoutedAliasUpdateProcessorTest.assertCatTimeInvariants(DimensionalRoutedAliasUpdateProcessorTest.java:677
)
        at org.apache.solr.update.processor.DimensionalRoutedAliasUpdateProcessorTest.testTimeCat(DimensionalRoutedAliasUpdateProcessorTest.java:282)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
{noformat}

Digging into the logs, the problem appears to be in the way the test verifies/assumes docs have been committed.",,,,,,,,,,,,,,,,,,,,"14/Aug/19 21:30;hossman;thetaphi_Lucene-Solr-8.x-MacOSX_272.log.txt;https://issues.apache.org/jira/secure/attachment/12977648/thetaphi_Lucene-Solr-8.x-MacOSX_272.log.txt",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2019-08-16 03:51:53.477,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 17 20:11:12 UTC 2019,,,,,,,"0|z05oco:",9223372036854775807,,,,,,,,,,,,,,,"14/Aug/19 21:38;hossman;Gus: can you please take a look at this?

based on my assessment, here's the crucial bits of the log..
{noformat}
hossman@tray:~/tmp/jenkins/DimensionalRoutedAliasUpdateProcessorTest$ grep testTimeCat__TRA__2019-07-05__CRA__calico thetaphi_Lucene-Solr-8.x-MacOSX_272.log.txt | egrep '(Opening \[Searcher|add=\[21|fq=cat_s:calico|\{\!terms\+f%3Did}21,20.*hits=2)'
   [junit4]   2> 4476175 INFO  (qtp759508539-75005) [n:127.0.0.1:55915_solr c:testTimeCat__TRA__2019-07-05__CRA__calico s:shard1 r:core_node5 x:testTimeCat__TRA__2019-07-05__CRA__calico_shard1_replica_n2 ] o.a.s.s.SolrIndexSearcher Opening [Searcher@9bc49f7[testTimeCat__TRA__2019-07-05__CRA__calico_shard1_replica_n2] main]
   [junit4]   2> 4476176 INFO  (qtp1536738594-75022) [n:127.0.0.1:55916_solr c:testTimeCat__TRA__2019-07-05__CRA__calico s:shard1 r:core_node3 x:testTimeCat__TRA__2019-07-05__CRA__calico_shard1_replica_n1 ] o.a.s.s.SolrIndexSearcher Opening [Searcher@5547583d[testTimeCat__TRA__2019-07-05__CRA__calico_shard1_replica_n1] main]
   [junit4]   2> 4476186 INFO  (qtp1998715126-75500) [n:127.0.0.1:55917_solr c:testTimeCat__TRA__2019-07-05__CRA__calico s:shard2 r:core_node8 x:testTimeCat__TRA__2019-07-05__CRA__calico_shard2_replica_n7 ] o.a.s.s.SolrIndexSearcher Opening [Searcher@3d40f0e1[testTimeCat__TRA__2019-07-05__CRA__calico_shard2_replica_n7] main]
   [junit4]   2> 4476195 INFO  (qtp927691752-75020) [n:127.0.0.1:55918_solr c:testTimeCat__TRA__2019-07-05__CRA__calico s:shard2 r:core_node6 x:testTimeCat__TRA__2019-07-05__CRA__calico_shard2_replica_n4 ] o.a.s.s.SolrIndexSearcher Opening [Searcher@18c82bc1[testTimeCat__TRA__2019-07-05__CRA__calico_shard2_replica_n4] main]
   [junit4]   2> 4477375 INFO  (qtp1998715126-75016) [n:127.0.0.1:55917_solr c:testTimeCat__TRA__2019-07-05__CRA__calico s:shard2 r:core_node8 x:testTimeCat__TRA__2019-07-05__CRA__calico_shard2_replica_n7 ] o.a.s.u.p.LogUpdateProcessorFactory [testTimeCat__TRA__2019-07-05__CRA__calico_shard2_replica_n7]  webapp=/solr path=/update params={update.distrib=FROMLEADER&distrib.from=http://127.0.0.1:55918/solr/testTimeCat__TRA__2019-07-05__CRA__calico_shard2_replica_n4/&wt=javabin&version=2}{add=[21 (1641811095092985856)]} 0 2
   [junit4]   2> 4477960 INFO  (qtp927691752-75506) [n:127.0.0.1:55918_solr c:testTimeCat__TRA__2019-07-05__CRA__calico s:shard2 r:core_node6 x:testTimeCat__TRA__2019-07-05__CRA__calico_shard2_replica_n4 ] o.a.s.u.p.LogUpdateProcessorFactory [testTimeCat__TRA__2019-07-05__CRA__calico_shard2_replica_n4]  webapp=/solr path=/update params={update.distrib=NONE&df=_text_&alias.update.distrib=TOLEADER&distrib.from=http://127.0.0.1:55918/solr/testTimeCat__TRA__2019-07-02__CRA__calico_shard2_replica_n6/&wt=javabin&version=2&processor=inc}{add=[21 (1641811095092985856)]} 0 590
   [junit4]   2> 4477962 INFO  (commitScheduler-24384-thread-1) [     ] o.a.s.s.SolrIndexSearcher Opening [Searcher@745b6c94[testTimeCat__TRA__2019-07-05__CRA__calico_shard2_replica_n4] main]
   [junit4]   2> 4478213 INFO  (qtp1998715126-75501) [n:127.0.0.1:55917_solr c:testTimeCat__TRA__2019-07-05__CRA__calico s:shard2 r:core_node8 x:testTimeCat__TRA__2019-07-05__CRA__calico_shard2_replica_n7 ] o.a.s.c.S.Request [testTimeCat__TRA__2019-07-05__CRA__calico_shard2_replica_n7]  webapp=/solr path=/select params={q={!terms+f%3Did}21,20&rows=0&wt=javabin&version=2} hits=2 status=0 QTime=13
   [junit4]   2> 4478408 INFO  (qtp1998715126-75016) [n:127.0.0.1:55917_solr c:testTimeCat__TRA__2019-07-05__CRA__calico s:shard2 r:core_node8 x:testTimeCat__TRA__2019-07-05__CRA__calico_shard2_replica_n7 ] o.a.s.c.S.Request [testTimeCat__TRA__2019-07-05__CRA__calico_shard2_replica_n7]  webapp=/solr path=/select params={df=_text_&distrib=false&fl=id&fl=score&shards.purpose=516&start=0&fsv=true&fq=cat_s:calico&shard.url=http://127.0.0.1:55917/solr/testTimeCat__TRA__2019-07-05__CRA__calico_shard2_replica_n7/|http://127.0.0.1:55918/solr/testTimeCat__TRA__2019-07-05__CRA__calico_shard2_replica_n4/&rows=0&version=2&q=*:*&stats=true&omitHeader=false&NOW=1565753074817&isShard=true&wt=javabin&stats.field=timestamp_dt} hits=0 status=0 QTime=0
   [junit4]   2> 4478408 INFO  (qtp1536738594-75032) [n:127.0.0.1:55916_solr c:testTimeCat__TRA__2019-07-05__CRA__calico s:shard1 r:core_node3 x:testTimeCat__TRA__2019-07-05__CRA__calico_shard1_replica_n1 ] o.a.s.c.S.Request [testTimeCat__TRA__2019-07-05__CRA__calico_shard1_replica_n1]  webapp=/solr path=/select params={df=_text_&distrib=false&fl=id&fl=score&shards.purpose=516&start=0&fsv=true&fq=cat_s:calico&shard.url=http://127.0.0.1:55916/solr/testTimeCat__TRA__2019-07-05__CRA__calico_shard1_replica_n1/|http://127.0.0.1:55915/solr/testTimeCat__TRA__2019-07-05__CRA__calico_shard1_replica_n2/&rows=0&version=2&q=*:*&stats=true&omitHeader=false&NOW=1565753074817&isShard=true&wt=javabin&stats.field=timestamp_dt} hits=0 status=0 QTime=0
   [junit4]   2> 4478408 INFO  (qtp1536738594-75031) [n:127.0.0.1:55916_solr c:testTimeCat__TRA__2019-07-05__CRA__calico s:shard1 r:core_node3 x:testTimeCat__TRA__2019-07-05__CRA__calico_shard1_replica_n1 ] o.a.s.c.S.Request [testTimeCat__TRA__2019-07-05__CRA__calico_shard1_replica_n1]  webapp=/solr path=/select params={q=*:*&stats=true&fq=cat_s:calico&rows=0&wt=javabin&version=2&stats.field=timestamp_dt} hits=0 status=0 QTime=1
   [junit4]   2> 4478461 INFO  (commitScheduler-24386-thread-1) [     ] o.a.s.s.SolrIndexSearcher Opening [Searcher@4ab6f7d7[testTimeCat__TRA__2019-07-05__CRA__calico_shard2_replica_n7] main]
{noformat}
Summary:
 * doc 21 is added to {{testTimeCat__TRA__2019-07-05__CRA__calico}}
 * the complicated ""check that it all got committed eventually"" logic in {{addDocsAndCommit()}} finds the 21 (and 20) on one replica
 ** but meanwhile {{testTimeCat__TRA__2019-07-05__CRA__calico_shard2_replica_n7}} hasn't finished opening the searcher
 * the test continues and eventually gets to the {{""stats=true&fq=cat_s:calico""}} request
 ** {{testTimeCat__TRA__2019-07-05__CRA__calico_shard2_replica_n7}} still hasn't finished opening the searcher
 ** test fails to find this doc

I think either this test (helper method) needs to stop using ""commitWithin"" or (if variations in routed alias code paths / behavior exist when commitWithin is used and we definitely want to test that) then the ""got committed eventually"" logic needs to be more robust and check *every* core (ie: loop over all the replicas of all the shards until you find the doc on at least one, then loop over all the other replicas of that same shard until you see that doc on all of them)

(this problem doesn't seem specific to DimensionalRoutedAliasUpdateProcessorTest , RoutedAliasUpdateProcessorTest and any other subcalsses using {{addDocsAndCommit()}} are also going to be affected)
----
Also: this test (and i presume others like it esting the routed aliases) would be a lot more robust and easier to debug if:
 * it had more logging about what it was doing to use as ""trace points"" when reading the logs
 * it made simpler/tighter assertions earlier in the flow ie:
 ** do the ""// verify that all the documents ended up in the right collections."" frequently
 *** idealy at the begining of {{assertCatTimeInvariants()}} call
 *** use a hardcoded number for the total docs expected (ie: don't rely on {{lastDocId - numDocsDeletedOrFailed}} ) so that people reading/debugging the test can sanity check exactly how many docs are expected at every point
 **** the {{lastDocId - numDocsDeletedOrFailed}} is actually really brittle, and will cause lots of headaches if anyone tries to add more docs/days to the test because of how ""router.1.autoDeleteAge"" is used
 ** ideally: change {{assertCatTimeInvariants()}} to take the expected number of docs per collection (as a map) instead of just a list a list of the expected collection names
 *** that way we can assert the specified number of docs exist in _each_ collection (ie: don't just checks that the docs we do find have field values that match the collection name)
 *** but first: use the sum of all values in that map to assert the total number of docs found in the collection","16/Aug/19 03:51;gus;Thx for the write up and suggestions. I will look as soon as I can, but this weekend is not looking likely due to weekend commitments & visiting family. Possibly by Monday or Tuesday I'll just declare a solr day (or half day) for myself, there are several things I want to look at that keep getting pushed. Routed Alias tests in general do seem to run up against the timing sorts of issues frequently. I've had no end of trouble with various bits of code that need to wait for a collection to be available, or a zookeeper related change to be visible (or both) etc. The existing wait methods for that stuff all seem to fail some small fraction of a percent of the time... for example SOLR-13059... which is among the things on my list to go back and check the status of and see if it's improved or if anything I've learned since makes the solution more obvious...","17/Dec/19 18:00;jira-bot;Commit 33e44b2fd6973aa801d8bad2b64ff1931d885ee3 in lucene-solr's branch refs/heads/master from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=33e44b2 ]

SOLR-13696: AwaitsFix RoutedAliasUpdateProcessorTest (and subclasses)

The helper method RoutedAliasUpdateProcessorTest.addDocsAndCommit doesn't guarantee docs have been committed when it returns, causing threading/timing bugs in tests that use it as a gate for making subsequent assertions -- causing a steady stream of jenkins test failures
","17/Dec/19 18:10;jira-bot;Commit c9bd7cedc270fc08b480b229930dc456a5cfdd88 in lucene-solr's branch refs/heads/branch_8x from Chris M. Hostetter
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=c9bd7ce ]

SOLR-13696: AwaitsFix RoutedAliasUpdateProcessorTest (and subclasses)

The helper method RoutedAliasUpdateProcessorTest.addDocsAndCommit doesn't guarantee docs have been committed when it returns, causing threading/timing bugs in tests that use it as a gate for making subsequent assertions -- causing a steady stream of jenkins test failures

(cherry picked from commit 33e44b2fd6973aa801d8bad2b64ff1931d885ee3)
","17/Dec/19 20:11;ichattopadhyaya;Are these related to https://issues.apache.org/jira/browse/SOLR-13997?",,,,,,,,,,,,,,,,,,,,,,,
DistribPackageStore attempts to create filestore in read-only directory,SOLR-14096,13274761,Test,Reopened,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,dweiss,dweiss,16/Dec/19 13:29,21/Jan/20 16:57,18/Feb/21 10:02,,,,,,,,Tests,,,,,0,,,,"
I see this in the logs when running with security manager:

{code}
1645805 WARN  (SUITE-LoggingHandlerTest-seed#[DEADBEEF]-worker) [     ] o.a.s.f.DistribPackageStore Unable to create [/home/dweiss/work-ssd/lucene-solr/solr/core/build/resources/test/solr/.filestore] directory in SOLR_HOME [/home/dweiss/work-ssd/lucene-solr/solr/core/build/resources/test/solr].  Features requiring this directory may fail.
          => java.security.AccessControlException: access denied (""java.io.FilePermission"" ""/home/dweiss/work-ssd/lucene-solr/solr/core/build/resources/test/solr/.filestore"" ""write"")
	at java.base/java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)
java.security.AccessControlException: access denied (""java.io.FilePermission"" ""/home/dweiss/work-ssd/lucene-solr/solr/core/build/resources/test/solr/.filestore"" ""write"")
	at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472) ~[?:?]
	at java.security.AccessController.checkPermission(AccessController.java:897) ~[?:?]
	at java.lang.SecurityManager.checkPermission(SecurityManager.java:322) ~[?:?]
	at java.lang.SecurityManager.checkWrite(SecurityManager.java:752) ~[?:?]
	at java.io.File.mkdir(File.java:1323) ~[?:?]
	at java.io.File.mkdirs(File.java:1355) ~[?:?]
	at org.apache.solr.filestore.DistribPackageStore.ensurePackageStoreDir(DistribPackageStore.java:476) ~[main/:?]
	at org.apache.solr.filestore.DistribPackageStore.<init>(DistribPackageStore.java:65) ~[main/:?]
	at org.apache.solr.filestore.PackageStoreAPI.<init>(PackageStoreAPI.java:78) ~[main/:?]
	at org.apache.solr.core.CoreContainer.load(CoreContainer.java:619) ~[main/:?]
{code}",,,,,,,,,,,,,,,SOLR-14078,SOLR-13662,SOLR-14099,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2019-12-16 13:41:04.092,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 18 09:13:12 UTC 2019,,,,,,,"0|z09pu8:",9223372036854775807,,,,,,,,,,,,,,,"16/Dec/19 13:41;jpountz;This also caused a failure of org.apache.solr.handler.admin.LoggingHandlerTest when building a RC. ","16/Dec/19 13:45;dweiss;This test fails for me as well.","16/Dec/19 14:08;krisden;I already opened a Jira for this error. Looks like the folder recently changed names though. I haven't seen this cause test failures unless it's the new name?","16/Dec/19 14:09;krisden;SOLR-14078","16/Dec/19 14:30;ichattopadhyaya;Noble might be able to comment on the failure. I switched it back to filestore after it was briefly switched to .filestore. Kevin, IIUC, old name was fine with that test?","16/Dec/19 14:31;ichattopadhyaya;I'm looking into it, as Noble will only be back online after 6-8 hours.","16/Dec/19 14:32;dweiss;This test is flaky (that's one thing). The exception is just sprinkles on top. I don't think it's the cause of the failure. Async logging handlers in log4j are probably responsible for test failures - on slower machines it'll break.","16/Dec/19 14:36;ichattopadhyaya;bq. This test is flaky (that's one thing). The exception is just sprinkles on top. I don't think it's the cause of the failure. Async logging handlers in log4j are probably responsible for test failures - on slower machines it'll break.
David, you mean LoggingHandlerTest is flaky and unrelated to that security exception with the filestore? (Sorry, I just saw both thse issues just now, trying to parse the context.)","16/Dec/19 14:45;ichattopadhyaya;I just beasted this test, and seems to pass. What could be happening is that TestDistribPackageStore is setting -Denable.packages.true, but not unsetting it. So, while that doesn't cause failure in TestDistribPackageStore, but is causing failure in some other test sharing that JVM.

While it is bad that TestDistribPackageStore itself is not failing, I'm going to unset that property to make sure other tests remain fine.","16/Dec/19 14:48;dweiss;Yes, I believe these are unrelated things. LoggingHandlerTest sometimes succeeds even if the exception is still thrown/ reported inside.
{code}
./gradlew -p solr/core test --tests LoggingHandlerTest -Ptests.useSecurityManager=true -Ptests.verbose=true
{code}","16/Dec/19 14:50;jira-bot;Commit ee0b066ab63ab21645b91c5a190b157fa56b6ca7 in lucene-solr's branch refs/heads/master from Ishan Chattopadhyaya
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=ee0b066 ]

SOLR-14096: Stopping -Denable.packages=true from leaking to other tests
","16/Dec/19 14:50;jira-bot;Commit 461317062c833b0b38e09c41d31bfb0b472df0ec in lucene-solr's branch refs/heads/branch_8x from Ishan Chattopadhyaya
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=4613170 ]

SOLR-14096: Stopping -Denable.packages=true from leaking to other tests
","16/Dec/19 14:52;dweiss;Ant version:
{code}
ant test -Dtestcase=LoggingHandlerTest
{code}

results in the same:
{code}
   [junit4]   2> 2300 WARN  (SUITE-LoggingHandlerTest-seed#[2DC5A72073A6EBD]-worker) [     ] o.a.s.f.DistribPackageStore Unable to create [/home/dweiss/work/lucene-solr/solr/core/src/test-files/solr/.filestore] directory in SOLR_HOME [/home/dweiss/work/lucene-solr/solr/core/src/test-files/solr].  Features requiring this directory may fail.
   [junit4]   2>           => java.security.AccessControlException: access denied (""java.io.FilePermission"" ""/home/dweiss/work/lucene-solr/solr/core/src/test-files/solr/.filestore"" ""write"")
{code}
","16/Dec/19 14:54;jbernste;[~dweiss], [~krisden], I just commented on SOLR-14084, about another directory that is being created. Tests are passing for me that deal with this directory. Is there action now that needs to be taken about this or is this something can be cleaned up after the 8.4 release?","16/Dec/19 14:59;ichattopadhyaya;[~dweiss], are you using the latest commits? I see that your test reports "".filestore"", which has now been changed to ""filestore"". Can you please do a ""git pull"" to see if that still persists?

FYI, I've pushed a fix to stop proliferation of the ""enable.packages"" property to other tests. I've pushed to master and branch_8x, and will push to branch_8_4 after running the full tests.","16/Dec/19 15:09;jira-bot;Commit c91d36f50efb62e55bcc3a1adc0442b207018670 in lucene-solr's branch refs/heads/branch_8_4 from Ishan Chattopadhyaya
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=c91d36f ]

SOLR-14096: Stopping -Denable.packages=true from leaking to other tests
","16/Dec/19 15:10;ichattopadhyaya;[~jpountz], while LoggingHandlerTest failed because of some flakiness, at least you might not see the filestore related security exceptions in that test after the above fix.","16/Dec/19 15:13;dweiss;Test properties -are- should be restored by a test rule in the superclass. This ensures they're cleared properly for all tests, not just this one.

Yes, the problem with access denied still persists - that directory isn't accessible for writes, it's not about the name of the file but the location where it's attempted to be created.

{code}
   [junit4]   2> 2077 WARN  (SUITE-LoggingHandlerTest-seed#[38ED9C3873179893]-worker) [     ] o.a.s.f.DistribPackageStore Unable to create [/home/dweiss/work/lucene-solr/solr/core/src/test-files/solr/filestore] directory in SOLR_HOME [/home/dweiss/work/lucene-solr/solr/core/src/test-files/solr].  Features requiring this directory may fail.
   [junit4]   2>           => java.security.AccessControlException: access denied (""java.io.FilePermission"" ""/home/dweiss/work/lucene-solr/solr/core/src/test-files/solr/filestore"" ""write"")
   [junit4]   2>        at java.base/java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)
   [junit4]   2> java.security.AccessControlException: access denied (""java.io.FilePermission"" ""/home/dweiss/work/lucene-solr/solr/core/src/test-files/solr/filestore"" ""write"")
{code}","16/Dec/19 15:20;ichattopadhyaya;Oops.. should we re-open?","16/Dec/19 15:22;dweiss;Yes. Run it locally, you'll see the same exception (run it with ant, not IDE so that security manager and build locations are set properly).","16/Dec/19 15:25;erickerickson;{quote}bq. Async logging handlers in log4j are probably responsible for test failures - on slower machines it'll break
{quote}
It should be adequate to call
{code:java}
StartupLoggingUtils.flushAllLoggers() {code}
before looking to see if a log message has been written. I _might_ have put in some retry logic other times I saw this, if so don't use them as a pattern, they should be changed to call the above.","16/Dec/19 15:33;ichattopadhyaya;bq. Run it locally, you'll see the same exception (run it with ant, not IDE so that security manager and build locations are set properly).
I'm unable to reproduce it at all. I tried the following:

{code}
ant -Dtests.jvms=40 -Dtests.useSecurityManager=true test

ant -Dtests.dups=10 -Dtests.iters=10 -Dbeast.iters=10 -Dtestcase=LoggingHandlerTest beast

ant -Dtestcase=LoggingHandlerTest test
{code}

It always passes for me. I'm on Fedora 31,
{code}
Linux pseries 5.3.14-300.fc31.x86_64 #1 SMP Mon Dec 2 15:41:35 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux
{code}","16/Dec/19 16:37;dweiss;The test will pass. The exception is still there. Failures are intermittent and only present in full test cycle under load. I can't reproduce in isolation as well.","16/Dec/19 18:51;krisden;FYI [~hossman] just found SOLR-14099 which explains a lot of the interaction between LoggingHandlerTest and the package stuff I think.","16/Dec/19 18:56;hossman;bq. This also caused a failure of org.apache.solr.handler.admin.LoggingHandlerTest when building a RC

To be clear, errors in logs relating to creating the {{.filestore}} directory don't seem to have anything to do with LoggingHandlerTest failing.

LoggingHandlerTest is one of many (all?) tests to have log messages complaining about  {{.filestore}} regardless of whether the test passes of fails -- the failures are realted to changes made in SOLR-13662 and how that aparently tickles a bug in the {{@logLevel}} annotation (SOLR-14099)

thanks to [~krisden] for noting hte connection","17/Dec/19 12:39;jira-bot;Commit ee0b066ab63ab21645b91c5a190b157fa56b6ca7 in lucene-solr's branch refs/heads/gradle-master from Ishan Chattopadhyaya
[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=ee0b066 ]

SOLR-14096: Stopping -Denable.packages=true from leaking to other tests
","18/Dec/19 01:01;krisden;Ok so to recap.
* The LoggingHandlerTest issue is fixed in SOLR-14099.
* DistribPackageStore filestore creating a directory in the source tree is still wrong. 

I dug into DistribPackageStore in SOLR-14078 originally and found the following:

This is because of https://github.com/apache/lucene-solr/blob/master/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java#L2098

The TEST_HOME is right from the base directory where ""solr/collection1"" is found.

If there are multiple tests doing stuff to TEST_HOME at once, this would definitely cause issues.

This also causes lucene-solr/solr/core/src/test-files/solr/userfiles which is following the same pattern. [~jbernste] dug into this more in SOLR-14084. 

So long story short - SolrTestCaseJ4 TEST_HOME needs to be fixed.","18/Dec/19 09:13;dweiss;bq. So long story short - SolrTestCaseJ4 TEST_HOME needs to be fixed.

+1."
8.x HdfsWriteToMultipleCollectionsTest jenkins failures due to TImeoutException,SOLR-13856,13263665,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,hossman,hossman,21/Oct/19 22:21,21/Jan/20 16:56,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"I've noticed a trend in jenkins failures where HdfsWriteToMultipleCollectionsTest...

* does _NOT_ ever seem to fail on master even w/heavy beasting
* fails on 8.x (28c1049a258bbd060a80803c72e1c6cadc784dab) and 8.3 (25968e3b75e5e9a4f2a64de10500aae10a257bdd) easily
** failing seeds frequently reproduce, but not 100%
** seeds reproduce even when tested using newer (ie: java11) JVMs
** doesn't fail when commenting out HDFS aspects of test
*** suggests failure cause is somehow specific to HDFS, not differences in the 8x/master HTTP/solr indexing stack...

*However:* There are currently zero differences between the *.hdfs.* packaged solr code (src or test) on branch_8x vs master; likewise 8x and master also use the exact same hadoop jars.

So what the hell is different?",,,,,,,,,,,,,,,,,,,,"21/Oct/19 22:22;hossman;8.3.fail1.log.txt;https://issues.apache.org/jira/secure/attachment/12983662/8.3.fail1.log.txt","21/Oct/19 22:22;hossman;8.3.fail2.log.txt;https://issues.apache.org/jira/secure/attachment/12983663/8.3.fail2.log.txt","21/Oct/19 22:22;hossman;8.3.fail3.log.txt;https://issues.apache.org/jira/secure/attachment/12983664/8.3.fail3.log.txt","21/Oct/19 22:22;hossman;8.x.fail1.log.txt;https://issues.apache.org/jira/secure/attachment/12983665/8.x.fail1.log.txt","21/Oct/19 22:22;hossman;8.x.fail2.log.txt;https://issues.apache.org/jira/secure/attachment/12983666/8.x.fail2.log.txt","21/Oct/19 22:22;hossman;8.x.fail3.log.txt;https://issues.apache.org/jira/secure/attachment/12983667/8.x.fail3.log.txt","22/Oct/19 19:06;hossman;HdfsWriteToMultipleCollectionsTest.fails.txt;https://issues.apache.org/jira/secure/attachment/12983777/HdfsWriteToMultipleCollectionsTest.fails.txt","21/Oct/19 22:22;hossman;apache_Lucene-Solr-NightlyTests-8.3_25.log.txt;https://issues.apache.org/jira/secure/attachment/12983669/apache_Lucene-Solr-NightlyTests-8.3_25.log.txt","21/Oct/19 22:22;hossman;apache_Lucene-Solr-repro_3681.log.txt;https://issues.apache.org/jira/secure/attachment/12983668/apache_Lucene-Solr-repro_3681.log.txt",,9.0,,,,,,,,,,,,,,,,,,,,2019-10-22 17:45:13.181,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 22 19:09:56 UTC 2019,,,,,,,"0|z07td4:",9223372036854775807,,,,,,,,,,,,,,,"21/Oct/19 22:23;hossman;
I'm attaching some logs from jenkins, as well as from from my own local runs that show the same failure behavior on 8x and 83 with a variety of seeds.

The specifics of the failure looks like this...

{noformat}
   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=HdfsWriteToMultipleCollectionsTest -Dtests.method=test -Dtests.seed=7DB11BE46316786B -Dtests.multiplier=2 -Dtests.nightly=true -Dtests.slow=true -Dtests.linedocsfile=/home/jenkins/jenkins-slave/workspace/Lucene-Solr-NightlyTests-8.3/test-data/enwiki.random.lines.txt -Dtests.locale=el-CY -Dtests.timezone=Asia/Yekaterinburg -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1
   [junit4] FAILURE  287s J0 | HdfsWriteToMultipleCollectionsTest.test <<<
   [junit4]    > Throwable #1: java.lang.AssertionError: expected:<680> but was:<595>
   [junit4]    >        at __randomizedtesting.SeedInfo.seed([7DB11BE46316786B:F5E5243ECDEA1593]:0)
   [junit4]    >        at org.apache.solr.cloud.hdfs.HdfsWriteToMultipleCollectionsTest.test(HdfsWriteToMultipleCollectionsTest.java:129)
   [junit4]    >        at org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsFixedStatement.callStatement(BaseDistributedSearchTestCase.java:1082)
   [junit4]    >        at org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsStatement.evaluate(BaseDistributedSearchTestCase.java:1054)
   [junit4]    >        at java.lang.Thread.run(Thread.java:748)
{noformat}

...the exact number ""expected"" will vary by seed, and the exact number of ""actual"" docs found will vary by run.  This assertion happens after all of the (parallel) indexing threads have finished, when the test is simply trying to count documents across all of hte various collections it's indexed to, before it makes any HDFS specific assertions.

The root cause of the failure to get the expected number of docs seems to be due to some failures in forwarding updates between nodes -- evidently due to a lock in the HDFS layer?

We'll see lots of log messages showing that that updates are screaming along, and then suddenly there will be a big gap in time where only ""metrics"" related requests are being logged -- followed by several updateExecutor's logging that they (eventually) timed out waiting for a response from remote nodes to the forwarded pdate requests (sometimes TOLEADER, sometimes FROMLEADER).

These are accompanied by WARNing messages from the HDFS DataStreamer class indicating it caught an InterruptedException while writting to some index file...

{noformat}
   [junit4]   2> 1918294 ERROR (updateExecutor-6515-thread-1-processing-n:127.0.0.1:37445_awn%2Fps x:acollection0_shard2_replica_n3 c:acollection0 s:shard2 r:core_node8) [n:127.0.0.1:37445_awn%2Fps c:acollection0 s:shard2 r:core_node8 x:acollection0_shard2_replica_n3 ] o.a.s.u.SolrCmdDistributor org.apache.solr.client.solrj.SolrServerException: Timeout occured while waiting response from server at: http://127.0.0.1:34527/awn/ps/acollection0_shard1_replica_n1/update?update.distrib=TOLEADER&distrib.from=http%3A%2F%2F127.0.0.1%3A37445%2Fawn%2Fps%2Facollection0_shard2_replica_n3%2F
   [junit4]   2>        at org.apache.solr.client.solrj.impl.Http2SolrClient.request(Http2SolrClient.java:408)
   [junit4]   2>        at org.apache.solr.client.solrj.impl.Http2SolrClient.request(Http2SolrClient.java:754)
   [junit4]   2>        at org.apache.solr.client.solrj.impl.ConcurrentUpdateHttp2SolrClient.request(ConcurrentUpdateHttp2SolrClient.java:364)
   [junit4]   2>        at org.apache.solr.client.solrj.SolrClient.request(SolrClient.java:1290)
   [junit4]   2>        at org.apache.solr.update.SolrCmdDistributor.doRequest(SolrCmdDistributor.java:342)
   [junit4]   2>        at org.apache.solr.update.SolrCmdDistributor.lambda$submit$0(SolrCmdDistributor.java:331)
   [junit4]   2>        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
   [junit4]   2>        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
   [junit4]   2>        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
   [junit4]   2>        at com.codahale.metrics.InstrumentedExecutorService$InstrumentedRunnable.run(InstrumentedExecutorService.java:181)
   [junit4]   2>        at org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor.lambda$execute$0(ExecutorUtil.java:209)
   [junit4]   2>        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
   [junit4]   2>        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
   [junit4]   2>        at java.lang.Thread.run(Thread.java:748)
   [junit4]   2> Caused by: java.util.concurrent.TimeoutException
   [junit4]   2>        at org.eclipse.jetty.client.util.InputStreamResponseListener.get(InputStreamResponseListener.java:216)
   [junit4]   2>        at org.apache.solr.client.solrj.impl.Http2SolrClient.request(Http2SolrClient.java:399)
   [junit4]   2>        ... 13 more
   [junit4]   2> 
   [junit4]   2> 1918294 INFO  (qtp1716164178-22854) [n:127.0.0.1:37445_awn%2Fps c:acollection0 s:shard2 r:core_node8 x:acollection0_shard2_replica_n3 ] o.a.s.u.SolrCmdDistributor SolrCmdDistributor found 1 errors
   [junit4]   2> 1918294 INFO  (qtp1716164178-22854) [n:127.0.0.1:37445_awn%2Fps c:acollection0 s:shard2 r:core_node8 x:acollection0_shard2_replica_n3 ] o.a.s.u.DirectUpdateHandler2 start commit{_version_=1647570631572586496,optimize=false,openSearcher=true,waitSearcher=true,expungeDeletes=false,softCommit=false,prepareCommit=false}
   [junit4]   2> 1918294 INFO  (qtp1716164178-22854) [n:127.0.0.1:37445_awn%2Fps c:acollection0 s:shard2 r:core_node8 x:acollection0_shard2_replica_n3 ] o.a.s.u.SolrIndexWriter Calling setCommitData with IW:org.apache.solr.update.SolrIndexWriter@34262628 commitCommandVersion:1647570631572586496
   [junit4]   2> 1918296 ERROR (updateExecutor-6546-thread-2-processing-n:127.0.0.1:34527_awn%2Fps x:acollection0_shard1_replica_n1 c:acollection0 s:shard1 r:core_node4) [n:127.0.0.1:34527_awn%2Fps c:acollection0 s:shard1 r:core_node4 x:acollection0_shard1_replica_n1 ] o.a.s.u.SolrCmdDistributor org.apache.solr.client.solrj.SolrServerException: Timeout occured while waiting response from server at: http://127.0.0.1:45357/awn/ps/acollection0_shard1_replica_n2/update?update.distrib=FROMLEADER&distrib.from=http%3A%2F%2F127.0.0.1%3A34527%2Fawn%2Fps%2Facollection0_shard1_replica_n1%2F
   [junit4]   2>        at org.apache.solr.client.solrj.impl.Http2SolrClient.request(Http2SolrClient.java:408)
   [junit4]   2>        at org.apache.solr.client.solrj.impl.Http2SolrClient.request(Http2SolrClient.java:754)
   [junit4]   2>        at org.apache.solr.client.solrj.impl.ConcurrentUpdateHttp2SolrClient.request(ConcurrentUpdateHttp2SolrClient.java:364)
   [junit4]   2>        at org.apache.solr.client.solrj.SolrClient.request(SolrClient.java:1290)
   [junit4]   2>        at org.apache.solr.update.SolrCmdDistributor.doRequest(SolrCmdDistributor.java:342)
   [junit4]   2>        at org.apache.solr.update.SolrCmdDistributor.lambda$submit$0(SolrCmdDistributor.java:331)
   [junit4]   2>        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
   [junit4]   2>        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
   [junit4]   2>        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
   [junit4]   2>        at com.codahale.metrics.InstrumentedExecutorService$InstrumentedRunnable.run(InstrumentedExecutorService.java:181)
   [junit4]   2>        at org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor.lambda$execute$0(ExecutorUtil.java:209)
   [junit4]   2>        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
   [junit4]   2>        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
   [junit4]   2>        at java.lang.Thread.run(Thread.java:748)
   [junit4]   2> Caused by: java.util.concurrent.TimeoutException
   [junit4]   2>        at org.eclipse.jetty.client.util.InputStreamResponseListener.get(InputStreamResponseListener.java:216)
   [junit4]   2>        at org.apache.solr.client.solrj.impl.Http2SolrClient.request(Http2SolrClient.java:399)
   [junit4]   2>        ... 13 more
   [junit4]   2> 
   [junit4]   2> 1918297 INFO  (qtp1628872495-22943) [n:127.0.0.1:34595_awn%2Fps c:acollection0 s:shard2 r:core_node7 x:acollection0_shard2_replica_n5 ] o.a.s.u.DirectUpdateHandler2 start commit{_version_=1647570631575732224,optimize=false,openSearcher=true,waitSearcher=true,expungeDeletes=false,softCommit=false,prepareCommit=false}
   [junit4]   2> 1918297 INFO  (qtp1628872495-22943) [n:127.0.0.1:34595_awn%2Fps c:acollection0 s:shard2 r:core_node7 x:acollection0_shard2_replica_n5 ] o.a.s.u.SolrIndexWriter Calling setCommitData with IW:org.apache.solr.update.SolrIndexWriter@6850bd7f commitCommandVersion:1647570631575732224
   [junit4]   2> 1927547 WARN  (DataStreamer for file /solr_hdfs_home/acollection0/core_node6/data/index/_0_LuceneFixedGap_0.pos) [     ] o.a.h.h.DataStreamer Caught exception
   [junit4]   2>           => java.lang.InterruptedException
   [junit4]   2>        at java.lang.Object.wait(Native Method)
   [junit4]   2> java.lang.InterruptedException: null
   [junit4]   2>        at java.lang.Object.wait(Native Method) ~[?:1.8.0_191]
   [junit4]   2>        at java.lang.Thread.join(Thread.java:1252) ~[?:1.8.0_191]
   [junit4]   2>        at java.lang.Thread.join(Thread.java:1326) [?:1.8.0_191]
   [junit4]   2>        at org.apache.hadoop.hdfs.DataStreamer.closeResponder(DataStreamer.java:986) ~[hadoop-hdfs-client-3.2.0.jar:?]
   [junit4]   2>        at org.apache.hadoop.hdfs.DataStreamer.endBlock(DataStreamer.java:640) ~[hadoop-hdfs-client-3.2.0.jar:?]
   [junit4]   2>        at org.apache.hadoop.hdfs.DataStreamer.run(DataStreamer.java:810) ~[hadoop-hdfs-client-3.2.0.jar:?]
   [junit4]   2> 1942300 INFO  (qtp1194399847-22933) [n:127.0.0.1:45357_awn%2Fps c:acollection0 s:shard1 r:core_node6 x:acollection0_shard1_replica_n2 ] o.a.s.s.SolrIndexSearcher Opening [Searcher@30effb28[acollection0_shard1_replica_n2] main]
{noformat}

----

I currently have no idea WTF is going on here.



","22/Oct/19 17:45;krisden;Hmmmm nothing jumps out at me immediately either. At least I didn't screw up anything on the master/8x branches related to the Hadoop upgrade from the surface. Any idea if this is a relatively new failure or if this is something that just has been hidden underneath and failing for a while.","22/Oct/19 19:09;hossman;{quote}Any idea if this is a relatively new failure or if this is something that just has been hidden underneath and failing for a while
{quote}
Well, it's a nightly test, so it doesn't run that frequently in general...

I don't have the logs going back more then 7 days, so i can't confirm how long these *exact* errors have ocured, but i can tell you how what jobs have seen _any_ asserts fail in {{HdfsWriteToMultipleCollectionsTest.test}} during the past ~2years ..

[http://fucit.org/solr-jenkins-reports/reports/archive/]
{noformat}
reports/archive/daily$ ls -1 | grep method-failures.csv.gz | xargs zgrep -H 'HdfsWriteToMultipleCollectionsTest,test' | perl -ple 'if (/^(\d+-\d+-\d+)\..+,(.*)$/) { $_ = ""$1\t$2""}' > ~/tmp/HdfsWriteToMultipleCollectionsTest.fails.txt
{noformat}
(Note: that rules out suite level failures, like suite timeouts, object leaks, etc... – it should just be assertion failures inside the {{test()}} method)

I've attached that file, but:
 * if we ignore the 'repro' builds which could be on any branch
 * and if we focus solely on a single jenkins box at a time for apples to apples comparison

Then it definitely looks like there has been an uptick in 8.x failures on the apache jenkins server since 2019-03-15 ... right around the time of SOLR-13330 (although that may just be coincidence) ... 6 total fails in 2019 compared to 2 in 2018 (although it looks like this test was BadApple'd for ~4months in 2018 .. so maybe that's just noise)
{noformat}
$ grep -v repro HdfsWriteToMultipleCollectionsTest.fails.txt | grep apache | sort
2018-01-01	apache/Lucene-Solr-NightlyTests-master/1443/
2018-03-28	apache/Lucene-Solr-NightlyTests-7.x/185/
2019-03-19	apache/Lucene-Solr-NightlyTests-8.x/48/
2019-04-30	apache/Lucene-Solr-NightlyTests-8.x/86/
2019-05-31	apache/Lucene-Solr-NightlyTests-8.1/40/
2019-09-24	apache/Lucene-Solr-NightlyTests-master/1969/
2019-10-16	apache/Lucene-Solr-NightlyTests-8.3/25/
{noformat}
On the other hand, Uwe's jenkins hasn't seen any failures of this test method *ever* (i did check the original data though, he does occasionally report suite level failures, so he's definitely running the hdfs tests) ...
{noformat}
$ grep -v repro HdfsWriteToMultipleCollectionsTest.fails.txt | grep thetaphi | sort
{noformat}
And on steve's servers: no aparent pattern (but i also don't think steve's box run's full time ... there may be months when it wasn't running any tests at all)...
{noformat}
$ grep -v repro HdfsWriteToMultipleCollectionsTest.fails.txt | grep sarowe | sort
2018-12-26	sarowe/Lucene-Solr-Nightly-master/982/
2019-01-28	sarowe/Lucene-Solr-Nightly-7.x/473/
2019-04-30	sarowe/Lucene-Solr-Nightly-master/1055/
{noformat}
...so ... yeah. no clue.",,,,,,,,,,,,,,,,,,,,,,,,,
Explore join and multithread facets,SOLR-13715,13252748,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,mkhl,mkhl,23/Aug/19 20:07,21/Jan/20 16:56,18/Feb/21 10:02,,,,,,,,query parsers,,,,,0,,,,"User reported an issue when both of subj meet together. See the link to the mail thread. 
Include json facet and scored join as well. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2019-08-23 20:07:07.0,,,,,,,"0|z05zrc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Investigate LeaderVoteWaitTimeoutTest failures,SOLR-12675,13179547,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,shalin,shalin,17/Aug/18 10:01,02/Oct/19 17:23,18/Feb/21 10:02,,,,,,8.1,master (9.0),Tests,,,,,0,,,,LeaderVoteWaitTimeoutTest fails on jenkins although not very frequently (Failed 8 out of 555 runs).,,,,,,,,,,,,,,,,,,,,"20/Aug/18 08:34;shalin;SOLR-12675.patch;https://issues.apache.org/jira/secure/attachment/12936241/SOLR-12675.patch","20/Aug/18 08:13;shalin;SOLR-12675.patch;https://issues.apache.org/jira/secure/attachment/12936237/SOLR-12675.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2018-08-20 09:16:06.434,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 21 01:30:36 UTC 2018,,,,,,,"0|i3x5dz:",9223372036854775807,,,,,,,,,,,,,,,"17/Aug/18 10:01;shalin;Example of {{testMostInSyncReplicasCanWinElection}} failing:

{code}
   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=LeaderVoteWaitTimeoutTest -Dtests.method=testMostInSyncReplicasCanWinElection -Dtests.seed=59E7EE427B368461 -Dtests.multiplier=2 -Dtests.nightly=true -Dtests.slow=true -Dtests.linedocsfile=/home/jenkins/jenkins-slave/workspace/Lucene-Solr-NightlyTests-7.x/test-data/enwiki.random.lines.txt -Dtests.locale=hi -Dtests.timezone=EAT -Dtests.asserts=true -Dtests.file.encoding=US-ASCII
   [junit4] FAILURE 20.7s J2 | LeaderVoteWaitTimeoutTest.testMostInSyncReplicasCanWinElection <<<
   [junit4]    > Throwable #1: java.lang.AssertionError: Timeout waiting for new leader
   [junit4]    > null
   [junit4]    > Live Nodes: [127.0.0.1:40330_solr, 127.0.0.1:42699_solr, 127.0.0.1:44374_solr]
   [junit4]    > Last available state: DocCollection(collection1//collections/collection1/state.json/15)={
   [junit4]    >   ""pullReplicas"":""0"",
   [junit4]    >   ""replicationFactor"":""3"",
   [junit4]    >   ""shards"":{""shard1"":{
   [junit4]    >       ""range"":""80000000-7fffffff"",
   [junit4]    >       ""state"":""active"",
   [junit4]    >       ""replicas"":{
   [junit4]    >         ""core_node62"":{
   [junit4]    >           ""core"":""collection1_shard1_replica_n61"",
   [junit4]    >           ""base_url"":""https://127.0.0.1:45266/solr"",
   [junit4]    >           ""node_name"":""127.0.0.1:45266_solr"",
   [junit4]    >           ""state"":""down"",
   [junit4]    >           ""type"":""NRT"",
   [junit4]    >           ""force_set_state"":""false""},
   [junit4]    >         ""core_node64"":{
   [junit4]    >           ""core"":""collection1_shard1_replica_n63"",
   [junit4]    >           ""base_url"":""https://127.0.0.1:42699/solr"",
   [junit4]    >           ""node_name"":""127.0.0.1:42699_solr"",
   [junit4]    >           ""state"":""down"",
   [junit4]    >           ""type"":""NRT"",
   [junit4]    >           ""force_set_state"":""false""},
   [junit4]    >         ""core_node66"":{
   [junit4]    >           ""core"":""collection1_shard1_replica_n65"",
   [junit4]    >           ""base_url"":""https://127.0.0.1:44374/solr"",
   [junit4]    >           ""node_name"":""127.0.0.1:44374_solr"",
   [junit4]    >           ""state"":""active"",
   [junit4]    >           ""type"":""NRT"",
   [junit4]    >           ""force_set_state"":""false""}}}},
   [junit4]    >   ""router"":{""name"":""compositeId""},
   [junit4]    >   ""maxShardsPerNode"":""1"",
   [junit4]    >   ""autoAddReplicas"":""false"",
   [junit4]    >   ""nrtReplicas"":""3"",
   [junit4]    >   ""tlogReplicas"":""0""}
   [junit4]    > 	at __randomizedtesting.SeedInfo.seed([59E7EE427B368461:F1FBF2F8B976B04B]:0)
   [junit4]    > 	at org.apache.solr.cloud.SolrCloudTestCase.waitForState(SolrCloudTestCase.java:280)
   [junit4]    > 	at org.apache.solr.cloud.LeaderVoteWaitTimeoutTest.testMostInSyncReplicasCanWinElection(LeaderVoteWaitTimeoutTest.java:189)
{code}","17/Aug/18 10:04;shalin;Example of testBasics failing:
{code}
   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=LeaderVoteWaitTimeoutTest -Dtests.method=basicTest -Dtests.seed=59E7EE427B368461 -Dtests.multiplier=2 -Dtests.nightly=true -Dtests.slow=true -Dtests.linedocsfile=/home/jenkins/jenkins-slave/workspace/Lucene-Solr-NightlyTests-7.x/test-data/enwiki.random.lines.txt -Dtests.locale=hi -Dtests.timezone=EAT -Dtests.asserts=true -Dtests.file.encoding=US-ASCII
   [junit4] ERROR   0.22s J2 | LeaderVoteWaitTimeoutTest.basicTest <<<
   [junit4]    > Throwable #1: java.lang.NullPointerException
   [junit4]    > 	at __randomizedtesting.SeedInfo.seed([59E7EE427B368461:AB13F9203F938952]:0)
   [junit4]    > 	at org.apache.solr.client.solrj.embedded.JettySolrRunner.getNodeName(JettySolrRunner.java:347)
   [junit4]    > 	at org.apache.solr.cloud.LeaderVoteWaitTimeoutTest.basicTest(LeaderVoteWaitTimeoutTest.java:94)
   [junit4]    > 	at java.lang.Thread.run(Thread.java:748)
{code}","17/Aug/18 10:06;shalin;I briefly looked at the code. The testBasics failure is due to using the first jetty instance. The {{testMostInSyncReplicasCanWinElection}} test shuts down the first jetty and starts it back up at the end. But if the {{testMostInSyncReplicasCanWinElection}} fails and then {{testBasics}} is executed then it will always fail. I'll fix the side effect in this test first.","20/Aug/18 08:15;shalin;This patch extracts a method called ensureRunningJettys from TriggerIntegrationTest into MiniSolrCloudTestCase which is used by this test to ensure that exactly 4 nodes are running before the test.","20/Aug/18 08:35;shalin;Moved the extracted method to SolrCloudTestCase and removed the use of random inside this method.","20/Aug/18 09:16;jira-bot;Commit 079a81f14f4caa7f3920c306037b6c25c59037b0 in lucene-solr's branch refs/heads/master from [~shalin]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=079a81f ]

SOLR-12675: Make LeaderVoteWaitTimeoutTest more resilient against side effects of test methods.

Extracted a new method to ensure a given number of jettys are always running in the test setup. Also, delete all collections created by other test methods.
","20/Aug/18 09:16;jira-bot;Commit 83d95f7596d551f3c78ff082f1099387d562d57a in lucene-solr's branch refs/heads/branch_7x from [~shalin]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=83d95f7 ]

SOLR-12675: Make LeaderVoteWaitTimeoutTest more resilient against side effects of test methods.

Extracted a new method to ensure a given number of jettys are always running in the test setup. Also, delete all collections created by other test methods.

(cherry picked from commit 079a81f14f4caa7f3920c306037b6c25c59037b0)
","21/Aug/18 01:30;jira-bot;Commit 079a81f14f4caa7f3920c306037b6c25c59037b0 in lucene-solr's branch refs/heads/jira/http2 from [~shalin]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=079a81f ]

SOLR-12675: Make LeaderVoteWaitTimeoutTest more resilient against side effects of test methods.

Extracted a new method to ensure a given number of jettys are always running in the test setup. Also, delete all collections created by other test methods.
",,,,,,,,,,,,,,,,,,,,
Inject failures during synchronous update requests during shard splits,SOLR-12610,13176087,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,shalin,shalin,shalin,01/Aug/18 11:29,02/Oct/19 17:23,18/Feb/21 10:01,,,,,,8.1,master (9.0),SolrCloud,,,,,0,,,,"In SOLR-12607, I found a bug where the StdNode's shard was not set correctly causing exceptions during updates forwarded to sub-shard leaders to not be sent back to the clients. This can cause data loss during split. A fix was committed as part of SOLR-12607 but we need to expand coverage to this situation. I'll add failure injection during the synchronous update step to simulate this condition. This will be randomized for each shard split test method.",,,,,,,,,,,,,,,,SOLR-12607,,,,"02/Aug/18 07:27;shalin;SOLR-12610-test-cloudclient-retry.patch;https://issues.apache.org/jira/secure/attachment/12934023/SOLR-12610-test-cloudclient-retry.patch","01/Aug/18 11:32;shalin;SOLR-12610.patch;https://issues.apache.org/jira/secure/attachment/12933902/SOLR-12610.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2018-08-01 15:15:41.491,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 09 10:36:04 UTC 2018,,,,,,,"0|i3wkcf:",9223372036854775807,,,,,,,,,,,,,,,"01/Aug/18 11:33;shalin;There are some failures with this randomization enabled. I see requests being retried by CloudSolrClient when there is no communication exception and no stale state.","01/Aug/18 15:15;erickerickson;[~shalin] Let me know if you'd like some beasting done on this either before or after you push it.","02/Aug/18 07:35;shalin;The new {{SOLR-12610-test-cloudclient-retry.patch}} has a test which tests retry behavior of CloudSolrClient. The HTTP 500 error from the server is not a communication problem and the cluster state is also unchanged and yet the CloudSolrClient attempts retries.","09/Aug/18 10:36;shalin;I opened SOLR-12649 for the retry bug in CloudSolrClient",,,,,,,,,,,,,,,,,,,,,,,,
ReplicationFactorTest and HttpPartitionTest both fail with org.apache.http.NoHttpResponseException: The target server failed to respond,SOLR-6944,12766506,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,09/Jan/15 19:16,02/Jul/19 12:45,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,Our only recourse is to do a client side retry on such errors. I have some retry code for this from SOLR-4509 that I will pull over here.,,,,,,,,,,,,,,,,SOLR-13598,,,,"30/Jan/15 16:28;markrmiller@gmail.com;SOLR-6944.patch;https://issues.apache.org/jira/secure/attachment/12695551/SOLR-6944.patch","31/Oct/17 04:26;erickerickson;stdout.131;https://issues.apache.org/jira/secure/attachment/12894915/stdout.131","31/Oct/17 04:26;erickerickson;stdout.251;https://issues.apache.org/jira/secure/attachment/12894914/stdout.251","31/Oct/17 04:26;erickerickson;stdout.319;https://issues.apache.org/jira/secure/attachment/12894913/stdout.319","31/Oct/17 04:26;erickerickson;stdout.385;https://issues.apache.org/jira/secure/attachment/12894912/stdout.385","31/Oct/17 04:26;erickerickson;stdout.41;https://issues.apache.org/jira/secure/attachment/12894916/stdout.41",,,,,6.0,,,,,,,,,,,,,,,,,,,,2015-01-26 10:01:32.257,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jan 08 01:26:19 UTC 2018,,,,,,,"0|i247hr:",9223372036854775807,,,,,,,,,,,,,,,"26/Jan/15 10:01;uschindler;Hi,
ReplicationFactorTest fails on *every* run in Windows. This seems to be related, but maybe its a different issue. There is no single successful Windows build for about a month now.
This also reproduces locally on my Windows machine. I have not tried the 5.0 release, but it could be the same there.","26/Jan/15 16:37;erickerickson;Is there any Windows VM that's freely available? Or is the best one can do the time-limited image from, say, https://www.modern.ie/en-us/virtualization-tools?","26/Jan/15 17:00;mdrob;[~erickerickson] - Committers on (any) Apache project can request an MSDN account which includes some Azure credits for testing. That might be your best bet.","26/Jan/15 17:01;markrmiller@gmail.com;Yeah, it looks like the same fails.

Like I said, I have workarounds that should apply for that in SOLR-4509. Once I get some free time again, I'll look at pulling those in. Someone might want to look at an Assume or Badapple until then.","30/Jan/15 16:28;markrmiller@gmail.com;I've extracted the changes from SOLR-4509 and attatched.","30/Jan/15 16:40;markrmiller@gmail.com;I'll commit this and see how jenkins responds.","30/Jan/15 16:58;jira-bot;Commit 1656056 from [~markrmiller@gmail.com] in branch 'dev/trunk'
[ https://svn.apache.org/r1656056 ]

SOLR-6944: ReplicationFactorTest and HttpPartitionTest both fail with org.apache.http.NoHttpResponseException: The target server failed to respond","30/Jan/15 17:05;jira-bot;Commit 1656059 from [~markrmiller@gmail.com] in branch 'dev/branches/branch_5x'
[ https://svn.apache.org/r1656059 ]

SOLR-6944: ReplicationFactorTest and HttpPartitionTest both fail with org.apache.http.NoHttpResponseException: The target server failed to respond","01/Feb/15 05:48;markrmiller@gmail.com;Still some windows fails I think.","01/Feb/15 05:55;markrmiller@gmail.com;bq. ReplicationFactorTest fails on every run in Windows.

I think this could happen infrequently before on any OS - but it became more frequent and consistent on windows (perhaps with Jetty 9). I also saw this happen more when removing the httpclient stale check as well - but it can obviously happen with the stale check as well. It seems to be much worse on these tests because of the proxy stuff they do. When it does happen, you pretty much have to retry - NoHttpResponseException happens when the full request is sent, so an auto retry is not safe unless it's a query and not an update.","09/Feb/15 18:55;markrmiller@gmail.com;This problem has gotten out of control on jenkins runs. I'll try and look into it more soon if no one beats me to it.","08/Mar/15 13:57;romseygeek;I'm pretty sure this is due to stale connections (it generally occurs on the first request after a Jetty has shutdown and then been restarted).  There are two places that need fixing:
* in HttpSolrClient - we should always call ClientConnectionManager.closeExpiredConnections() if we get a NoHttpResponseException, whether or not we retry (see SOLR-7203)
* in CloudSolrClient.  We have a couple of options here: call closeExpiredConnections() in a background thread (we already have an executorservice here, so we can just use that), or alternatively call it whenever there's a change in the cluster state.  I quite like the latter idea - it would be useful to have a generic 'register a callback that gets called whenever the cluster state changes' API on ZkStateReader, and CloudSolrClient could just use that.","08/Mar/15 17:56;markrmiller@gmail.com;Unfortunately, this is way more complicated than it looks. In this case, this is all much more related to the proxy code than any real issue.

bq. it generally occurs on the first request after a Jetty has shutdown and then been restarted

This is just when it almost always happens (but usually *only* if the proxy code is involved!)

It happens randomly other places too though.

bq.  call closeExpiredConnections() in a background thread 

I've gone down that path (SOLR-4509). The reason that it's not committed is that it actually makes random NoHttpResponseExceptions *more* common in our tests.","07/Apr/15 14:49;jira-bot;Commit 1671861 from [~thelabdude] in branch 'dev/trunk'
[ https://svn.apache.org/r1671861 ]

SOLR-6944: see if NoHttpResponse exceptions are due to the socket timeout being set too low in the SocketProxy, change from 10 to 100 seconds","07/Apr/15 14:53;jira-bot;Commit 1671862 from [~thelabdude] in branch 'dev/branches/branch_5x'
[ https://svn.apache.org/r1671862 ]

SOLR-6944: see if NoHttpResponse exceptions are due to the socket timeout being set too low in the SocketProxy, change from 10 to 100 seconds","07/Apr/15 18:57;thelabdude;Hmmm ... so increasing the socket timeout setting in the SocketProxy pump seemed to have helped the Jenkins failures:
https://builds.apache.org/job/Lucene-Solr-Tests-5.x-Java7/2906/

But if that was the issue, you'd think it would reproduce locally?","08/Apr/15 03:03;jira-bot;Commit 1671997 from [~thelabdude] in branch 'dev/trunk'
[ https://svn.apache.org/r1671997 ]

SOLR-6944: ReplicationFactorTest continues to fail in most every build","08/Apr/15 03:03;jira-bot;Commit 1671998 from [~thelabdude] in branch 'dev/branches/branch_5x'
[ https://svn.apache.org/r1671998 ]

SOLR-6944: ReplicationFactorTest continues to fail in most every build","08/Apr/15 15:16;jira-bot;Commit 1672101 from [~thelabdude] in branch 'dev/trunk'
[ https://svn.apache.org/r1672101 ]

SOLR-6944: Change to using BadApple annotation on ReplicationFactorTest","08/Apr/15 15:17;jira-bot;Commit 1672103 from [~thelabdude] in branch 'dev/branches/branch_5x'
[ https://svn.apache.org/r1672103 ]

SOLR-6944: Change to using BadApple annotation on ReplicationFactorTest","08/Apr/15 15:25;jira-bot;Commit 1672105 from [~thelabdude] in branch 'dev/branches/lucene_solr_5_1'
[ https://svn.apache.org/r1672105 ]

SOLR-6944: Add BadApple annotation to ReplicationFactorTest and increase socket timeout in SocketProxy from 10 to 100","08/Feb/17 23:20;markrmiller@gmail.com;On 7x at least, this test appears to do all right now. It's past 30x10 beasting for me 3 times now.

I'll update when I move to a report for 6x.","18/Oct/17 21:09;erickerickson;I happen to be in this code for ReplicationFactorTest anyway and the BadApple annotation hasn't been removed in ReplicationFactorTest although it has been in HttpPartitionTest.

Since I want to beef up these tests anyway (adding min_rf to deletes too) I propose that I:

1> remove the BadApple annotation
2> beast the heck out of it
3> add my tests

If all that works, I'll check it all in and close this ticket along with SOLR-11438 (the issue I'm working on that lead me here in the first place).

Objections?

P.S. Assigning it to myself since I'm volunteering, [~markrmiller@gmail.com] feel free to take it back if you want of course.","31/Oct/17 04:30;erickerickson;On my Mac Pro, this test doesn't fail (ReplicationFactorTest), but on a Dell server I have access to I get several distinct  failure patterns in the file above.

My work on SOLR-11438 is done, that's the point of doing all the beasting and running in to these errors. So I'll reset @BadApple on ReplicationFactorTest before checking that JIRA in.

I'd love to be able to take that annotation off the tests for ReplicationFactorTest, but we have too much noise as is.

Anyone with any bandwidth who wants me to try any fixes just let me know. I'll probably be working on this off and on as time passes; it may be at the root of other test issues too.","08/Jan/18 01:26;erickerickson;There's no chance I'll be looking at this any time soon, so unassigning.",,,
TestRecoveryHdfs seems to be leaking a thread occasionally that ends up failing a completely different test.,SOLR-5007,12656260,Test,Reopened,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,krisden,markrmiller@gmail.com,markrmiller@gmail.com,04/Jul/13 14:02,30/Jun/19 22:37,18/Feb/21 10:02,,,,,,,,Hadoop Integration,hdfs,Tests,,,0,,,,,,,,,,,,,,,,,,,,HADOOP-9703,SOLR-7289,,,"04/Feb/19 20:44;krisden;SOLR-5007.patch;https://issues.apache.org/jira/secure/attachment/12957541/SOLR-5007.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-07-04 14:45:42.834,,,false,,,,,,,,,,,,,,,,,336483,,,Tue Mar 26 20:01:12 UTC 2019,,,,,,,"0|i1m1gf:",336807,,,,,,,,,,,,,,,"04/Jul/13 14:45;dweiss;Hmm... within the same suite? If it's a different suite then this shouldn't be possible. Let me know, Mark.","04/Jul/13 15:00;markrmiller@gmail.com;An example of what I am seeing: http://jenkins.thetaphi.de/job/Lucene-Solr-trunk-Linux/6421/

TestRandomDVFaceting fails with:

{noformat}

Error Message:
1 thread leaked from SUITE scope at org.apache.solr.TestRandomDVFaceting: 1) Thread[id=4381, name=IPC Parameter Sending Thread #2, state=TIMED_WAITING, group=TGRP-TestRecoveryHdfs]         at 
{noformat}

I assume it's due to TestRecoveryHdfs because of group=TGRP-TestRecoveryHdfs","04/Jul/13 21:19;dweiss;This:
{code}
Thread[id=4381, name=IPC Parameter Sending Thread #2, state=TIMED_WAITING, group=TGRP-TestRecoveryHdfs]
{code}

means the thread is indeed part of the thread group formed for TestRecoveryHdfs. There is a catch though -- the thread that leaked from this test couldn't exist back then (because it'd be marked as existing at the start of the test). My suspicion is that what happens is an IPC thread is created in some test and then this thread spawns more threads on-demand or something. So the thread group of that parent, persistent thread is inherited by the children who are then detected as rogue threads.

I cannot explain why that parent thread isn't causing a thread leak error -- it'd have to be in the set of ignored threads (but its children are not). If anything comes to your mind, shoot. I'll try to investigate tomorrow.
","05/Jul/13 01:00;jira-bot;Commit 1499894 from [~markrmiller@gmail.com]
[ https://svn.apache.org/r1499894 ]

SOLR-5007: clean up resource management","05/Jul/13 01:01;jira-bot;Commit 1499895 from [~markrmiller@gmail.com]
[ https://svn.apache.org/r1499895 ]

SOLR-5007: clean up resource management","05/Jul/13 01:14;markrmiller@gmail.com;I tried filing HADOOP-9703","05/Jul/13 06:34;dweiss;Yeah, HADOOP-9703 looks like the core of the problem, thanks Mark. I still need to figure out how the thread group propagates -- I have it on my list.","05/Jul/13 08:32;dweiss;Ok, I think I know. Whenever you're using this:
{code}
@ThreadLeakScope(Scope.NONE) // hdfs mini cluster currently leaks threads
{code}

it means any threads this test leaves behind will be a problem to debug. And any threads they themselves create will cause a thread leak later. So it's not a bug in the test framework.

This annotation is present in a number of classes; it'd be best to get rid of it as soon as possible...","05/Jul/13 08:33;dweiss;Also: we could add those IPC threads to the thread leak filters if they're harmless instead of doing Scope.NONE.","09/Jul/13 14:26;markrmiller@gmail.com;HADOOP-9703 seems to be making some progress.

bq. Also: we could add those IPC threads to the thread leak filters if they're harmless instead of doing Scope.NONE.

That's probably preferable for now then - they should be harmless and they affect all the hdfs tests - having Scope.NONE makes it easy to introduce new leaks without noticing.","09/Jul/13 15:20;dweiss;Yep, it's better to ignore those known threads than ignore everything.","14/Jul/13 13:33;markrmiller@gmail.com;HADOOP-9703 has been resolved, targeted for 2.2.0","21/Mar/15 20:29;markrmiller@gmail.com;Hmm...it was fixed for 2.3.0 and we are now on 2.3.0, but I still see this as a problem. I'll try to investigate sometime soon.","21/Mar/15 20:30;markrmiller@gmail.com;bq. Yep, it's better to ignore those known threads than ignore everything.

I never got to this. I'll work on that today.","22/Mar/15 19:48;markrmiller@gmail.com;I've tried for 2.6.0 as well and this thread can still leak. I think in the simple case it is fixed, but if you trigger lease recover it still leaks along with a couple threads noted in related JIRA issues.","24/Mar/15 02:33;markrmiller@gmail.com;bq. I never got to this. I'll work on that today.

 I've spun this off to SOLR-7289.","02/Feb/19 20:54;krisden;Its been 3+ years since last comment. Not sure if these threads are still leaking. Hadoop is now upgraded to Hadoop 3 from SOLR-9515. SOLR-7289 may have also fixed this issue or at least limited it to known failing threads.

Planning to close this since not much going on here to work from.","02/Feb/19 20:55;krisden;Guessing this was either fixed or needs to be looked at again cleanly on master.","04/Feb/19 16:54;hossman;[~krisden] - the way to check if this is still an issue would be to revert -the previous  ""workaround""- SOLR-7289 commit that causes these leaked threads to be ignored in HDFS related tests if they still exist.

See {{public class BadHdfsThreadsFilter implements ThreadFilter}} ant the logic it contains, along with the various comments and linked issues.

we shouldn't be resolving this issue unles/untill we can confidently remove the logic that ""ignores' those leaked threads.
----
*EDIT* Just realized that the commit mentioned in the comments above wasn't the commit that added HdfsThreadLeakTest, so it's not obvious it was a workaround for this issue unless you grep the code for ""SOLR-5007""","04/Feb/19 17:24;krisden;[~hossman] - sorry you are right. I didn't see the commits get moved around. I knew BadHdfsThreadsFilter existed but didn't grep for SOLR-5007. I can take a look and see if this is actually resolved with SOLR-5007 ""fixes/workarounds"" removed.","04/Feb/19 20:44;krisden;I think I found the underlying issue. FileContext.getFileContext doesn't close the underlying filesystem that gets created. There is a rename method now on the Filesystem that gets closed correctly. I am trying to track down when the rename method was added to Filesystem class.

 

I need to run all the HDFS related tests to make sure nothing is broken but this fixed the IPC thread issue with a few of the tests (TestRecoveryHdfs, HdfsDirectoryFactoryTest, HdfsDirectoryTest). ","05/Feb/19 00:19;krisden;Well this uncovered a bunch of other code/tests that aren't doing the right thing. Backup/restore doesn't seem to properly close things. HdfsLockFactory doesn't close the Filesystem it creates. Planning to look at this more but there are some definite resource management issues here that have been covered up for a long time.","05/Feb/19 18:07;krisden;Probably going to have to address this piece meal doing one test at a time to make sure things are cleaned up/closed properly. BadHdfsThreadsFilter is like a hammer and used in all the HDFS tests whether all the threads leak there or not.","19/Feb/19 22:47;krisden;Worked on this a bunch and then got side tracked. I found a few cases where we can clean up our handling of HDFS clients. Looks like Hadoop code still leaks threads even on proper shutdown. ","21/Mar/19 17:53;krisden;Putting some notes here as I looked into this a bit more.

Hadoop `FileSystem` vs `FileContext`. `FileContext` seems to be the preferred HDFS interaction tool. but `FileContext` doesn’t have a `close()` method so can’t clean up any usages.

In the Solr HDFS stuff, there is a mix of `FileSystem` and `FileContext`. and it is weird from a resource usage as to what should be used. I know all the `FileContext` stuff leaks threads in Solr testing, but moving to `FileSystem` isn’t an option since not all the required methods are on `FileSystem`.

I plan to try to follow up with the Hadoop ecosystem about `FileContext` and how to properly clean up. Since right now there is no easy way :(","26/Mar/19 20:01;krisden;Planning to follow up on the HDFS mailing list or something. I reached out to some colleagues about `FileSystem` vs `FileContext` but haven't heard anything.",,
MiniSolrCloudCluster does not always remove jettys from running list after stopping them,SOLR-9869,13028516,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,romseygeek,mdrob,mdrob,15/Dec/16 21:45,08/Jun/19 15:34,18/Feb/21 10:02,,,,,,,,Tests,,,,,0,,,,"MiniSolrCloudCluster has two {{stopJettySolrRunner}} methods that behave differently.

The {{int}} version calls {{jettys.remove(index);}} to remove the now stopped jetty from the list of running jettys.
The version that takes a {{JettySolrRunner}}, however, does not modify the running list.

This can cause calls to {{getReplicaJetty}} to fail after a call to {{stop}} because we will try to get the base url of a stopped jetty.",,,,,,,,,,,,,,,,,,,,"17/Jan/17 18:29;mdrob;SOLR-9869.patch;https://issues.apache.org/jira/secure/attachment/12847880/SOLR-9869.patch","15/Dec/16 21:46;mdrob;SOLR-9869.patch;https://issues.apache.org/jira/secure/attachment/12843482/SOLR-9869.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2016-12-20 19:21:15.563,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jan 23 10:35:14 UTC 2017,,,,,,,"0|i37nx3:",9223372036854775807,,,,,,,,,,,,,,,"15/Dec/16 21:46;mdrob;Patch available.","20/Dec/16 15:52;mdrob;[~romseygeek] - it looks like you were the one to add this flavor of stop method in SOLR-7180. Do you have any thoughts on the patch?","20/Dec/16 19:21;romseygeek;IIRC it's to avoid ConcurrentModificationExceptions during parallel shutdown, but we can avoid that I think by just calling jetty.stop() directly in the shutdown() lambdas rather than calling the stop method.","20/Dec/16 20:21;mdrob;Oh, good point. I just looked into this and found that the jettys list is already a COWList after your work in SOLR-8255. I think that means this change is safe?","05/Jan/17 20:20;mdrob;[~romseygeek] - any additional thoughts on this?","14/Jan/17 00:28;mdrob;Bump - this is behaviour is potentially a trap for anybody writing unit tests.","14/Jan/17 09:20;romseygeek;Hey, sorry, this dropped off my radar.  Can you add an example test that shows the behaviour the patch should help to prevent?","17/Jan/17 18:29;mdrob;I couldn't get this test to work as part of existing MiniSolrCloudClusterTest, so had to add a new test file for it. While doing that, I figured out a different way to fix the specific issue I was having, but think the original issue is still important. Both are fixed in the patch.","23/Jan/17 10:35;romseygeek;I got a test failure when running this locally:
{code}
[10:20:04.308] ERROR   8.38s J0 | TestMiniSolrCloudCluster.testStopAllStartAll <<<
   > Throwable #1: java.lang.ArrayIndexOutOfBoundsException: 4
   >    at __randomizedtesting.SeedInfo.seed([3F4B441AB7975037:49755B69F6A0FD18]:0)
   >    at java.util.concurrent.CopyOnWriteArrayList.get(CopyOnWriteArrayList.java:387)
   >    at java.util.concurrent.CopyOnWriteArrayList.get(CopyOnWriteArrayList.java:396)
   >    at java.util.Collections$UnmodifiableList.get(Collections.java:1309)
   >    at org.apache.solr.cloud.TestMiniSolrCloudCluster.testStopAllStartAll(TestMiniSolrCloudCluster.java:345)
{code}
So it looks as though we still need to deal with concurrent removals?",,,,,,,,,,,,,,,,,,,
Merge SolrTestCaseJ4's SolrIndexSearcher tracking into the ObjectReleaseTracker.,SOLR-10248,13049300,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,08/Mar/17 16:08,08/Jun/19 15:34,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"Currently this leads to some code duplication / cruft and having to wait independently for searchers first or second is not really nice (some objects contain, some contained, some dependencies).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2017-03-08 16:44:43.627,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Mar 08 16:45:04 UTC 2017,,,,,,,"0|i3b4iv:",9223372036854775807,,,,,,,,,,,,,,,"08/Mar/17 16:44;jira-bot;Commit e35881a63aa9de72cf5c539396266e0d0e676956 in lucene-solr's branch refs/heads/master from [~mark.miller@oblivion.ch]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e35881a ]

SOLR-10248: Merge SolrTestCaseJ4's SolrIndexSearcher tracking into the ObjectReleaseTracker.
","08/Mar/17 16:45;jira-bot;Commit 2692d08fd5779386e0c9e579739ab47a0cb2448b in lucene-solr's branch refs/heads/branch_6x from [~mark.miller@oblivion.ch]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2692d08 ]

SOLR-10248: Merge SolrTestCaseJ4's SolrIndexSearcher tracking into the ObjectReleaseTracker.
",,,,,,,,,,,,,,,,,,,,,,,,,,
The Nightly test LeaderInitiatedRecoveryOnShardRestartTest appears to be too fragile.,SOLR-10071,13039198,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,31/Jan/17 14:28,08/Jun/19 15:34,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,LeaderInitiatedRecoveryOnShardRestartTest 17.00% unreliable 30.00 163.09 @Nightly,,,,,,,,,,,,,,,,SOLR-9555,,,,"20/Apr/17 21:35;mdrob;SOLR-10071.patch;https://issues.apache.org/jira/secure/attachment/12864367/SOLR-10071.patch","15/Feb/17 19:42;markrmiller@gmail.com;logs.tar.gz;https://issues.apache.org/jira/secure/attachment/12852892/logs.tar.gz",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2017-02-20 00:19:37.574,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 20 21:35:53 UTC 2017,,,,,,,"0|i39f5b:",9223372036854775807,,,,,,,,,,,,,,,"15/Feb/17 19:42;markrmiller@gmail.com;Fail logs attached.","20/Feb/17 00:19;jira-bot;Commit 9533fa34f8b2882bbf15adecd05728072d86b1e9 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9533fa3 ]

SOLR-10071: Add @AwaitsFix for now.
","22/Feb/17 16:27;jira-bot;Commit d8797ce0e63ee5ce6c0d95aab2b4d15b6a87893a in lucene-solr's branch refs/heads/branch_6x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d8797ce ]

SOLR-10071: Add @AwaitsFix for now.
","20/Apr/17 21:35;mdrob;This depends on my SOLR-9555 patch. I haven't run it through the beasting, so I maybe just haven't hit any of the transient failures that you saw before. At a minimum, we'll need this change-set though.",,,,,,,,,,,,,,,,,,,,,,,,
The Nightly test CdcrReplicationDistributedZkTest appears to be too fragile.,SOLR-10069,13039196,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,31/Jan/17 14:24,08/Jun/19 15:34,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,CdcrReplicationDistributedZkTest 37.00% screwy 30.00 1816.89 @Nightly,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-01-31 14:24:17.0,,,,,,,"0|i39f4v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Break the mega test SplitShardTest into multiple tests.,SOLR-9850,13027365,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,12/Dec/16 06:39,08/Jun/19 15:33,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,This mega test is out of control in test length and needs to be broken up.,,,,,,,,,,,,,,,,,,,,"12/Dec/16 06:40;markrmiller@gmail.com;SOLR-9850.patch;https://issues.apache.org/jira/secure/attachment/12842759/SOLR-9850.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2016-12-12 06:39:39.0,,,,,,,"0|i37gtj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Harden AbstractSolrMorphlineZkTestBase based tests.,SOLR-10195,13045458,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,23/Feb/17 00:34,08/Jun/19 15:32,18/Feb/21 10:02,,,,,,,,Tests,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2017-02-23 00:50:31.076,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Feb 23 00:50:31 UTC 2017,,,,,,,"0|i3ahfj:",9223372036854775807,,,,,,,,,,,,,,,"23/Feb/17 00:50;jira-bot;Commit c53b7c33b03aad3880b57a85d4402a31f3e0ea36 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c53b7c3 ]

SOLR-10195: Harden AbstractSolrMorphlineZkTestBase based tests.
",,,,,,,,,,,,,,,,,,,,,,,,,,,
HdfsChaosMonkeySafeLeaderTest needs to be hardened.,SOLR-10161,13044312,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,19/Feb/17 18:18,08/Jun/19 15:32,18/Feb/21 10:02,,,,,,,,Hadoop Integration,hdfs,Tests,,,0,,,,,,,,,,,,,,,,,,,,SOLR-10110,,,,"20/Feb/17 01:25;markrmiller@gmail.com;logs.tar.gz;https://issues.apache.org/jira/secure/attachment/12853506/logs.tar.gz",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 20 01:24:34 UTC 2017,,,,,,,"0|i3aadr:",9223372036854775807,,,,,,,,,,,,,,,"20/Feb/17 01:24;markrmiller@gmail.com;Some of this fails look the same as SOLR-10110:

{noformat}
   [junit4]   2> 121954 INFO  (commitScheduler-57-thread-1) [n:127.0.0.1:39546_ c:collection1 s:shard1 r:core_node4 x:collection1] o.a.s.s.SolrIndexSearcher Opening [Searcher@7a4c2767[collection1] main]
   [junit4]   2> 121955 ERROR (commitScheduler-57-thread-1) [n:127.0.0.1:39546_ c:collection1 s:shard1 r:core_node4 x:collection1] o.a.s.u.CommitTracker auto commit error...:org.apache.solr.common.SolrException: Error opening new searcher
   [junit4]   2> 	at org.apache.solr.core.SolrCore.openNewSearcher(SolrCore.java:2005)
   [junit4]   2> 	at org.apache.solr.core.SolrCore.getSearcher(SolrCore.java:2125)
   [junit4]   2> 	at org.apache.solr.update.DirectUpdateHandler2.commit(DirectUpdateHandler2.java:635)
   [junit4]   2> 	at org.apache.solr.update.CommitTracker.run(CommitTracker.java:217)
   [junit4]   2> 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
   [junit4]   2> 	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
   [junit4]   2> 	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
   [junit4]   2> 	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
   [junit4]   2> 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
   [junit4]   2> 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
   [junit4]   2> 	at java.lang.Thread.run(Thread.java:745)
   [junit4]   2> Caused by: org.apache.solr.common.SolrException: openNewSearcher called on closed core
   [junit4]   2> 	at org.apache.solr.core.SolrCore.openNewSearcher(SolrCore.java:1992)
   [junit4]   2> 	... 10 more
   [junit4]   2> 
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,
Randomize TestCollectionAPI to use both replication schemes,SOLR-10368,13059283,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,caomanhdat,ichattopadhyaya,ichattopadhyaya,27/Mar/17 05:32,08/Jun/19 15:32,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"As per SOLR-9835, the TestCollectionAPI was modified to *necessarily* use the new replication scheme for creating the test collection.

https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;a=blobdiff;f=solr/core/src/test/org/apache/solr/cloud/TestCollectionAPI.java;h=8fbfee391e0f27700723a2b45a11abe987b6236d;hp=8905077e4c800c087394fd3793c0514276780718;hb=7830462d4b7da3acefff6353419e71cde62d5fee;hpb=faeb1fe8c16f9e02aa5c3bba295bc24325b94a07

{code}
+      req.setRealtimeReplicas(1);
{code}

This leaves the default replication mode with no coverage with respect to the collections API when replication factor is > 1 and numShards > 1. We should randomize the use of new and old replication schemes in this test (and any other test that was similarly changed). Alternatively, we can have another collection in the test for the default replication scheme with replicationFactor and numShards > 1.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-03-27 05:32:40.0,,,,,,,"0|i3ctf3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make tests that are as expensive as our expensive @Nightlys @Nightly themselves.,SOLR-10253,13049473,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,09/Mar/17 01:42,08/Jun/19 15:32,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,If we want these tests to run non @Nightly they should be sped up for that case.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-03-09 01:42:55.0,,,,,,,"0|i3b5lb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CollectionsAPIDistributedZkTest is too fragile.,SOLR-10125,13042303,Test,Reopened,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,11/Feb/17 16:34,08/Jun/19 15:31,18/Feb/21 10:02,,,,,,6.7,7.0,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,"19/Feb/17 18:55;markrmiller@gmail.com;stdout;https://issues.apache.org/jira/secure/attachment/12853481/stdout",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2017-02-11 22:21:47.61,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Nov 02 08:20:54 UTC 2017,,,,,,,"0|i39y7j:",9223372036854775807,,,,,,,,,,,,,,,"11/Feb/17 22:21;jira-bot;Commit 11a54aa5a9092238b6e22b9ee4df059491561ebb in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=11a54aa ]

SOLR-10125: CollectionsAPIDistributedZkTest is too fragile.
","12/Feb/17 02:39;jira-bot;Commit de762a7988014d67819cc99f0968173e48d255dd in lucene-solr's branch refs/heads/branch_6x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=de762a7 ]

SOLR-10125: CollectionsAPIDistributedZkTest is too fragile.
","02/Nov/17 08:20;jira-bot;Commit bf040a88ef88d3e714dc303f76f9a880095d641b in lucene-solr's branch refs/heads/master from [~caomanhdat]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bf040a8 ]

SOLR-10125: Enable debug logging for addReplicaTest()
",,,,,,,,,,,,,,,,,,,,,,,,,
Harden CleanupOldIndexTest,SOLR-10207,13046234,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,25/Feb/17 04:19,08/Jun/19 15:31,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2017-02-28 05:03:22.385,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Feb 28 15:36:45 UTC 2017,,,,,,,"0|i3am7j:",9223372036854775807,,,,,,,,,,,,,,,"28/Feb/17 05:03;jira-bot;Commit ed0f0f45ce17e2218ec2e97aab2fcb1a0d4defa6 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ed0f0f4 ]

SOLR-10207: Harden CleanupOldIndexTest.
","28/Feb/17 15:36;jira-bot;Commit 33e1668a2055621cf039a6c6c2cbf9cfc4a71893 in lucene-solr's branch refs/heads/branch_6x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=33e1668 ]

SOLR-10207: Harden CleanupOldIndexTest.
",,,,,,,,,,,,,,,,,,,,,,,,,,
TestCodecSupport fail,SOLR-10185,13045004,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,21/Feb/17 23:10,08/Jun/19 15:30,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"{noformat}
   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestCodecSupport -Dtests.method=testDocValuesFormats -Dtests.seed=7FED485D50D6E00C -Dtests.slow=true -Dtests.locale=id-ID -Dtests.timezone=Europe/Vatican -Dtests.asserts=true -Dtests.file.encoding=US-ASCII
   [junit4] FAILURE 0.02s J3  | TestCodecSupport.testDocValuesFormats <<<
   [junit4]    > Throwable #1: org.junit.ComparisonFailure: expected:<Lucene[70]> but was:<Lucene[54]>
   [junit4]    > 	at __randomizedtesting.SeedInfo.seed([7FED485D50D6E00C:73B680EFB8D740F3]:0)
   [junit4]    > 	at org.apache.solr.core.TestCodecSupport.testDocValuesFormats(TestCodecSupport.java:65)
   [junit4]    > 	at java.lang.Thread.run(Thread.java:745)
   [junit4]   2> 154863 INFO  (TEST-TestCodecSupport.testDynamicFieldsDocValuesFormats-seed#[7FED485D50D6E00C]) [    x:core_with_default_compression] o.a.s.SolrTestCaseJ4 ###Starting testDynamicFieldsDocValuesFormats
   [junit4]   2> 154863 INFO  (TEST-TestCodecSupport.testDynamicFieldsDocValuesFormats-seed#[7FED485D50D6E00C]) [    x:core_with_default_compression] o.a.s.SolrTestCaseJ4 ###Ending testDynamicFieldsDocValuesFormats
   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestCodecSupport -Dtests.method=testDynamicFieldsDocValuesFormats -Dtests.seed=7FED485D50D6E00C -Dtests.slow=true -Dtests.locale=id-ID -Dtests.timezone=Europe/Vatican -Dtests.asserts=true -Dtests.file.encoding=US-ASCII
   [junit4] FAILURE 0.00s J3  | TestCodecSupport.testDynamicFieldsDocValuesFormats <<<
   [junit4]    > Throwable #1: org.junit.ComparisonFailure: expected:<Lucene[70]> but was:<Lucene[54]>
   [junit4]    > 	at __randomizedtesting.SeedInfo.seed([7FED485D50D6E00C:9F3E169B46485658]:0)
   [junit4]    > 	at org.apache.solr.core.TestCodecSupport.testDynamicFieldsDocValuesFormats(TestCodecSupport.java:88)
   [junit4]    > 	at java.lang.Thread.run(Thread.java:745)
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-02-21 23:10:41.0,,,,,,,"0|i3aenj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HdfsNNFailoverTest currently wraps BasicDistributedZkTest and so runs for no reason as what it tests is currently disabled. We should ignore this test for now.,SOLR-10040,13037856,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,25/Jan/17 21:58,08/Jun/19 15:30,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-01-25 21:58:18.0,,,,,,,"0|i397pz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OnlyLeaderIndexesTest failure,SOLR-10287,13056265,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,ichattopadhyaya,ichattopadhyaya,15/Mar/17 11:49,08/Jun/19 15:30,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"There's a non-reproducible failure on master, related to SOLR-9835.

{code}
Build: https://jenkins.thetaphi.de/job/Lucene-Solr-master-Linux/19173/
Java: 32bit/jdk-9-ea+160 -client -XX:+UseConcMarkSweepGC

Stack Trace:
java.lang.AssertionError
        at __randomizedtesting.SeedInfo.seed([761CC25191CB4FD7:FE48FD8B3F37222F]:0)
        at org.junit.Assert.fail(Assert.java:92)
        at org.junit.Assert.assertTrue(Assert.java:43)
        at org.junit.Assert.assertNotNull(Assert.java:526)
        at org.junit.Assert.assertNotNull(Assert.java:537)
        at org.apache.solr.cloud.OnlyLeaderIndexesTest.outOfOrderDBQWithInPlaceUpdatesTest(OnlyLeaderIndexesTest.java:295)
        at org.apache.solr.cloud.OnlyLeaderIndexesTest.test(OnlyLeaderIndexesTest.java:78)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.base/java.lang.reflect.Method.invoke(Method.java:547)
        at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1713)
        at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:907)
        at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:943)
        at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:957)
        at com.carrotsearch.randomizedtesting.rules.SystemPropertiesRestoreRule$1.evaluate(SystemPropertiesRestoreRule.java:57)
...
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-03-15 11:49:19.0,,,,,,,"0|i3casf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpPartitionTest needs to be hardened.,SOLR-10162,13044325,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,19/Feb/17 20:08,08/Jun/19 15:30,18/Feb/21 10:02,,,,,,,,Tests,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2017-02-19 22:02:54.337,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 22 17:00:19 UTC 2017,,,,,,,"0|i3aagn:",9223372036854775807,,,,,,,,,,,,,,,"19/Feb/17 22:02;jira-bot;Commit bb12b6c92b68f5ead7c9a1e78aea199ef267d087 in lucene-solr's branch refs/heads/master from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bb12b6c ]

SOLR-10162: Uncaught exception can fail test due to race with closed socket.
","22/Feb/17 16:43;jira-bot;Commit f955213b29df49d68fff9f47b259b474b281f669 in lucene-solr's branch refs/heads/branch_6x from markrmiller
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f955213 ]

SOLR-10162: Uncaught exception can fail test due to race with closed socket.
","22/Feb/17 17:00;markrmiller@gmail.com;There are still more rare fails that can pop up here.",,,,,,,,,,,,,,,,,,,,,,,,,
ShardSplitTest needs to be hardened.,SOLR-10139,13043150,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,15/Feb/17 04:08,08/Jun/19 15:30,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"{noformat}
   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=ShardSplitTest -Dtests.method=testSplitAfterFailedSplit -Dtests.seed=4D4F48964A9DD277 -Dtests.slow=true -Dtests.locale=zh-CN -Dtests.timezone=Australia/Queensland -Dtests.asserts=true -Dtests.file.encoding=UTF-8
   [junit4] FAILURE 35.7s | ShardSplitTest.testSplitAfterFailedSplit <<<
   [junit4]    > Throwable #1: java.lang.AssertionError: expected:<1> but was:<2>
   [junit4]    > 	at __randomizedtesting.SeedInfo.seed([4D4F48964A9DD277:B402DB3976E89FFD]:0)
   [junit4]    > 	at org.apache.solr.cloud.ShardSplitTest.testSplitAfterFailedSplit(ShardSplitTest.java:279)
   [junit4]    > 	at org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsFixedStatement.callStatement(BaseDistributedSearchTestCase.java:985)
   [junit4]    > 	at org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsStatement.evaluate(BaseDistributedSearchTestCase.java:960)
   [junit4]    > 	at java.lang.Thread.run(Thread.java:745)
{noformat}",,,,,,,,,,,,,,,,,,,,"15/Feb/17 04:09;markrmiller@gmail.com;logs.tar.gz;https://issues.apache.org/jira/secure/attachment/12852734/logs.tar.gz",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-02-15 04:08:14.0,,,,,,,"0|i3a3fb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MissingSegmentRecoveryTest needs to be hardened.,SOLR-10165,13044352,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,19/Feb/17 23:57,08/Jun/19 15:29,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,"19/Feb/17 23:58;markrmiller@gmail.com;logs.tar.gz;https://issues.apache.org/jira/secure/attachment/12853501/logs.tar.gz",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Feb 19 23:58:08 UTC 2017,,,,,,,"0|i3aamn:",9223372036854775807,,,,,,,,,,,,,,,"19/Feb/17 23:58;markrmiller@gmail.com;Fail logs attached.",,,,,,,,,,,,,,,,,,,,,,,,,,,
Numeric PointsFields: test ranges with IndexOrDocValuesQuery,SOLR-10797,13076356,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,sarowe,sarowe,01/Jun/17 00:16,08/Jun/19 15:22,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"TestPointFields.testIndexOrDocValuesQuery() tests that IndexOrDocValuesQuery is created under the appropriate circumstances, but these queries are not functionally tested.",,,,,,,,,,,,,,,,SOLR-9995,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 25 19:14:37 UTC 2017,,,,,,,"0|i3fq2v:",9223372036854775807,,,,,,,,,,,,,,,"25/Jul/17 19:14;sarowe;I removed this issue as a sub-task of SOLR-9995, since I don't think it should block the release of 7.0.",,,,,,,,,,,,,,,,,,,,,,,,,,,
Beef up autoAddReplica test to catch more issues related to SOLR-10279.,SOLR-10598,13068522,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,02/May/17 19:23,08/Jun/19 15:19,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"I have this work done already on an older branch, need to port it to master.",,,,,,,,,,,,,,,,SOLR-10279,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 03 15:30:27 UTC 2017,,,,,,,"0|i3edsn:",9223372036854775807,,,,,,,,,,,,,,,"03/Oct/17 15:30;markrmiller@gmail.com;The current nightly test is consistently failing last I looked - need to get that working again and still get this additional testing in.",,,,,,,,,,,,,,,,,,,,,,,,,,,
RestartWhileUpdatingTest and HdfsRestartWhileUpdatingTest are incredibly slow.,SOLR-12053,13142284,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,03/Mar/18 16:07,08/Jun/19 15:15,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2018-03-03 16:09:22.701,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Mar 03 16:15:52 UTC 2018,,,,,,,"0|i3qtsn:",9223372036854775807,,,,,,,,,,,,,,,"03/Mar/18 16:09;jira-bot;Commit 18edca0fb25ec7cb79cef8110852e6e0c4c89e8d in lucene-solr's branch refs/heads/master from [~mark.miller@oblivion.ch]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=18edca0 ]

SOLR-12053: RestartWhileUpdatingTest and HdfsRestartWhileUpdatingTest are incredibly slow.
","03/Mar/18 16:15;jira-bot;Commit e0cfb9686bb458ab4be774dbef553493ee4ab9f2 in lucene-solr's branch refs/heads/branch_7x from [~mark.miller@oblivion.ch]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e0cfb96 ]

SOLR-12053: RestartWhileUpdatingTest and HdfsRestartWhileUpdatingTest are incredibly slow.
",,,,,,,,,,,,,,,,,,,,,,,,,,
Should randomize enable/disable on all caches in all tests unless explicitly required for testing,SOLR-12109,13145548,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,hossman,hossman,16/Mar/18 00:17,08/Jun/19 15:15,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"Enabling/disabling caches should not affect behavior -- just performance.

And yet, w/caches enabled by default (either implicitly or explicitly) in our test configs, it's easy to overlook bugs that exist because of code assumptions that only hold up when cahces are enabled -- SOLR-12108 & SOLR-12107 are 2 great examples of this.

We should update all of our configs used in tests (including the techproduct sample configs used for ""example"" tests) to use sysprops to enable/disable all the caches (documentCache, filterCache, queyResultCache) and then make SolrTestCaseJ4 randomize all of those system properties independently.  Tests that depend on explicit state should explicitly set those properties.",,,,,,,,,,,,,,,,SOLR-12107,SOLR-12108,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2018-03-16 00:17:39.0,,,,,,,"0|i3rdhz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HdfsDirectoryFactoryTest can fail by trying to allocate too much direct memory.,SOLR-12211,13151486,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,10/Apr/18 21:15,08/Jun/19 15:15,18/Feb/21 10:02,,,,,,8.1,master (9.0),search,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2018-04-10 21:17:09.802,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 15 06:49:24 UTC 2018,,,,,,,"0|i3se07:",9223372036854775807,,,,,,,,,,,,,,,"10/Apr/18 21:17;jira-bot;Commit b93e24cb834abd2080244dbb80f3d503d0a08e8f in lucene-solr's branch refs/heads/master from [~mark.miller@oblivion.ch]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b93e24c ]

SOLR-12211: HdfsDirectoryFactoryTest can fail by trying to allocate too much direct memory.
","10/Apr/18 21:17;jira-bot;Commit 89c364c2de43036782688a84abdf6da0fd4a1389 in lucene-solr's branch refs/heads/branch_7x from [~mark.miller@oblivion.ch]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=89c364c ]

SOLR-12211: HdfsDirectoryFactoryTest can fail by trying to allocate too much direct memory.
","15/Jun/18 06:49;jpountz;[~markrmiller@gmail.com] Should we mark this issue as resolved?",,,,,,,,,,,,,,,,,,,,,,,,,
The static FileCleaningTracker we use to clean multi part post tmp files has race issues when used in tests with multiple JettySolrRunners.,SOLR-12319,13157487,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,07/May/18 05:15,08/Jun/19 15:14,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2018-05-07 05:15:57.0,,,,,,,"0|i3teev:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TestTriggerIntegration fails too easily.,SOLR-12132,13146836,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,21/Mar/18 13:45,08/Jun/19 15:11,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,SOLR-11621,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2018-03-21 13:45:37.0,,,,,,,"0|i3rlfz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move Solr's ExitableDirectoryReader test to it's own package,SOLR-12931,13194261,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,varun,varun,25/Oct/18 22:36,08/Jun/19 15:03,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2018-10-25 22:50:16.216,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 06 19:22:34 UTC 2018,,,,,,,"0|i3znkf:",9223372036854775807,,,,,,,,,,,,,,,"25/Oct/18 22:40;varun;Context to the quesion : I started looking at SOLR-12906 and DelayingSearchComponent caught my eye as it was under the ( org.apache.solr.search ) package. After spending a couple of minutes I figured this has to do with tests around ExitableDirectoryReader

Let's use ExitableDirectoryReader as the feature in context that we wanted to test - We wrote a test for single core and then a cloud test. I think this is a typical pattern where the single core test can be more exhaustive, but we want to write a cloud test to make sure it works in the distributed case as well

Both are integration tests.

DelayingSearchComponent is the helper class and in the ( org.apache.solr.search ) package
 CloudExitableDirectoryReaderTest is the test that uses this and is in the ( org.apache.solr.cloud ) package
 ExitableDirectoryReaderTest is the single core test for this in the ( org.apache.solr.core ) package

Proposing that we move these three classes to it's own package as a first pass.
 When we make a clear distinction of mock vs integration tests we could move this package under integration","25/Oct/18 22:50;anshum;I'm not sure if we should move this test to it's own package. What else do you see becoming a part of the package in the longer run?

Just trying to see what I'm missing here :)","25/Oct/18 23:03;varun;Nothing else would be added in the future , but it helps new devs understand where a feature test lies ?

Today the same feature's test is spread across three packages.

Do you think isolating packges for dedicated features is a bad idea? Overkill?","25/Oct/18 23:12;anshum;It might confuse users in terms of too  many packages to look at and figure out where things are. I would like to consolidate them but not in their own package, that possibly then gets split into unit vs integration tests.","26/Oct/18 00:49;varun;Fair enough.  Move all 3 classes to - org.apache.solr.search ?","06/Nov/18 19:22;markrmiller@gmail.com;+1 on putting them in the same place. Things are often weirdly spread out and it can be hard to know what exists.",,,,,,,,,,,,,,,,,,,,,,
Connections issue between nodes when using SSL + Java 11,SOLR-13048,13203071,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,caomanhdat,caomanhdat,07/Dec/18 15:41,08/Jun/19 15:03,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"When I looked into test failures recently, I saw a common pattern of failures related to Java 11 + SSL. 
{code}
24580 ERROR (OverseerThreadFactory-166-thread-1-processing-n:127.0.0.1:40151_solr) [n:127.0.0.1:40151_solr    ] o.a.s.c.a.c.OverseerCollectionMessageHandler Error from shard: https://127.0.0.1:40151/solr
org.apache.solr.client.solrj.SolrServerException: IOException occured when talking to server at: https://127.0.0.1:40151/solr
	at org.apache.solr.client.solrj.impl.HttpSolrClient.executeMethod(HttpSolrClient.java:657) ~[java/:?]
	at org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:255) ~[java/:?]
	at org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:244) ~[java/:?]
	at org.apache.solr.client.solrj.SolrClient.request(SolrClient.java:1260) ~[java/:?]
	at org.apache.solr.handler.component.HttpShardHandler.lambda$submit$0(HttpShardHandler.java:172) ~[java/:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) ~[?:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
	at com.codahale.metrics.InstrumentedExecutorService$InstrumentedRunnable.run(InstrumentedExecutorService.java:176) ~[metrics-core-3.2.6.jar:3.2.6]
	at org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor.lambda$execute$0(ExecutorUtil.java:209) [java/:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:834) [?:?]
Caused by: javax.net.ssl.SSLHandshakeException: Remote host terminated the handshake
	at sun.security.ssl.SSLSocketImpl.handleEOF(SSLSocketImpl.java:1321) ~[?:?]
	at sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1160) ~[?:?]
	at sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1063) ~[?:?]
	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:402) ~[?:?]
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.createLayeredSocket(SSLConnectionSocketFactory.java:396) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.connectSocket(SSLConnectionSocketFactory.java:355) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.solr.client.solrj.impl.HttpSolrClient.executeMethod(HttpSolrClient.java:542) ~[java/:?]
	... 12 more
Caused by: java.io.EOFException: SSL peer shut down incorrectly
	at sun.security.ssl.SSLSocketInputRecord.decode(SSLSocketInputRecord.java:167) ~[?:?]
	at sun.security.ssl.SSLTransport.decode(SSLTransport.java:108) ~[?:?]
	at sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1152) ~[?:?]
	at sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1063) ~[?:?]
	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:402) ~[?:?]
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.createLayeredSocket(SSLConnectionSocketFactory.java:396) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.connectSocket(SSLConnectionSocketFactory.java:355) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:394) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.solr.client.solrj.impl.HttpSolrClient.executeMethod(HttpSolrClient.java:542) ~[java/:?]
	... 12 more
{code}",,,,,,,,,,,,,,SOLR-12809,,,,,,"07/Dec/18 15:41;caomanhdat;jenkins.log (5).txt.gz;https://issues.apache.org/jira/secure/attachment/12951007/jenkins.log+%285%29.txt.gz","07/Dec/18 15:41;caomanhdat;jenkins.log (6).txt.gz;https://issues.apache.org/jira/secure/attachment/12951006/jenkins.log+%286%29.txt.gz",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Dec 07 15:42:25 UTC 2018,,,,,,,"0|s01adc:",9223372036854775807,,,,,,,,,,,,,,,"07/Dec/18 15:42;caomanhdat;I'm not sure this relates to this issue or not?
https://bugs.openjdk.java.net/browse/JDK-8207009",,,,,,,,,,,,,,,,,,,,,,,,,,,
TimeRoutedAliasUpdateProcessorTest testSliceRouting fails 1% of time,SOLR-12928,13194226,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,dsmiley,dsmiley,25/Oct/18 19:17,08/Jun/19 15:02,18/Feb/21 10:02,,,,,,,,SolrCloud,,,,,0,,,,"org.apache.solr.update.processor.TimeRoutedAliasUpdateProcessorTest#testSliceRouting fails 1% of time:

[http://fucit.org/solr-jenkins-reports/failure-report.html]",,,,,,,,,,,,,,,,,,,,"26/Oct/18 15:27;markrmiller@gmail.com;TimeRoutedAliasUpdateProcessorTest.patch;https://issues.apache.org/jira/secure/attachment/12945794/TimeRoutedAliasUpdateProcessorTest.patch","28/Oct/18 02:34;erickerickson;failWithMarksPatch.zip;https://issues.apache.org/jira/secure/attachment/12945947/failWithMarksPatch.zip","28/Oct/18 02:27;erickerickson;fail_logs.zip;https://issues.apache.org/jira/secure/attachment/12945946/fail_logs.zip","25/Oct/18 19:22;dsmiley;testSliceRouting b23054.log.zip;https://issues.apache.org/jira/secure/attachment/12945642/testSliceRouting+b23054.log.zip",,,,,,,4.0,,,,,,,,,,,,,,,,,,,,2018-10-26 00:55:35.956,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 02 21:32:51 UTC 2018,,,,,,,"0|i3zncn:",9223372036854775807,,,,,,,,,,,,,,,"25/Oct/18 19:21;dsmiley;I looked at a recent failure... env:

{noformat}
Started by upstream project ""Lucene-Solr-master-Linux"" build number 23054
originally caused by:
 [ScriptTrigger] Groovy Expression evaluation to true. (log)
[EnvInject] - Loading node environment variables.
[EnvInject] - Preparing an environment for the build.
[EnvInject] - Keeping Jenkins system variables.
[EnvInject] - Keeping Jenkins build variables.
[EnvInject] - Evaluating the Groovy script content
Using Java: 64bit/jdk-12-ea+12 -XX:+UseCompressedOops -XX:+UseG1GC
[EnvInject] - Injecting contributions.
Building on master in workspace /var/lib/jenkins/workspace/Lucene-Solr-7.x-Linux
Fetching changes from the remote Git repository
Cleaning workspace
Checking out Revision 2f61f96bfae9d97e3536305e49865433e28737c2 (refs/remotes/origin/branch_7x)
Commit message: ""SOLR-10981: Support for stream.url or stream.file pointing to gzipped data""
No emails were triggered.
Setting ANT_1_8_2_HOME=/var/lib/jenkins/tools/hudson.tasks.Ant_AntInstallation/ANT_1.8.2
[description-setter] Description set: Java: 64bit/jdk-12-ea+12 -XX:+UseCompressedOops -XX:+UseG1GC
Setting ANT_1_8_2_HOME=/var/lib/jenkins/tools/hudson.tasks.Ant_AntInstallation/ANT_1.8.2
[Lucene-Solr-7.x-Linux] $ /var/lib/jenkins/tools/hudson.tasks.Ant_AntInstallation/ANT_1.8.2/bin/ant ""-Dargs=-XX:+UseCompressedOops -XX:+UseG1GC"" jenkins-hourly
Buildfile: /home/jenkins/workspace/Lucene-Solr-7.x-Linux/build.xml
{noformat}

And took out the logs for this particular test.  I noticed SSL problem:
{noformat}
Caused by: javax.net.ssl.SSLException: Received fatal alert: internal_error
 [junit4] 2> at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:129)
 [junit4] 2> at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:117)
 [junit4] 2> at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:308)
 [junit4] 2> at java.base/sun.security.ssl.Alert$AlertConsumer.consume(Alert.java:279)
 [junit4] 2> at java.base/sun.security.ssl.TransportContext.dispatch(TransportContext.java:181)
 [junit4] 2> at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:164)
{noformat}

CC [~gus_heck]","26/Oct/18 00:55;erickerickson;David:

I have a spare machine if you'd like me to beast this test to gather failures and/or try patches. I suppose I'll beast it tonight just to see if I can repro since you're working on it.

Oh, and what's the difference between this one and SOLR-12929?

Erick","26/Oct/18 04:40;dsmiley;thank you; I would appreciate it if you beast this test class which contains two test methods -- testSliceRouting() (this issue) and test() ( SOLR-12929 ) which is currently badappled","26/Oct/18 15:13;erickerickson;Well, 1,002 runs last night and all of then succeeded. I'll try another couple of thousand today/tonight.

Siiiigggghhhh.","26/Oct/18 15:27;markrmiller@gmail.com;Not related to SSL, but here is some improvement to this test attached.","26/Oct/18 15:56;erickerickson;I'll run for a while to see if I can generate a failure then apply the patch.

","27/Oct/18 02:17;erickerickson;I actually have access to two machines. My mac Pro had 2,000 runs with no failures.

The Dell server had 3 failures in 1,024 runs _without_ Mark's patch. So I'll apply his patch and see. 

Interestingly, all three failures failed these tests:

[junit4] - org.apache.solr.update.processor.TimeRoutedAliasUpdateProcessorTest.test
 [junit4] - org.apache.solr.update.processor.TimeRoutedAliasUpdateProcessorTest.testPreemptiveCreation
 [junit4] - org.apache.solr.update.processor.TimeRoutedAliasUpdateProcessorTest.testSliceRouting
 [junit4]

 

and the cause was

[junit4] > Throwable #1: org.apache.solr.client.solrj.impl.HttpSolrClient$RemoteExecutionException: Error from server at https://127.0.0.1:45658/solr: no such collection or alias
 [junit4] > at __randomizedtesting.SeedInfo.seed([76092F3DC9C2CAAA:FE5D10E7673EA752]:0)
 [junit4] > at org.apache.solr.client.solrj.impl.HttpSolrClient$RemoteExecutionException.create(HttpSolrClient.java:

 

I've preserved the log files in case you're interested.

 

 ","28/Oct/18 01:41;dsmiley;Thanks Erick.  I am interested in the logs.  I suspect this shows the symptoms of SOLR-12386 which is a spooky one.

[~markrmiller@gmail.com] I looked at your improvement patch.  Do you think the test was failing due to creating a configSet with a bad name or due to lack of configSet cleanup?  Note that each test method creates configSets named separately that ought not to interfere with each other.","28/Oct/18 02:33;erickerickson;[~dsmiley] Failures attached.

I'm running a couple of thousand tests with Mark's patch and I see three failures, I'll attach momentarily.

 ","28/Oct/18 14:50;markrmiller@gmail.com;My patch is to make this test work with ant beast and related test options.

Test methods need to be able to be run more than once.

The only reason I popped it up here is because of how config sets are named - that is broken - you can't count on a clean test method name always.

No clue if that is the stability problem of this test. It's not in my way in that respect yet.","28/Oct/18 16:23;erickerickson;Got it, thanks.","02/Nov/18 21:32;dsmiley;the first two of three log files in [^failWithMarksPatch.zip] failed with symptoms of SOLR-12386 (simply search for ""can't find resource"").  The third ""420stdout"", I'm not sure yet.",,,,,,,,,,,,,,,,
Harden TestSimNodeAddedTrigger,SOLR-13078,13204982,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,gerlowskija,gerlowskija,gerlowskija,17/Dec/18 20:28,08/Jun/19 15:02,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,Jenkins has been failing occasionally with issues in TestSimNodeAddedTrigger.  We should look into these and make it pass more reliably.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2018-12-17 20:28:47.0,,,,,,,"0|u002bs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Harden TestSimExecuteActionPlan,SOLR-13065,13204038,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,gerlowskija,gerlowskija,gerlowskija,12/Dec/18 16:20,08/Jun/19 14:59,18/Feb/21 10:02,,8.0,,,,,,,,,,,0,,,,TestSimExecuteActionPlan is a serial offender in our failed Jenkins jobs.  Would like to look into improving it.,,,,,,,,,,,,,,,,,,,,"14/Dec/18 16:22;gerlowskija;SOLR-13065.patch;https://issues.apache.org/jira/secure/attachment/12951835/SOLR-13065.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2018-12-14 17:22:24.624,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Dec 15 10:03:59 UTC 2018,,,,,,,"0|s01ga0:",9223372036854775807,,,,,,,,,,,,,,,"12/Dec/18 17:59;gerlowskija;At first glance, this looks like a similar problem to what I recently saw in SOLR-13045.  The test fails in a {{waitForState}} block, but there's some indication that we're using an outdated (cached?) copy of the clusterstatus info.

Here's a partial stack from a recent failure I got:

{code}
  [beaster]   2> NOTE: reproduce with: ant test  -Dtestcase=TestSimExecutePlanAction -Dtests.method=testIntegration -Dtests.seed=18902C9108C137F1 -Dtests.slow=true -Dtests.badapples=true -Dtests.locale=es-GT -Dtests.timezone=Asia/Rangoon -Dtests.asserts=true -Dtests.file.encoding=UTF-8
  [beaster]   2> 24745 INFO  (simCloudManagerPool-112-thread-8) [    ] o.a.s.c.CloudTestUtils -- wrong number of active replicas in slice shard1, expected=1, found=2
  [beaster] [12:26:46.105] FAILURE 2.13s | TestSimExecutePlanAction.testIntegration {seed=[18902C9108C137F1:7163CC06353074F9]} <<< 
  [beaster]    > Throwable #1: java.lang.AssertionError: Timed out waiting for replicas of collection to be 2 again
  [beaster]    > Live Nodes: [127.0.0.1:10016_solr]
  [beaster]    > Last available state: DocCollection(testIntegration//clusterstate.json/444)={
 ...
  [beaster]    >  at __randomizedtesting.SeedInfo.seed([18902C9108C137F1:7163CC06353074F9]:0)
  [beaster]    >  at org.apache.solr.cloud.CloudTestUtils.waitForState(CloudTestUtils.java:70)
  [beaster]    >  at org.apache.solr.cloud.autoscaling.sim.TestSimExecutePlanAction.testIntegration(TestSimExecutePlanAction.java:200
...
  [beaster]    > Caused by: java.util.concurrent.TimeoutException: last ClusterState: znodeVersion: 445
{code}

Note the different reported ""last"" clusterstate versions.  We see that there's a clusterstate.json version 445, but the failing assertion only has 444.  That's not to say definitively that version 445 would pass the assertion, but it's a place to start. ","12/Dec/18 21:17;gerlowskija;When I disable SimClusterStateProvider's caching, the error disappears in a beast run of {{-Dbeast.iters=400 -Dtests.dupes=30 -Dtests.iters=20}}, which implies that the cluster state caching is the only issue, and we'll need to follow a similar fix to SOLR-13045. ","14/Dec/18 16:29;gerlowskija;Attaching a patch which fixes most of the failures I've seen in TestSimExecutePlanAction.

From what I saw, the test was mostly failing due to the same race-condition that caused the test failures in SOLR-13045.  That is: (1) SimClusterStateProvider cached the cluster state and had a lock for putting entries in that cache, but (2) it often didn't lock when clearing the cache.  This led to some cases where the cache was invalidated (with callers expecting a full repopulation of the clusterstate), but the cache was instead repopulated with stale information.

(I explain this more fully on SOLR-13045, in case the issue is unclear from the above summary.)

I fixed a single instance of this missing locking in SOLR-13045, but only realized it was a more widespread problem here on SOLR-13065.  The attached patch fixes all remaining case I could find of this issue.","14/Dec/18 17:22;jira-bot;Commit 1d601ed6460c9041faabeec7f5491ef21a052a00 in lucene-solr's branch refs/heads/master from [~gerlowskija]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1d601ed ]

SOLR-13065: Harden TestSimExecutePlanAction
","14/Dec/18 17:56;jira-bot;Commit a4112878fcdb016dad67c78d3ec1aaabcefbc9c0 in lucene-solr's branch refs/heads/branch_7x from [~gerlowskija]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a411287 ]

SOLR-13065: Harden TestSimExecutePlanAction
","15/Dec/18 10:03;jira-bot;Commit 1d601ed6460c9041faabeec7f5491ef21a052a00 in lucene-solr's branch refs/heads/jira/http2 from [~gerlowskija]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1d601ed ]

SOLR-13065: Harden TestSimExecutePlanAction
",,,,,,,,,,,,,,,,,,,,,,
TimeRoutedAliasUpdateProcessorTest.test debug and un-badapple,SOLR-12929,13194233,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,dsmiley,dsmiley,25/Oct/18 19:45,08/Jun/19 14:58,18/Feb/21 10:02,,,,,,,,SolrCloud,,,,,0,,,,TimeRoutedAliasUpdateProcessorTest.test was BadApple'd recently.  We need to debug this test.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2018-10-25 19:45:43.0,,,,,,,"0|i3zne7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SaslZkACLProviderTest is failing a lot on trunk because it leaks threads.,SOLR-8544,12930146,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,14/Jan/16 14:10,02/Apr/19 14:10,18/Feb/21 10:02,,,,,,,,Tests,,,,,0,,,,"{noformat}
3 tests failed.
FAILED:  junit.framework.TestSuite.org.apache.solr.cloud.SaslZkACLProviderTest

Error Message:
5 threads leaked from SUITE scope at org.apache.solr.cloud.SaslZkACLProviderTest
{noformat}",,,,,,,,,,,,,,,,SOLR-7183,SOLR-6915,,,"02/Apr/19 14:07;gezapeti;SOLR-8544.patch;https://issues.apache.org/jira/secure/attachment/12964572/SOLR-8544.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2019-04-02 14:10:08.253,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 02 14:10:08 UTC 2019,,,,,,,"0|i2rapj:",9223372036854775807,,,,,,,,,,,,,,,"14/Jan/16 14:12;markrmiller@gmail.com;Does not seem to reproduce, so does not appear to be related to locale.

Example: http://jenkins.thetaphi.de/job/Lucene-Solr-trunk-Linux/15550/

{noformat}
Error Message:
org.apache.directory.api.ldap.model.exception.LdapOtherException: org.apache.directory.api.ldap.model.exception.LdapOtherException: ERR_04447_CANNOT_NORMALIZE_VALUE Cannot normalize the wrapped value ERR_04473_NOT_VALID_VALUE Not a valid value '20090818022733Z' for the AttributeType 'ATTRIBUTE_TYPE ( 1.3.6.1.4.1.18060.0.4.1.2.35  NAME 'schemaModifyTimestamp'  DESC time which schema was modified  SUP modifyTimestamp  EQUALITY generalizedTimeMatch  ORDERING generalizedTimeOrderingMatch  SYNTAX 1.3.6.1.4.1.1466.115.121.1.24  USAGE directoryOperation  ) '

Stack Trace:
java.lang.RuntimeException: org.apache.directory.api.ldap.model.exception.LdapOtherException: org.apache.directory.api.ldap.model.exception.LdapOtherException: ERR_04447_CANNOT_NORMALIZE_VALUE Cannot normalize the wrapped value ERR_04473_NOT_VALID_VALUE Not a valid value '20090818022733Z' for the AttributeType 'ATTRIBUTE_TYPE ( 1.3.6.1.4.1.18060.0.4.1.2.35
 NAME 'schemaModifyTimestamp'
 DESC time which schema was modified
 SUP modifyTimestamp
 EQUALITY generalizedTimeMatch
 ORDERING generalizedTimeOrderingMatch
 SYNTAX 1.3.6.1.4.1.1466.115.121.1.24
 USAGE directoryOperation
 )
'
        at org.apache.solr.cloud.SaslZkACLProviderTest$SaslZkTestServer.run(SaslZkACLProviderTest.java:211)
        at org.apache.solr.cloud.SaslZkACLProviderTest.setUp(SaslZkACLProviderTest.java:81)
{noformat}","02/Apr/19 14:10;gezapeti;We've applied these changes to the test and it is running fine. The patch was originally created by [~hgadre]",,,,,,,,,,,,,,,,,,,,,,,,,,
LeaderIntegrationTest sometimes hangs,SOLR-4012,12613887,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,rcmuir,rcmuir,29/Oct/12 13:20,28/Mar/19 18:17,18/Feb/21 10:02,,,,,,,,Tests,,,,,0,,,,I was unable to get a stacktrace before. This time I succeeded.,windows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-10-29 13:34:47.795,,,false,,,,,,,,,,,,,,,,,252771,,,Thu Mar 28 18:17:59 UTC 2019,,,,,,,"0|i0d84f:",75092,,,,,,,,,,,,,,,"29/Oct/12 13:20;rcmuir;{noformat}
2012-10-29 09:17:20
Full thread dump Java HotSpot(TM) Client VM (19.0-b09 mixed mode, sharing):

""searcherExecutor-92-thread-1"" prio=6 tid=0x05259800 nid=0x1b54 waiting on condition [0x06bff000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x1fd50c20> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:662)

""TEST-LeaderElectionIntegrationTest.testLeaderElectionAfterClientTimeout-seed#[A66B1B5824E9744C]-EventThread"" daemon prio=6 tid=0x05259400 nid=0x1e5c waiting on condition [0x06b6f000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x1fc08aa8> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498)

""TEST-LeaderElectionIntegrationTest.testLeaderElectionAfterClientTimeout-seed#[A66B1B5824E9744C]-SendThread(127.0.0.1:59207)"" daemon prio=6 tid=0x05258c00 nid=0x1a00 runnable [0x06adf000]
   java.lang.Thread.State: RUNNABLE
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll0(Native Method)
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll(WindowsSelectorImpl.java:273)
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.access$400(WindowsSelectorImpl.java:255)
	at sun.nio.ch.WindowsSelectorImpl.doSelect(WindowsSelectorImpl.java:136)
	at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69)
	- locked <0x1fc0bc98> (a sun.nio.ch.Util$2)
	- locked <0x1fc0bca8> (a java.util.Collections$UnmodifiableSet)
	- locked <0x1fc0bc20> (a sun.nio.ch.WindowsSelectorImpl)
	at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1131)

""searcherExecutor-84-thread-1"" prio=6 tid=0x05258800 nid=0x1f88 waiting on condition [0x06a4f000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x1fbb2c18> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:662)

""TEST-LeaderElectionIntegrationTest.testLeaderElectionAfterClientTimeout-seed#[A66B1B5824E9744C]-EventThread"" daemon prio=6 tid=0x05226c00 nid=0x1a70 waiting on condition [0x069bf000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x1faa0c20> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498)

""TEST-LeaderElectionIntegrationTest.testLeaderElectionAfterClientTimeout-seed#[A66B1B5824E9744C]-SendThread(127.0.0.1:59207)"" daemon prio=6 tid=0x05226400 nid=0x1f08 runnable [0x0692f000]
   java.lang.Thread.State: RUNNABLE
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll0(Native Method)
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll(WindowsSelectorImpl.java:273)
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.access$400(WindowsSelectorImpl.java:255)
	at sun.nio.ch.WindowsSelectorImpl.doSelect(WindowsSelectorImpl.java:136)
	at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69)
	- locked <0x1faa3e10> (a sun.nio.ch.Util$2)
	- locked <0x1faa3e20> (a java.util.Collections$UnmodifiableSet)
	- locked <0x1faa3d98> (a sun.nio.ch.WindowsSelectorImpl)
	at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1131)

""searcherExecutor-76-thread-1"" prio=6 tid=0x05225000 nid=0x1588 waiting on condition [0x0689f000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x1fa3ba68> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:662)

""TEST-LeaderElectionIntegrationTest.testLeaderElectionAfterClientTimeout-seed#[A66B1B5824E9744C]-EventThread"" daemon prio=6 tid=0x05227c00 nid=0x1094 waiting on condition [0x0680f000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x1f9127d0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498)

""TEST-LeaderElectionIntegrationTest.testLeaderElectionAfterClientTimeout-seed#[A66B1B5824E9744C]-SendThread(127.0.0.1:59207)"" daemon prio=6 tid=0x05225c00 nid=0x1e80 runnable [0x0677f000]
   java.lang.Thread.State: RUNNABLE
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll0(Native Method)
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll(WindowsSelectorImpl.java:273)
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.access$400(WindowsSelectorImpl.java:255)
	at sun.nio.ch.WindowsSelectorImpl.doSelect(WindowsSelectorImpl.java:136)
	at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69)
	- locked <0x1f9159c0> (a sun.nio.ch.Util$2)
	- locked <0x1f9159d0> (a java.util.Collections$UnmodifiableSet)
	- locked <0x1f915948> (a sun.nio.ch.WindowsSelectorImpl)
	at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1131)

""searcherExecutor-68-thread-1"" prio=6 tid=0x05225800 nid=0x1d68 waiting on condition [0x066ef000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x1f8cc6f8> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:662)

""TEST-LeaderElectionIntegrationTest.testLeaderElectionAfterClientTimeout-seed#[A66B1B5824E9744C]-EventThread"" daemon prio=6 tid=0x05229000 nid=0x1fc4 waiting on condition [0x0665f000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x1f75c8c8> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498)

""TEST-LeaderElectionIntegrationTest.testLeaderElectionAfterClientTimeout-seed#[A66B1B5824E9744C]-SendThread(127.0.0.1:59207)"" daemon prio=6 tid=0x05227800 nid=0x1d88 runnable [0x065cf000]
   java.lang.Thread.State: RUNNABLE
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll0(Native Method)
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll(WindowsSelectorImpl.java:273)
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.access$400(WindowsSelectorImpl.java:255)
	at sun.nio.ch.WindowsSelectorImpl.doSelect(WindowsSelectorImpl.java:136)
	at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69)
	- locked <0x1f75fab8> (a sun.nio.ch.Util$2)
	- locked <0x1f75fac8> (a java.util.Collections$UnmodifiableSet)
	- locked <0x1f75fa40> (a sun.nio.ch.WindowsSelectorImpl)
	at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1131)

""searcherExecutor-60-thread-1"" prio=6 tid=0x0522a000 nid=0x1860 waiting on condition [0x0653f000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x1f744978> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:662)

""TEST-LeaderElectionIntegrationTest.testLeaderElectionAfterClientTimeout-seed#[A66B1B5824E9744C]-EventThread"" daemon prio=6 tid=0x05229400 nid=0x1d9c waiting on condition [0x064af000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x1f6cc3a8> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498)

""TEST-LeaderElectionIntegrationTest.testLeaderElectionAfterClientTimeout-seed#[A66B1B5824E9744C]-SendThread(127.0.0.1:59207)"" daemon prio=6 tid=0x05228800 nid=0x1c64 runnable [0x0641f000]
   java.lang.Thread.State: RUNNABLE
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll0(Native Method)
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll(WindowsSelectorImpl.java:273)
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.access$400(WindowsSelectorImpl.java:255)
	at sun.nio.ch.WindowsSelectorImpl.doSelect(WindowsSelectorImpl.java:136)
	at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69)
	- locked <0x1f6cf578> (a sun.nio.ch.Util$2)
	- locked <0x1f6cf588> (a java.util.Collections$UnmodifiableSet)
	- locked <0x1f6cf500> (a sun.nio.ch.WindowsSelectorImpl)
	at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1131)

""searcherExecutor-52-thread-1"" prio=6 tid=0x05229c00 nid=0x6a0 waiting on condition [0x0638f000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x1f670f90> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:662)

""Overseer-88572709385666562-127.0.0.1:7000_solr-n_0000000000"" daemon prio=6 tid=0x0522b400 nid=0x1c08 waiting on condition [0x05aff000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x1f61f038> (a java.util.concurrent.CountDownLatch$Sync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:207)
	at org.apache.solr.cloud.DistributedQueue$LatchChildWatcher.await(DistributedQueue.java:179)
	at org.apache.solr.cloud.DistributedQueue.peek(DistributedQueue.java:277)
	at org.apache.solr.cloud.OverseerCollectionProcessor.run(OverseerCollectionProcessor.java:86)
	at java.lang.Thread.run(Thread.java:662)

""Thread-8"" daemon prio=6 tid=0x05228400 nid=0x1850 waiting on condition [0x0594f000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at org.apache.solr.cloud.Overseer$ClusterStateUpdater.run(Overseer.java:156)
	at java.lang.Thread.run(Thread.java:662)

""TEST-LeaderElectionIntegrationTest.testLeaderElectionAfterClientTimeout-seed#[A66B1B5824E9744C]-EventThread"" daemon prio=6 tid=0x0522c400 nid=0xba4 waiting on condition [0x05a6f000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x1f61f258> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498)

""TEST-LeaderElectionIntegrationTest.testLeaderElectionAfterClientTimeout-seed#[A66B1B5824E9744C]-SendThread(127.0.0.1:59207)"" daemon prio=6 tid=0x05227000 nid=0x16a8 runnable [0x058bf000]
   java.lang.Thread.State: RUNNABLE
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll0(Native Method)
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll(WindowsSelectorImpl.java:273)
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.access$400(WindowsSelectorImpl.java:255)
	at sun.nio.ch.WindowsSelectorImpl.doSelect(WindowsSelectorImpl.java:136)
	at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69)
	- locked <0x1f622428> (a sun.nio.ch.Util$2)
	- locked <0x1f622438> (a java.util.Collections$UnmodifiableSet)
	- locked <0x1f6223b0> (a sun.nio.ch.WindowsSelectorImpl)
	at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1131)

""ProcessThread:-1"" daemon prio=6 tid=0x0522cc00 nid=0xcf0 waiting on condition [0x0582f000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x1f5b0ff8> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at org.apache.zookeeper.server.PrepRequestProcessor.run(PrepRequestProcessor.java:105)

""SyncThread:0"" daemon prio=6 tid=0x0522a800 nid=0xfcc waiting on condition [0x0579f000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x1f5b10e0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at org.apache.zookeeper.server.SyncRequestProcessor.run(SyncRequestProcessor.java:94)

""SessionTracker"" daemon prio=6 tid=0x0522b800 nid=0x1314 in Object.wait() [0x0570f000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at org.apache.zookeeper.server.SessionTrackerImpl.run(SessionTrackerImpl.java:145)
	- locked <0x1f5b1140> (a org.apache.zookeeper.server.SessionTrackerImpl)

""NIOServerCxn.Factory:0.0.0.0/0.0.0.0:0"" daemon prio=6 tid=0x0522c000 nid=0x1798 runnable [0x0567f000]
   java.lang.Thread.State: RUNNABLE
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll0(Native Method)
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.poll(WindowsSelectorImpl.java:273)
	at sun.nio.ch.WindowsSelectorImpl$SubSelector.access$400(WindowsSelectorImpl.java:255)
	at sun.nio.ch.WindowsSelectorImpl.doSelect(WindowsSelectorImpl.java:136)
	at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69)
	- locked <0x1f5b4338> (a sun.nio.ch.Util$2)
	- locked <0x1f5b4348> (a java.util.Collections$UnmodifiableSet)
	- locked <0x1f5b42c0> (a sun.nio.ch.WindowsSelectorImpl)
	at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)
	at org.apache.zookeeper.server.NIOServerCnxn$Factory.run(NIOServerCnxn.java:232)

""Thread-7"" daemon prio=6 tid=0x0522ac00 nid=0x1790 in Object.wait() [0x0545f000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x1f5b11e0> (a org.apache.zookeeper.server.NIOServerCnxn$Factory)
	at java.lang.Thread.join(Thread.java:1186)
	- locked <0x1f5b11e0> (a org.apache.zookeeper.server.NIOServerCnxn$Factory)
	at java.lang.Thread.join(Thread.java:1239)
	at org.apache.solr.cloud.ZkTestServer$ZKServerMain.runFromConfig(ZkTestServer.java:103)
	at org.apache.solr.cloud.ZkTestServer$2.run(ZkTestServer.java:214)

""TEST-LeaderElectionIntegrationTest.testLeaderElectionAfterClientTimeout-seed#[A66B1B5824E9744C]"" prio=6 tid=0x0513a000 nid=0x1b64 waiting on condition [0x053ce000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at org.apache.solr.cloud.ShardLeaderElectionContext.waitForReplicasToComeUp(ElectionContext.java:317)
	at org.apache.solr.cloud.ShardLeaderElectionContext.runLeaderProcess(ElectionContext.java:150)
	at org.apache.solr.cloud.LeaderElector.runIamLeaderProcess(LeaderElector.java:155)
	at org.apache.solr.cloud.LeaderElector.checkIfIamLeader(LeaderElector.java:99)
	at org.apache.solr.cloud.LeaderElector.joinElection(LeaderElector.java:265)
	at org.apache.solr.cloud.ZkController.joinElection(ZkController.java:733)
	at org.apache.solr.cloud.ZkController.register(ZkController.java:566)
	at org.apache.solr.cloud.ZkController.register(ZkController.java:532)
	at org.apache.solr.core.CoreContainer.registerInZk(CoreContainer.java:704)
	at org.apache.solr.core.CoreContainer.register(CoreContainer.java:688)
	at org.apache.solr.core.CoreContainer.load(CoreContainer.java:530)
	at org.apache.solr.core.CoreContainer.load(CoreContainer.java:351)
	at org.apache.solr.core.CoreContainer$Initializer.initialize(CoreContainer.java:303)
	at org.apache.solr.cloud.LeaderElectionIntegrationTest.setupContainer(LeaderElectionIntegrationTest.java:152)
	at org.apache.solr.cloud.LeaderElectionIntegrationTest.setUp(LeaderElectionIntegrationTest.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1559)
	at com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:79)
	at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:771)
	at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:787)
	at com.carrotsearch.randomizedtesting.rules.SystemPropertiesRestoreRule$1.evaluate(SystemPropertiesRestoreRule.java:53)
	at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)
	at org.apache.lucene.util.TestRuleFieldCacheSanity$1.evaluate(TestRuleFieldCacheSanity.java:51)
	at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)
	at com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)
	at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)
	at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)
	at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)
	at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)
	at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:358)
	at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:782)
	at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:442)
	at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:746)
	at com.carrotsearch.randomizedtesting.RandomizedRunner$3.evaluate(RandomizedRunner.java:648)
	at com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:682)
	at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:693)
	at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)
	at com.carrotsearch.randomizedtesting.rules.SystemPropertiesRestoreRule$1.evaluate(SystemPropertiesRestoreRule.java:53)
	at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)
	at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)
	at com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)
	at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)
	at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)
	at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)
	at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:43)
	at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)
	at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)
	at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)
	at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)
	at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:358)
	at java.lang.Thread.run(Thread.java:662)

""SUITE-LeaderElectionIntegrationTest-seed#[A66B1B5824E9744C]"" prio=6 tid=0x0515d400 nid=0x1a40 in Object.wait() [0x0533f000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x1f09f070> (a java.lang.Thread)
	at java.lang.Thread.join(Thread.java:1194)
	- locked <0x1f09f070> (a java.lang.Thread)
	at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:787)
	at com.carrotsearch.randomizedtesting.ThreadLeakControl$2.evaluate(ThreadLeakControl.java:385)
	at com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:556)
	at com.carrotsearch.randomizedtesting.RandomizedRunner.access$200(RandomizedRunner.java:79)
	at com.carrotsearch.randomizedtesting.RandomizedRunner$1.run(RandomizedRunner.java:492)

""Low Memory Detector"" daemon prio=6 tid=0x00cc3400 nid=0x1098 runnable [0x00000000]
   java.lang.Thread.State: RUNNABLE

""CompilerThread0"" daemon prio=10 tid=0x00cc2000 nid=0x1b88 waiting on condition [0x00000000]
   java.lang.Thread.State: RUNNABLE

""Attach Listener"" daemon prio=10 tid=0x00cc1000 nid=0x1c44 waiting on condition [0x00000000]
   java.lang.Thread.State: RUNNABLE

""Signal Dispatcher"" daemon prio=10 tid=0x00cc0000 nid=0x13a0 runnable [0x00000000]
   java.lang.Thread.State: RUNNABLE

""Finalizer"" daemon prio=8 tid=0x00c76400 nid=0x189c in Object.wait() [0x0489f000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118)
	- locked <0x1efe02b0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:134)
	at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

""Reference Handler"" daemon prio=10 tid=0x00c74c00 nid=0x15e0 in Object.wait() [0x0480f000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
	- locked <0x1efe0340> (a java.lang.ref.Reference$Lock)

""main"" prio=6 tid=0x002fec00 nid=0x18ec in Object.wait() [0x003af000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x1f0888b8> (a com.carrotsearch.randomizedtesting.RandomizedRunner$1)
	at java.lang.Thread.join(Thread.java:1186)
	- locked <0x1f0888b8> (a com.carrotsearch.randomizedtesting.RandomizedRunner$1)
	at java.lang.Thread.join(Thread.java:1239)
	at com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:502)
	at com.carrotsearch.randomizedtesting.RandomizedRunner.run(RandomizedRunner.java:399)
	at com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.execute(SlaveMain.java:161)
	at com.carrotsearch.ant.tasks.junit4.slave.SlaveMain.main(SlaveMain.java:255)
	at com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe.main(SlaveMainSafe.java:12)

""VM Thread"" prio=10 tid=0x00c73400 nid=0x1d50 runnable 

""VM Periodic Task Thread"" prio=10 tid=0x00cc5800 nid=0xfdc waiting on condition 

JNI global references: 1462

{noformat}","29/Oct/12 13:34;dweiss;It didn't time out yet (the runner) so I guess you're not talking about the runner issue?
","29/Oct/12 13:47;rcmuir;This is just a ""normal"" test hang I think.
","29/Oct/12 13:48;dweiss;Yup, sorry, thought it's the hung runner issue.","29/Oct/12 15:12;markrmiller@gmail.com;It's waiting to see other replicas come up - which is odd, because it should be the first time the nodes are coming up in setup - seems like perhaps pollution between the two tests...I'm adding a timestamp to the zk dir so it's sure to be different for each test in this class.","22/Mar/13 16:22;commit-tag-bot;[branch_4x commit] Mark Robert Miller
http://svn.apache.org/viewvc?view=revision&revision=1403372

SOLR-4012 LeaderIntegrationTest sometimes hangs - ensure unique zk data dir

","28/Mar/19 18:17;erickerickson;Can we close this?",,,,,,,,,,,,,,,,,,,,,
org.apache.hadoop.hdfs.PeerCache is not stopped in many of our tests after server and client shutdown.,SOLR-7288,12784685,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,22/Mar/15 19:01,19/Mar/19 11:32,18/Feb/21 10:02,,,,,,,,Hadoop Integration,hdfs,,,,0,,,,,,,,,,,,,,,,,,,,SOLR-7287,SOLR-5007,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2015-03-22 19:01:54.0,,,,,,,"0|i277bb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.hadoop.hdfs.LeaseRenewer is not stopped after HDFS is shutdown if it has been started by FS#recoverLease.,SOLR-7287,12784684,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,22/Mar/15 18:55,19/Mar/19 11:31,18/Feb/21 10:02,,,,,,,,Hadoop Integration,hdfs,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2015-03-22 18:55:21.0,,,,,,,"0|i277b3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable HDFS HA NameNode setup and fail-over testing added in SOLR-7311.,SOLR-7360,12818980,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,07/Apr/15 16:12,19/Mar/19 10:10,18/Feb/21 10:02,,,,,,,,Hadoop Integration,hdfs,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 24 14:16:06 UTC 2015,,,,,,,"0|i2cx13:",9223372036854775807,,,,,,,,,,,,,,,"24/Apr/15 14:16;markrmiller@gmail.com;This is not enabled for now due to a variety of hdfs thread leaks when using HA and failover with the mini cluster.",,,,,,,,,,,,,,,,,,,,,,,,,,,
Unit tests for secure (kerberos-based) HDFS,SOLR-6373,12733892,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,gchanan,gchanan,13/Aug/14 22:02,02/Feb/19 17:53,18/Feb/21 10:02,,,,,,,,Hadoop Integration,hdfs,security,Tests,,1,,,,"The HdfsDirectoryFactory has support for reading/writing secure HDFS, but we currently have no unit tests that exercise this functionality.  It should be possible to write them using Hadoop's MiniKDC, but I haven't investigated that in depth.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,411920,,,2014-08-13 22:02:08.0,,,,,,,"0|i1yv53:",411910,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rare DistribCursorPagingTest fail. ,SOLR-6974,12767263,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,13/Jan/15 20:52,22/Feb/18 18:30,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"{noformat}
   [junit4] FAILURE 20.6s J1 | DistribCursorPagingTest.testDistribSearch <<<
   [junit4]    > Throwable #1: java.lang.AssertionError: Expected 175 docs but got 174. sort=date asc, id asc. Missing doc(s): {id=24, int=1333046113, int_last=1333046113, int_first=1333046113, int_dv=1333046113, int_dv_last=1333046113, int_dv_first=1333046113, long=-7383857586581720524, long_last=-7383857586581720524, long_first=-7383857586581720524, long_dv=-7383857586581720524, long_dv_last=-7383857586581720524, long_dv_first=-7383857586581720524, float=-1.42734605E9, float_last=-1.42734605E9, float_first=-1.42734605E9, float_dv=-1.42734605E9, float_dv_last=-1.42734605E9, float_dv_first=-1.42734605E9, double=9.341152841954268E8, double_last=9.341152841954268E8, double_first=9.341152841954268E8, double_dv=9.341152841954268E8, double_dv_last=9.341152841954268E8, double_dv_first=9.341152841954268E8, str=ᝍ᝟ᝒ᝝ᝃᝈ᝟᝔ᝃ, str_last=ᝍ᝟ᝒ᝝ᝃᝈ᝟᝔ᝃ, str_first=ᝍ᝟ᝒ᝝ᝃᝈ᝟᝔ᝃ, str_dv=ᝍ᝟ᝒ᝝ᝃᝈ᝟᝔ᝃ, str_dv_last=ᝍ᝟ᝒ᝝ᝃᝈ᝟᝔ᝃ, str_dv_first=ᝍ᝟ᝒ᝝ᝃᝈ᝟᝔ᝃ, collation_en_primary_last=ᝍ᝟ᝒ᝝ᝃᝈ᝟᝔ᝃ, collation_en_primary_first=ᝍ᝟ᝒ᝝ᝃᝈ᝟᝔ᝃ, collation_en_primary_dv=ᝍ᝟ᝒ᝝ᝃᝈ᝟᝔ᝃ, collation_en_primary_dv_last=ᝍ᝟ᝒ᝝ᝃᝈ᝟᝔ᝃ, collation_en_primary_dv_first=ᝍ᝟ᝒ᝝ᝃᝈ᝟᝔ᝃ, icu_collation_en_primary_last=ᝍ᝟ᝒ᝝ᝃᝈ᝟᝔ᝃ, icu_collation_en_primary_first=ᝍ᝟ᝒ᝝ᝃᝈ᝟᝔ᝃ, icu_collation_en_primary_dv=ᝍ᝟ᝒ᝝ᝃᝈ᝟᝔ᝃ, icu_collation_en_primary_dv_last=ᝍ᝟ᝒ᝝ᝃᝈ᝟᝔ᝃ, icu_collation_en_primary_dv_first=ᝍ᝟ᝒ᝝ᝃᝈ᝟᝔ᝃ, bin=GAl49bogqVc2azE3jET0ZiKX6RguTCn2Zfj3, bin_last=GAl49bogqVc2azE3jET0ZiKX6RguTCn2Zfj3, bin_first=GAl49bogqVc2azE3jET0ZiKX6RguTCn2Zfj3, bin_dv=GAl49bogqVc2azE3jET0ZiKX6RguTCn2Zfj3, bin_dv_last=GAl49bogqVc2azE3jET0ZiKX6RguTCn2Zfj3, bin_dv_first=GAl49bogqVc2azE3jET0ZiKX6RguTCn2Zfj3, date=Sun Nov 12 13:09:05 AST 26752152, date_last=Sun Nov 12 13:09:05 AST 26752152, date_first=Sun Nov 12 13:09:05 AST 26752152, date_dv=Sun Nov 12 13:09:05 AST 26752152, date_dv_last=Sun Nov 12 13:09:05 AST 26752152, date_dv_first=Sun Nov 12 13:09:05 AST 26752152, uuid=87c177fc-0bc6-4bca-a77d-6039a90f47a5, uuid_last=87c177fc-0bc6-4bca-a77d-6039a90f47a5, uuid_first=87c177fc-0bc6-4bca-a77d-6039a90f47a5, uuid_dv=87c177fc-0bc6-4bca-a77d-6039a90f47a5, uuid_dv_last=87c177fc-0bc6-4bca-a77d-6039a90f47a5, uuid_dv_first=87c177fc-0bc6-4bca-a77d-6039a90f47a5, currency=5424307.49,NOK, currency_last=5424307.49,NOK, currency_first=5424307.49,NOK, bool=false, bool_last=false, bool_first=false, enum=Critical, enum_last=Critical, enum_first=Critical, _version_=1490217383853293568}; 
   [junit4]    > 	at __randomizedtesting.SeedInfo.seed([F7E227163CF214D3:7604A90E4BAD74EF]:0)
   [junit4]    > 	at org.apache.solr.cloud.DistribCursorPagingTest.doRandomSortsOnLargeIndex(DistribCursorPagingTest.java:563)
   [junit4]    > 	at org.apache.solr.cloud.DistribCursorPagingTest.doTest(DistribCursorPagingTest.java:87)
   [junit4]    > 	at org.apache.solr.BaseDistributedSearchTestCase.testDistribSearch(BaseDistributedSearchTestCase.java:868)
   [junit4]    > 	at java.lang.Thread.run(Thread.java:745)
{noformat}",,,,,,,,,,,,,,,,,,,,"13/Jan/15 20:53;markrmiller@gmail.com;fail.log;https://issues.apache.org/jira/secure/attachment/12692042/fail.log","10/Aug/15 18:44;sarowe;fail2.log;https://issues.apache.org/jira/secure/attachment/12749661/fail2.log",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2015-08-10 18:44:28.801,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 08 20:59:20 UTC 2015,,,,,,,"0|i24byv:",9223372036854775807,,,,,,,,,,,,,,,"10/Aug/15 18:44;sarowe;My Jenkins had a {{DistribCursorPagingTest}} failure, different from the one Mark posted on this issue.  Posting here because I can't reproduce after 35 trials on OS X:

{noformat}
   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=DistribCursorPagingTest -Dtests.method=test -Dtests.seed=BD12F0C1B5AE89D3 -Dtests.slow=true -Dtests.locale=es_US -Dtests.timezone=MET -Dtests.asserts=true -Dtests.file.encoding=US-ASCII
   [junit4] FAILURE 36.7s J1  | DistribCursorPagingTest.test <<<
   [junit4]    > Throwable #1: java.lang.AssertionError: ({params(q=float%3A%5B0+TO+*%5D+int%3A7+id%3A6&rows=3&sort=score+desc%2C+id+desc),defaults(cursorMark=AoIIPdn6IEU%3D)}) walk already seen: 5, don't know why; q=id:5 gives: {responseHeader={status=0,QTime=15},response={numFound=1,start=0,maxScore=2.098612,docs=[SolrDocument{id=5, str=b, str_last=b, str_first=b, str_dv=b, str_dv_last=b, str_dv_first=b, collation_en_primary_last=b, collation_en_primary_first=b, collation_en_primary_dv=b, collation_en_primary_dv_last=b, collation_en_primary_dv_first=b, icu_collation_en_primary_last=b, icu_collation_en_primary_first=b, icu_collation_en_primary_dv=b, icu_collation_en_primary_dv_last=b, icu_collation_en_primary_dv_first=b, float=64.5, float_last=64.5, float_first=64.5, float_dv=64.5, float_dv_last=64.5, float_dv_first=64.5, int=2001, int_last=2001, int_first=2001, int_dv=2001, int_dv_last=2001, int_dv_first=2001, _version_=1509136007691239424}]}}
   [junit4]    > 	at __randomizedtesting.SeedInfo.seed([BD12F0C1B5AE89D3:3546CF1B1B52E42B]:0)
   [junit4]    > 	at org.apache.solr.cloud.DistribCursorPagingTest.assertFullWalkNoDups(DistribCursorPagingTest.java:743)
   [junit4]    > 	at org.apache.solr.cloud.DistribCursorPagingTest.doSimpleTest(DistribCursorPagingTest.java:464)
   [junit4]    > 	at org.apache.solr.cloud.DistribCursorPagingTest.test(DistribCursorPagingTest.java:89)
   [junit4]    > 	at org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsFixedStatement.callStatement(BaseDistributedSearchTestCase.java:963)
   [junit4]    > 	at org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsStatement.evaluate(BaseDistributedSearchTestCase.java:938)
   [junit4]    > 	at java.lang.Thread.run(Thread.java:745)
{noformat}","08/Sep/15 20:59;sarowe;Yet another, different, fail on ASF Jenkins [https://builds.apache.org/job/Lucene-Solr-Tests-trunk-Java8/377/], again does not reproduce for me on OS X:

{noformat}
   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=DistribCursorPagingTest -Dtests.method=test -Dtests.seed=3A0D3EFE9E0FFC60 -Dtests.multiplier=2 -Dtests.slow=true -Dtests.locale= -Dtests.timezone=Europe/Belfast -Dtests.asserts=true -Dtests.file.encoding=US-ASCII
   [junit4] FAILURE 55.0s J1 | DistribCursorPagingTest.test <<<
   [junit4]    > Throwable #1: java.lang.AssertionError: expected:<1264> but was:<902>
   [junit4]    > 	at __randomizedtesting.SeedInfo.seed([3A0D3EFE9E0FFC60:B259012430F39198]:0)
   [junit4]    > 	at org.apache.solr.cloud.DistribCursorPagingTest.doRandomSortsOnLargeIndex(DistribCursorPagingTest.java:599)
   [junit4]    > 	at org.apache.solr.cloud.DistribCursorPagingTest.test(DistribCursorPagingTest.java:93)
   [junit4]    > 	at org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsFixedStatement.callStatement(BaseDistributedSearchTestCase.java:963)
   [junit4]    > 	at org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsStatement.evaluate(BaseDistributedSearchTestCase.java:938)
   [junit4]    > 	at java.lang.Thread.run(Thread.java:745)
   [junit4]   2> 168568 INFO  (SUITE-DistribCursorPagingTest-seed#[3A0D3EFE9E0FFC60]-worker) [n:127.0.0.1:56660_ c:collection1 s:shard1 r:core_node4 x:collection1] o.a.s.SolrTestCaseJ4 ###deleteCore
   [junit4]   2> NOTE: leaving temporary files on disk at: /x1/jenkins/jenkins-slave/workspace/Lucene-Solr-Tests-trunk-Java8/solr/build/solr-core/test/J1/temp/solr.cloud.DistribCursorPagingTest_3A0D3EFE9E0FFC60-001
   [junit4]   2> Sep 08, 2015 3:03:00 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks
   [junit4]   2> WARNING: Will linger awaiting termination of 1 leaked thread(s).
   [junit4]   2> 169769 WARN  (OverseerStateUpdate-94485802195484690-127.0.0.1:56660_-n_0000000004) [n:127.0.0.1:56660_    ] o.a.s.c.Overseer Solr cannot talk to ZK, exiting Overseer main queue loop
   [junit4]   2> org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /overseer/queue/qn-0000000024
   [junit4]   2> 	at org.apache.zookeeper.KeeperException.create(KeeperException.java:127)
   [junit4]   2> 	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
   [junit4]   2> 	at org.apache.zookeeper.ZooKeeper.getData(ZooKeeper.java:1155)
   [junit4]   2> 	at org.apache.solr.common.cloud.SolrZkClient$7.execute(SolrZkClient.java:353)
   [junit4]   2> 	at org.apache.solr.common.cloud.SolrZkClient$7.execute(SolrZkClient.java:350)
   [junit4]   2> 	at org.apache.solr.common.cloud.ZkCmdExecutor.retryOperation(ZkCmdExecutor.java:61)
   [junit4]   2> 	at org.apache.solr.common.cloud.SolrZkClient.getData(SolrZkClient.java:350)
   [junit4]   2> 	at org.apache.solr.cloud.DistributedQueue.removeFirst(DistributedQueue.java:384)
   [junit4]   2> 	at org.apache.solr.cloud.DistributedQueue.poll(DistributedQueue.java:187)
   [junit4]   2> 	at org.apache.solr.cloud.Overseer$ClusterStateUpdater.run(Overseer.java:229)
   [junit4]   2> 	at java.lang.Thread.run(Thread.java:745)
   [junit4]   2> 169770 INFO  (OverseerStateUpdate-94485802195484690-127.0.0.1:56660_-n_0000000004) [n:127.0.0.1:56660_    ] o.a.s.c.Overseer Overseer Loop exiting : 127.0.0.1:56660_
   [junit4]   2> NOTE: test params are: codec=CheapBastard, sim=DefaultSimilarity, locale=, timezone=Europe/Belfast
   [junit4]   2> NOTE: Linux 3.13.0-52-generic amd64/Oracle Corporation 1.8.0_45 (64-bit)/cpus=4,threads=1,free=186141504,total=382730240
   [junit4]   2> NOTE: All tests run in this JVM: [BufferStoreTest, CachingDirectoryFactoryTest, PreAnalyzedFieldTest, TestDistributedGrouping, HdfsLockFactoryTest, RuleEngineTest, TestTrie, TestClusterStateMutator, TestSurroundQueryParser, SliceStateTest, BaseCdcrDistributedZkTest, SSLMigrationTest, DistributedExpandComponentTest, TestMissingGroups, VMParamsZkACLAndCredentialsProvidersTest, DistribCursorPagingTest]
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.solr.client.solrj.impl.CloudSolrServerTest is failing pretty much every time for a long time with an exception about not being able to connect to ZooKeeper within the timeout.,SOLR-5880,12702304,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,19/Mar/14 02:40,22/Feb/18 18:30,18/Feb/21 10:02,,,,,,4.9,6.0,,,,,,0,,,,"This test is failing consistently, though currently only on Policeman Jenkins servers.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-03-19 03:39:50.984,,,false,,,,,,,,,,,,,,,,,380644,,,Wed Apr 16 12:56:51 UTC 2014,,,,,,,"0|i1tl0f:",380923,,,,,,,,,,,,,,,"19/Mar/14 02:42;markrmiller@gmail.com;This started fairly out of the blue. Since, I've tried raising the timeout from 15 or 30 seconds to 45 seconds. No dice.

See an interesting warning about it taking like 45-50 seconds to fsync the zk write ahead log. Perhaps the issue the other parallel tests putting a lot of pressure on the system.

I'll first try and tackle this long fsync issue.","19/Mar/14 03:39;jira-bot;Commit 1579120 from [~markrmiller@gmail.com] in branch 'dev/trunk'
[ https://svn.apache.org/r1579120 ]

SOLR-5880: Start using zookeeper.forceSync=false in tests.","19/Mar/14 03:44;jira-bot;Commit 1579121 from [~markrmiller@gmail.com] in branch 'dev/branches/branch_4x'
[ https://svn.apache.org/r1579121 ]

SOLR-5880: Start using zookeeper.forceSync=false in tests.","19/Mar/14 14:42;jira-bot;Commit 1579242 from [~markrmiller@gmail.com] in branch 'dev/trunk'
[ https://svn.apache.org/r1579242 ]

SOLR-5880: Stop using zookeeper.forceSync=false for now.","19/Mar/14 14:45;jira-bot;Commit 1579243 from [~markrmiller@gmail.com] in branch 'dev/branches/branch_4x'
[ https://svn.apache.org/r1579243 ]

SOLR-5880: Stop using zookeeper.forceSync=false for now.","19/Mar/14 15:05;jira-bot;Commit 1579252 from [~markrmiller@gmail.com] in branch 'dev/trunk'
[ https://svn.apache.org/r1579252 ]

SOLR-5880: Start using zookeeper.forceSync=false in tests.","19/Mar/14 15:07;jira-bot;Commit 1579253 from [~markrmiller@gmail.com] in branch 'dev/branches/branch_4x'
[ https://svn.apache.org/r1579253 ]

SOLR-5880: Start using zookeeper.forceSync=false in tests.","19/Mar/14 16:57;shalin;Hi Mark, did you find the root cause of the failures?","20/Mar/14 15:43;markrmiller@gmail.com;They were related to SOLR-5865.","24/Mar/14 00:30;jira-bot;Commit 1580674 from [~markrmiller@gmail.com] in branch 'dev/trunk'
[ https://svn.apache.org/r1580674 ]

SOLR-5880: Revert last commit - confused the stack trace - instead, @BadApple this test method for now.","24/Mar/14 00:32;jira-bot;Commit 1580676 from [~markrmiller@gmail.com] in branch 'dev/branches/branch_4x'
[ https://svn.apache.org/r1580676 ]

SOLR-5880: Revert last commit - confused the stack trace - instead, @BadApple this test method for now.","24/Mar/14 02:21;jira-bot;Commit 1580701 from [~markrmiller@gmail.com] in branch 'dev/branches/lucene_solr_4_7'
[ https://svn.apache.org/r1580701 ]

SOLR-5880: @BadApple this test method for now.","24/Mar/14 17:16;jira-bot;Commit 1580922 from [~markrmiller@gmail.com] in branch 'dev/trunk'
[ https://svn.apache.org/r1580922 ]

SOLR-5880: Try syncing solrj test solr.xml up with core test solr.xml.","24/Mar/14 17:18;jira-bot;Commit 1580925 from [~markrmiller@gmail.com] in branch 'dev/branches/branch_4x'
[ https://svn.apache.org/r1580925 ]

SOLR-5880: Try syncing solrj test solr.xml up with core test solr.xml.","01/Apr/14 15:50;jira-bot;Commit 1583721 from shalin@apache.org in branch 'dev/trunk'
[ https://svn.apache.org/r1583721 ]

SOLR-5880: Fix test failure when n=1. Make it at least 2.","01/Apr/14 15:51;jira-bot;Commit 1583722 from shalin@apache.org in branch 'dev/branches/branch_4x'
[ https://svn.apache.org/r1583722 ]

SOLR-5880: Fix test failure when n=1. Make it at least 2.","16/Apr/14 12:56;uschindler;Move issue to Solr 4.9.",,,,,,,,,,,
CloudSolrClientTest#stateVersionParamTest Failure.,SOLR-6961,12766727,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,11/Jan/15 19:54,22/Feb/18 18:30,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"{noformat}
Error Message

Error from server at http://127.0.0.1:35638/kdj/d/checkStateVerCol: STATE STALE: checkStateVerCol:23valid : false

Stacktrace

org.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException: Error from server at http://127.0.0.1:35638/kdj/d/checkStateVerCol: STATE STALE: checkStateVerCol:23valid : false
	at __randomizedtesting.SeedInfo.seed([4C1D87B132BABE4A:CDFB09A945E5DE76]:0)
	at org.apache.solr.client.solrj.impl.HttpSolrClient.executeMethod(HttpSolrClient.java:558)
	at org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:214)
	at org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:210)
	at org.apache.solr.client.solrj.request.QueryRequest.process(QueryRequest.java:91)
	at org.apache.solr.client.solrj.SolrClient.query(SolrClient.java:302)
	at org.apache.solr.client.solrj.impl.CloudSolrClientTest.stateVersionParamTest(CloudSolrClientTest.java:422)
	at org.apache.solr.client.solrj.impl.CloudSolrClientTest.doTest(CloudSolrClientTest.java:126)
	at org.apache.solr.BaseDistributedSearchTestCase.testDistribSearch(BaseDistributedSearchTestCase.java:868)
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Jan 11 19:54:52 UTC 2015,,,,,,,"0|i248o7:",9223372036854775807,,,,,,,,,,,,,,,"11/Jan/15 19:54;markrmiller@gmail.com;NOTE: reproduce with: ant test  -Dtestcase=CloudSolrClientTest -Dtests.method=testDistribSearch -Dtests.seed=4C1D87B132BABE4A -Dtests.slow=true -Dtests.locale=ar -Dtests.timezone=America/Campo_Grande -Dtests.asserts=true -Dtests.file.encoding=UTF-8",,,,,,,,,,,,,,,,,,,,,,,,,,,
distributed tests fail randomly on IBM J9,SOLR-4147,12618915,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,rcmuir,rcmuir,05/Dec/12 18:01,22/Feb/18 18:30,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"Stuff like: http://jenkins.sd-datasolutions.de/job/Lucene-Solr-trunk-Linux/3066/

This doesn't happen on other JVM configurations.

So either something isnt coded to java spec, or J9 has a jvm bug.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-12-05 18:13:02.997,,,false,,,,,,,,,,,,,,,,,296181,,,Wed Oct 14 21:15:39 UTC 2015,,,,,,,"0|i146rj:",232559,,,,,,,,,,,,,,,"05/Dec/12 18:13;uschindler;For me this looks like the test is assuming that the order of fields/documents is in some specific order, but maybe it is backed by a HashMap (e.g. SolrInputDocument, whatever). I will check if it is reproducible in this JVM and look at the test. This one fails quite often because of J9.

I have no idea about the server error 500, but that one also occurs with oracle JDK. So this are actually 2 bugs.","06/Dec/12 16:58;rcmuir;I think it might be a JVM bug: these failures only happen on *64-bit* IBM J9.

I tried reproducing a lot with 32-bit J9 and i had no problems.","06/Dec/12 20:56;rcmuir;I downloaded the latest 64-bit J9. all distributed tests fail everytime easily, reproducible.

Then i pass -Xint, and these same tests pass.

I will add detection to e.g. BaseDistributed to assume() no 64-bit J9, since it has jvm bugs.
","06/Dec/12 21:08;rcmuir;I committed the detection for now. Would be great if we could boil it down further into the particular method being miscompiled, and exclude that (like we do with its miscompilation of FST.pack), figure out how to report the bug to IBM, etc.
","08/Dec/12 05:27;commit-tag-bot;[branch_4x commit] Robert Muir
http://svn.apache.org/viewvc?view=revision&revision=1418083

SOLR-4147: 64-bit IBM jre miscompiles code for these tests, they pass with -Xint

","08/Dec/12 05:27;commit-tag-bot;[trunk commit] Robert Muir
http://svn.apache.org/viewvc?view=revision&revision=1418082

SOLR-4147: 64-bit IBM jre miscompiles code for these tests, they pass with -Xint

","22/Mar/13 16:11;commit-tag-bot;[branch_4x commit] Robert Muir
http://svn.apache.org/viewvc?view=revision&revision=1418083

SOLR-4147: 64-bit IBM jre miscompiles code for these tests, they pass with -Xint
","10/Aug/15 05:08;bnekkare;Seems a very old issue, is this issues still relevant.

Thanks and Regards
Brijesh Nekkare
IBM Java team","14/Oct/15 21:15;Mesbah;The Jenkins job link provided in the description of this JIRA has become invalid. Can you please provide me with the test command line to run so I can reproduce it using IBM JDK?

Thanks, 

Mesbah Alam 
J9 team",,,,,,,,,,,,,,,,,,,
 Integration tests for rolling upgrades,SOLR-8581,12933288,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,viveknarang,viveknarang,22/Jan/16 08:37,16/Feb/17 13:10,18/Feb/21 10:02,,,,,,,,,,,,,1,,,,"I intend to work on an integration test suite for Solr, to test for issues to deal with back compat, rolling upgrades etc.
The interface for the test suite, as I'm planning, would be to have it accept two versions of Solr (either released versions or trunk/branch).

I work on SolrCloud, and we need something like this to enable us to upgrade more frequently. I had a conversation with @Ishan Chattopadhyaya, who emphasised to me the need to have something like this.

If there's already any ongoing effort in doing this, I can help out there. Please let me know.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2016-01-24 03:33:35.437,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Feb 16 13:10:02 UTC 2017,,,,,,,"0|i2ru33:",9223372036854775807,,,,,,,,,,,,,,,"24/Jan/16 03:33;markrmiller@gmail.com;+1. If we want to support this for real, requires tests. ","08/Feb/16 19:07;viveknarang;Hi,
I have come up with a preliminary working code. Although, I am working to improve the code, I have been able to get some of the upgrade results that are listed in the github readme file. 

Most recent test:
Upgrade from 5.3.2 to 5.4.1 failed. Please find a portion of the log here: [http://viveknarang.com/log.txt]

Please access [https://github.com/viveknarang/org.apache.solr.tests.upgradetests/] for more details. 

Regards
Vivek Narang","08/Feb/16 19:25;markrmiller@gmail.com;Strange, seem jetty does not start due to:

javax.servlet.UnavailableException: org.apache.solr.servlet.ZookeeperInfoServlet","23/Jan/17 10:02;ichattopadhyaya;I tested 6.2.0 -> 6.3.0 and 5.5.1 -> 6.3.0, and both passed.
However, 6.3.0 -> 6.4.0 is failing. Isn't obvious why, would need to look deeper if this is a test problem or a genuine bug.","23/Jan/17 10:11;ichattopadhyaya;The relevant portion from the startup logs is:
{code}
2017-01-23 10:06:52.471 WARN  (main) [   ] o.e.j.s.SecurityHandler ServletContext@o.e.j.w.WebAppContext@20398b7c{/solr,file:///home/ishan/code/solr-upgrade-tests/SolrUpdateTests/49d824d0-cd20-4a9c-ba63-31d3ed5a4ff0/solr-6.2.0/server/solr-webapp/webapp/,STARTING}{/home/ishan/code/solr-upgrade-tests/SolrUpdateTests/49d824d0-cd20-4a9c-ba63-31d3ed5a4ff0/solr-6.2.0/server/solr-webapp/webapp} has uncovered http methods for path: /
2017-01-23 10:06:52.476 WARN  (main) [   ] o.e.j.d.DeploymentManager Unable to reach node goal: started
java.lang.NoClassDefFoundError: com/codahale/metrics/MetricSet
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:2671)
	at java.lang.Class.getConstructor0(Class.java:3075)
	at java.lang.Class.newInstance(Class.java:412)
	at org.eclipse.jetty.server.handler.ContextHandler$Context.createInstance(ContextHandler.java:2456)
	at org.eclipse.jetty.servlet.ServletContextHandler$Context.createFilter(ServletContextHandler.java:1310)
	at org.eclipse.jetty.servlet.FilterHolder.initialize(FilterHolder.java:120)
	at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:856)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:348)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1379)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1341)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:261)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:517)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.bindings.StandardStarter.processBinding(StandardStarter.java:41)
	at org.eclipse.jetty.deploy.AppLifeCycle.runBindings(AppLifeCycle.java:188)
	at org.eclipse.jetty.deploy.DeploymentManager.requestAppGoal(DeploymentManager.java:499)
	at org.eclipse.jetty.deploy.DeploymentManager.addApp(DeploymentManager.java:147)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.fileAdded(ScanningAppProvider.java:180)
	at org.eclipse.jetty.deploy.providers.WebAppProvider.fileAdded(WebAppProvider.java:458)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider$1.fileAdded(ScanningAppProvider.java:64)
	at org.eclipse.jetty.util.Scanner.reportAddition(Scanner.java:610)
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:529)
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:392)
	at org.eclipse.jetty.util.Scanner.doStart(Scanner.java:313)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.providers.ScanningAppProvider.doStart(ScanningAppProvider.java:150)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.deploy.DeploymentManager.startAppProvider(DeploymentManager.java:561)
	at org.eclipse.jetty.deploy.DeploymentManager.doStart(DeploymentManager.java:236)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.server.Server.start(Server.java:405)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.Server.doStart(Server.java:372)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1510)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1435)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.jetty.start.Main.invokeMain(Main.java:214)
	at org.eclipse.jetty.start.Main.start(Main.java:457)
	at org.eclipse.jetty.start.Main.main(Main.java:75)
Caused by: java.lang.ClassNotFoundException: com.codahale.metrics.MetricSet
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:487)
	at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:428)
	... 48 more
{code}

Looking into why this could've happened. Perhaps the test suite didn't properly place all the libs/jars in the right places?","23/Jan/17 11:03;ichattopadhyaya;bq. Looking into why this could've happened. Perhaps the test suite didn't properly place all the libs/jars in the right places?

That was indeed the case; {{server/lib}} also needs to be copied. Fixed it with this commit [0]. 6.3.0 -> 6.4.0 passes fine now.

For these integration tests, I think we should add more tests and have it work against git branch/commit (instead of only released versions). After these, we should run this once every release.

[0] - https://github.com/viveknarang/solr-upgrade-tests/commit/29bc75e4dea4fc330227f3e079b9be89db7ca872","30/Jan/17 01:43;krisden;I threw together an example of doing this with released versions of Solr.

https://github.com/risdenk/solr_upgrade_test

It avoids using Java for the automation just because it was easier to write in Python to start. It doesn't do replacing of jar and instead uses the release directly. There are generated configs for every version from 5.0.0 to 6.4.0 and every version in between. It is easy to add another version with a config file just need a URL to a release.","31/Jan/17 15:22;krisden;I setup a Travis CI build to run daily against 6.4.0 to the latest nightly. It probably makes sense to point at the 6x branch instead of master but its a start.

https://travis-ci.org/risdenk/solr_upgrade_test","31/Jan/17 15:31;krisden;It should now be testing against master and 6.x last successful builds. ","03/Feb/17 18:10;wunder;How about a test that covers a rolling version upgrade replacing nodes.

1. Add new live node to cluster.
2. Add replica to new node.
3. Delete replica from old node.
4. Shut down old node.

Probably should run that with commands sent to an old node and a new node.","03/Feb/17 18:34;wunder;Leader election in a new/old two node cluster. Make sure it can go old->new and new->old.

Run some indexing after each election.","03/Feb/17 18:34;wunder;Distributed search with all variations of global IDF support.","16/Feb/17 13:10;krisden;Thanks Walter those are some great ideas for testing.",,,,,,,,,,,,,,,
Add test assert to ensure a cluster never starts two Overseers at the same time.,SOLR-5699,12693462,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,05/Feb/14 22:53,09/May/16 18:58,18/Feb/21 10:02,,,,,,4.9,6.0,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-04-16 12:57:54.911,,,false,,,,,,,,,,,,,,,,,372047,,,Wed Apr 16 12:57:54 UTC 2014,,,,,,,"0|i1s49r:",372351,,,,,,,,,,,,,,,"05/Feb/14 22:55;markrmiller@gmail.com;Given the right circumstances, it would probably manifest anyway as both overseers try and process the same queues, but there is no guarantee, and then you have to track down a tricky exception. We should use an assert in tests.","16/Apr/14 12:57;uschindler;Move issue to Solr 4.9.",,,,,,,,,,,,,,,,,,,,,,,,,,
Add a random full cluster restart to ChaosMonkey tests.,SOLR-5766,12696833,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,24/Feb/14 02:49,09/May/16 18:57,18/Feb/21 10:02,,,,,,4.9,6.0,SolrCloud,,,,,0,,,,"We can't yet easily keep sending updates during the restart until we have the ability to say how many replicas the update must reach to be successful, but we can easily stop updates, do a full cluster restart and then start updates again.",,,,,,,,,,,,,,,,SOLR-5572,,,,"24/Feb/14 16:16;markrmiller@gmail.com;SOLR-5766.patch;https://issues.apache.org/jira/secure/attachment/12630694/SOLR-5766.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2014-04-16 12:57:45.413,,,false,,,,,,,,,,,,,,,,,375308,,,Wed Apr 16 12:57:45 UTC 2014,,,,,,,"0|i1soa7:",375604,,,,,,,,,,,,,,,"24/Feb/14 16:16;markrmiller@gmail.com;Here is a rough patch I put together last night. There are some things to address it appears.","16/Apr/14 12:57;uschindler;Move issue to Solr 4.9.",,,,,,,,,,,,,,,,,,,,,,,,,,
Add random collection reload to ChaosMonkey tests.,SOLR-5769,12696951,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,24/Feb/14 16:17,09/May/16 18:56,18/Feb/21 10:02,,,,,,4.9,6.0,SolrCloud,,,,,0,,,,,,,,,,,,,,,,,,,,SOLR-5572,SOLR-5766,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-04-16 12:57:01.289,,,false,,,,,,,,,,,,,,,,,375426,,,Wed Apr 16 12:57:01 UTC 2014,,,,,,,"0|i1sp0f:",375722,,,,,,,,,,,,,,,"16/Apr/14 12:57;uschindler;Move issue to Solr 4.9.",,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve nightly test run stability.,SOLR-6957,12766662,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,10/Jan/15 18:48,09/May/16 18:56,18/Feb/21 10:02,,,,,,5.0,6.0,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2015-01-11 23:04:23.64,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Jan 11 23:07:28 UTC 2015,,,,,,,"0|i248a7:",9223372036854775807,,,,,,,,,,,,,,,"11/Jan/15 23:04;jira-bot;Commit 1650984 from [~markrmiller@gmail.com] in branch 'dev/trunk'
[ https://svn.apache.org/r1650984 ]

SOLR-6957: Raise timeout.","11/Jan/15 23:07;jira-bot;Commit 1650987 from [~markrmiller@gmail.com] in branch 'dev/branches/branch_5x'
[ https://svn.apache.org/r1650987 ]

SOLR-6957: Raise timeout.",,,,,,,,,,,,,,,,,,,,,,,,,,
The ChaosMonkey tests should sometimes use the SolrServer bulk add methods.,SOLR-5483,12680409,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,21/Nov/13 00:44,09/May/16 18:55,18/Feb/21 10:02,,,,,,4.9,6.0,SolrCloud,,,,,0,,,,"We currently use the ConcurrentSolrServer sometimes, but we should also use the bulk add methods.",,,,,,,,,,,,,,,,,,,,"25/Nov/13 10:18;varun;SOLR-5483.patch;https://issues.apache.org/jira/secure/attachment/12615570/SOLR-5483.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2013-11-25 10:18:58.148,,,false,,,,,,,,,,,,,,,,,359674,,,Wed Apr 16 12:57:15 UTC 2014,,,,,,,"0|i1q05b:",359973,,,,,,,,,,,,,,,"25/Nov/13 10:18;varun;I have attached a patch from what my understanding of this JIRA is.

Is this the correct approach?
","25/Nov/13 23:33;markrmiller@gmail.com;Nice! Thanks Varun, this looks great.

One thing that might be nice is a bit of testing that batches a few hundred or a thousand documents - something that might catch SOLR-5402.

In any case, this looks good, I'll commit it soon.","27/Nov/13 05:36;markrmiller@gmail.com;I'll get back to this soon I hope - I think I saw that one test was failing with this patch.","16/Apr/14 12:57;uschindler;Move issue to Solr 4.9.",,,,,,,,,,,,,,,,,,,,,,,,
ChaosMonkeySafeLeaderTest can fail because an update fails.,SOLR-6442,12737140,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,27/Aug/14 16:07,09/May/16 18:54,18/Feb/21 10:02,,,,,,5.0,6.0,,,,,,0,,,,,,,,,,,,,,,,,,,,SOLR-6312,SOLR-6227,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Aug 27 19:27:21 UTC 2014,,,,,,,"0|i1zedr:",9223372036854775807,,,,,,,,,,,,,,,"27/Aug/14 16:10;markrmiller@gmail.com;There is some discussion around this fail in SOLR-6227.

I've seen this happen for two reasons that appear valid:

NoHttpResponseException - happens usually when a server is under load and drops the connection without sending a valid response

503, Solr shutting down - happens when corecontainer is shutting down

In both cases, we cannot retry as we do not know if the update was succesful or not.

I'll add in some leniency on the fails like ChaosMonkeyNothingIsSafe has.","27/Aug/14 19:27;markrmiller@gmail.com;I've got to check and see if this is related to SOLR-6312.",,,,,,,,,,,,,,,,,,,,,,,,,,
fix more test solrconfigs to respect solr.directoryFactory,SOLR-2707,12518587,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,rcmuir,rcmuir,11/Aug/11 12:31,09/May/16 18:47,18/Feb/21 10:02,,,,,,4.9,6.0,Build,,,,,0,,,,"By default our tests enable Lucene's MockDirectoryWrapper, which improves test coverage in a number of ways.

But its not enabled by all solr test configs",,,,,,,,,,,,,,,,,,,,"11/Aug/11 13:31;rcmuir;SOLR-2707.patch;https://issues.apache.org/jira/secure/attachment/12490118/SOLR-2707.patch","11/Aug/11 12:31;rcmuir;SOLR-2707.patch;https://issues.apache.org/jira/secure/attachment/12490110/SOLR-2707.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2012-03-21 18:08:53.222,,,false,,,,,,,,,,,,,,,,,3141,,,Wed Apr 16 12:56:43 UTC 2014,,,,,,,"0|i03j2n:",18523,,,,,,,,,,,,,,,"11/Aug/11 12:31;rcmuir;attached is a patch... not sure if its working since currently TestReplicationHandler fails for me in clean checkout.","11/Aug/11 13:31;rcmuir;updated patch: all tests pass.

had to add a hack or TODO or two for some of the more 'special' tests... this stuff will probably be obselete after SOLR-2654","16/Sep/11 14:51;rcmuir;3.4 -> 3.5","21/Mar/12 18:08;hossman;Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.

email notification suppressed to prevent mass-spam
psuedo-unique token identifying these issues: hoss20120321nofix36","23/Jul/13 18:47;sarowe;Bulk move 4.4 issues to 4.5 and 5.0","16/Apr/14 12:56;uschindler;Move issue to Solr 4.9.",,,,,,,,,,,,,,,,,,,,,,
Generalize the ChaosMonkey code so that it can be used and driven in conjunction with the linux/unix cloud-dev scripts.,SOLR-5571,12686096,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,23/Dec/13 04:06,09/May/16 18:46,18/Feb/21 10:02,,,,,,4.9,6.0,,,,,,0,,,,,,,,,,,,,,,,,,,,SOLR-5572,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-04-16 12:57:49.591,,,false,,,,,,,,,,,,,,,,,365053,,,Wed Apr 16 12:57:49 UTC 2014,,,,,,,"0|i1qx93:",365361,,,,,,,,,,,,,,,"23/Dec/13 04:08;markrmiller@gmail.com;It should be possible to share a fair amount of code - both for driving the monkey and for sanity checking at the end.","16/Apr/14 12:57;uschindler;Move issue to Solr 4.9.",,,,,,,,,,,,,,,,,,,,,,,,,,
"improve analysis tests, cut over to new API",SOLR-1674,12443766,Test,Reopened,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,rcmuir,rcmuir,rcmuir,18/Dec/09 14:45,09/May/16 18:43,18/Feb/21 10:02,,,,,,4.9,6.0,Schema and Analysis,,,,,0,,,,"This patch
* converts all analysis tests to use the new tokenstream api
* converts most tests to use the more stringent assertion mechanisms from lucene
* adds new tests to improve coverage

Most bugs found by more stringent testing have been fixed, with the exception of SynonymFilter.
The problems with this filter are more serious, the previous tests were essentially a no-op.
The new tests for SynonymFilter test the current behavior, but have FIXMEs with what I think the old test wanted to expect in the comments.

",,,,,,,,,,,,,,,,,,,,"20/Dec/09 11:36;rcmuir;SOLR-1674.patch;https://issues.apache.org/jira/secure/attachment/12428569/SOLR-1674.patch","18/Dec/09 14:45;rcmuir;SOLR-1674.patch;https://issues.apache.org/jira/secure/attachment/12428444/SOLR-1674.patch","22/Dec/09 06:13;rcmuir;SOLR-1674_speedup.patch;https://issues.apache.org/jira/secure/attachment/12428700/SOLR-1674_speedup.patch",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,2009-12-20 16:55:11.813,,,false,,,,,,,,,,,,,,,,,5983,,,Wed Apr 16 12:57:32 UTC 2014,,,,,,,"0|i03pbr:",19536,,,,,,,,,,,,,,,"20/Dec/09 11:36;rcmuir;here is an updated patch.
I think I managed to resolve some problems with synonymfilter, especially the recursion tests (I believe they were simply typos and there isnt a bug), and the position increments (this was a problem in the tests)

so in my opinion, the only problem left is SOLR-1670, the repeat problem.","20/Dec/09 16:39;rcmuir;Hello, I see Uwe has commented on SOLR-1657 that he would help convert tokenstreams to the new api, but he needs this patch (the tests) applied first.

Is it possible for someone to take a look at this patch to get things moving along? its only tests, no source code changes.","20/Dec/09 16:55;markrmiller@gmail.com;I think TestCapitalizationFilter and TestMultiWordSynonyms need to be brought back up to trunk? A quick patch attempt is giving me problems. ","20/Dec/09 16:56;rcmuir;this is because you use $Id$. its not my fault... ","20/Dec/09 17:08;markrmiller@gmail.com;Thats BS - they are fixable in the patch ;)

I hate those damn $id tags - every time ... I'll fix them.","20/Dec/09 17:09;rcmuir;I sent an email... if no one cares about these $id$ tags then when i get back from vacation i will gladly volunteer to submit a patch to remove them :)

A quick workaround is to change them back to $Id$ in your local, then apply the patch...","20/Dec/09 17:29;markrmiller@gmail.com;Fixed a small issue with protWords.txt not matching prowrods.txt on unix systems.

If there are no objections I will commit this beautiful addition to our analysis tests soon.","21/Dec/09 12:22;shalin;All tests pass after renaming protWords.txt to protwords.txt. Unfortunately, this is too big to review in detail right now but I trust Robert to do the right thing :)

bq. If there are no objections I will commit this beautiful addition to our analysis tests soon.

+1","21/Dec/09 13:57;markrmiller@gmail.com;Thanks a lot Robert! Test contributions are rare and exciting!","22/Dec/09 06:13;rcmuir;hmm it appears i may have slowed down the junit tests with the previous patch, unfortunately.

attached is a patch to speed them up... (maybe not necessary, but they were very very slow on my laptop)
","22/Dec/09 15:50;yseeley@gmail.com;Hmmm, isn't it a bug that this passes?
    assertTokenizesTo(map, ""a b"", new String[] { ""ab"", ""ab"", ""ab""  });

w/o the 1670 fix, we get ""ab/ab/ab"" (repeated tokens all at the same position).  That's not the same as three ""ab"" tokens in a row.

Also, we seem to have lost matching flexibility with overlapping tokens.  ""a/aa"" should be the same as ""aa/a"", but if you change the order of overlapping tokens now, the tests fail.

Didn't ya guys like my a/aa syntax to indicate overlapping tokens?  It certainly made it faster for me to write the original testcases :-)","22/Dec/09 16:01;markrmiller@gmail.com;Robert is on holiday I think - will reopen for now.","22/Dec/09 16:04;rcmuir;{quote}
Hmmm, isn't it a bug that this passes?

w/o the 1670 fix, we get ""ab/ab/ab"" (repeated tokens all at the same position). That's not the same as three ""ab"" tokens in a row. 
{quote}

The tests pass because it ""ab"", ""ab"", ""ab"". If we want to validate pos incs, we should change the test to:

{code}
assertTokenizesTo(map, ""a b"", 
  new String[] { ""ab"", ""ab"", ""ab"" },
  new int [] { 1, 0, 0 });
{code}

this way the posIncs are tested too.

{quote}
Also, we seem to have lost matching flexibility with overlapping tokens. ""a/aa"" should be the same as ""aa/a"", but if you change the order of overlapping tokens now, the tests fail.
{quote}

This ""flexibility"" caused things such as SOLR-1670, SOLR-1667, SOLR-1662, and SOLR-1660. When I switched to less ""flexible"" tests, these bugs were found. So sorry to see it go.
","10/Mar/10 16:20;markrmiller@gmail.com;I've committed the speed up patch, thanks Robert!

Leaving open for posInc tests","28/May/10 02:54;hossman;
Correcting Fix Version based on CHANGES.txt, see this thread for more details...

http://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3","25/Oct/10 02:20;markrmiller@gmail.com;Going to close this if no one objects...","17/Jan/11 17:08;rcmuir;i'd still like to add posinc tests for some of these tokenstreams,
but also other ones in the analyzers module too (e.g. ones from lucene contrib).

i'll set 3.2 for now.","23/Jul/13 18:48;sarowe;Bulk move 4.4 issues to 4.5 and 5.0","16/Apr/14 12:57;uschindler;Move issue to Solr 4.9.",,,,,,,,,
"ChaosMonkey depends on AbstractFullDistribZkTestBase, can't be used with MiniSolrCloudCluster",SOLR-8872,12951561,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,hossman,hossman,18/Mar/16 17:18,21/Mar/16 00:43,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"After burning a bunch of hours/brain cells trying to tweak ChaosMonkey so that i could use it in a MiniSolrCloud test, i finally just gave up and am filing this issue as a TODO for the future.

ChaosMonkey's functionality is directly tied to AbstractFullDistribZkTestBase internals (notably the CloudJettyRunner inner class, and the shardToJetty and shardToLeaderJetty Maps).

Someone smarter then me will have to spend some time figuring out how to untangle this stuff if we ever want to support using CHaosMonkey with MiniSolrCloud.",,,,,,,,,,,,,,,,SOLR-445,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2016-03-18 23:22:45.105,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Mar 21 00:43:35 UTC 2016,,,,,,,"0|i2uw07:",9223372036854775807,,,,,,,,,,,,,,,"18/Mar/16 23:22;markrmiller@gmail.com;We have to do that generally anyway so that all tests can move. If we ever want to remove legacyCloud or properly finish and test ZK=truth mode, we can't have this old style preconfigured SolrCore test. We need to allow all the same stuff work easily with MiniSolrCloudCluster.","18/Mar/16 23:24;markrmiller@gmail.com;Of course we can also just preconfigure 0 cores and use collection api like some tests do now, but there has been wide agreement we want to move away from that overall pattern to using the MiniSolrCloudCluster anyway. At some point, I or someone else will bite the bullet on it.","21/Mar/16 00:43;jira-bot;Commit 1aa1ba3b3af69cad65b7a411ca88e120a418a598 in lucene-solr's branch refs/heads/jira/SOLR-445 from [~hossman_lucene@fucit.org]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1aa1ba3 ]

SOLR-445: harden & add logging to test

also rename since chaos monkey isn't going to be involved (due to SOLR-8872)
",,,,,,,,,,,,,,,,,,,,,,,,,
DistribDocExpirationUpdateProcessorTest is failing a lot on the Jenkins cluster.,SOLR-8547,12930154,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,14/Jan/16 14:33,14/Jan/16 14:41,18/Feb/21 10:02,,,,,,,,Tests,,,,,0,,,,"Always seems to be:

{noformat}
There are still nodes recoverying - waited for 30 seconds
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2016-01-14 14:40:02.272,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jan 14 14:41:17 UTC 2016,,,,,,,"0|i2rarb:",9223372036854775807,,,,,,,,,,,,,,,"14/Jan/16 14:33;markrmiller@gmail.com;I'm going to try raising this to 45 for a start.","14/Jan/16 14:40;jira-bot;Commit 1724622 from [~markrmiller@gmail.com] in branch 'dev/trunk'
[ https://svn.apache.org/r1724622 ]

SOLR-8547: Raise time we will wait for recoveries to finish from 30 to 45 seconds.","14/Jan/16 14:41;jira-bot;Commit 1724624 from [~markrmiller@gmail.com] in branch 'dev/branches/branch_5x'
[ https://svn.apache.org/r1724624 ]

SOLR-8547: Raise time we will wait for recoveries to finish from 30 to 45 seconds.",,,,,,,,,,,,,,,,,,,,,,,,,
TestSolrCLIRunExample is failing a lot on the jenkins cluster.,SOLR-8545,12930150,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,14/Jan/16 14:25,14/Jan/16 14:25,18/Feb/21 10:02,,,,,,,,Tests,,,,,0,,,,"Looks like two fails - a thread leak, or the object tracker catches stuff that is not closed. Seems likely there is a leak in the code or the test.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2016-01-14 14:25:18.0,,,,,,,"0|i2raqf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Modify test base classes to randomly enable authc,SOLR-8358,12917257,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,ichattopadhyaya,ichattopadhyaya,01/Dec/15 14:24,01/Dec/15 14:24,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"We might be able to catch issues like SOLR-8355 if we can somehow enable authc for every test (randomly) and assert that every internode request has PKI headers. 
Perhaps this can be done at JettySolrRunner, by adding another filter which asserts this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2015-12-01 14:24:32.0,,,,,,,"0|i2p48f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add a test that verifies a core cannot put itself into LIR,SOLR-8289,12912925,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,mdrob,mdrob,13/Nov/15 18:29,13/Nov/15 22:09,18/Feb/21 10:02,,,,,,,,SolrCloud,,,,,0,,,,"A core should not be able to put itself into LIR - we already have some defensive checks around this, but it would be good to verify that our checks are sufficient with a test case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2015-11-13 18:29:08.0,,,,,,,"0|i2odk7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ChaosMonkey is not actually expiring connections or causing connection loss anymore.,SOLR-8244,12910776,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,05/Nov/15 17:25,05/Nov/15 17:25,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2015-11-05 17:25:53.0,,,,,,,"0|i2o0hb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test that use solr-no-cores.xml are now getting default collection1 cores created for them.,SOLR-8013,12862099,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,06/Sep/15 12:57,06/Sep/15 12:57,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,With the new core discovery it seems tests that don't need or want default cores get them anyway.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2015-09-06 12:57:43.0,,,,,,,"0|i2ju3b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ChaosMonkeyNothing is safe fail: document count mismatch.  control=52 sum(shards)=51 cloudClient=51,SOLR-5996,12709254,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,18/Apr/14 12:52,14/Jun/15 23:12,18/Feb/21 10:02,,,,,,,,SolrCloud,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,"18/Apr/14 14:36;markrmiller@gmail.com;SOLR-5996.patch;https://issues.apache.org/jira/secure/attachment/12640823/SOLR-5996.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2014-04-18 15:00:27.689,,,false,,,,,,,,,,,,,,,,,387576,,,Sun Jun 14 23:12:16 UTC 2015,,,,,,,"0|i1urkv:",387838,,,,,,,,,,,,,,,"18/Apr/14 12:56;markrmiller@gmail.com;This is an interesting fail. Logs seem to show that *control* has a doc that it should not.

{code}
   [junit4]   2> 51012 T28 C21 P36044 oasup.LogUpdateProcessor.finish [collection1] webapp= path=/update params={version=2&CONTROL=TRUE&wt=javabin} {add=[0-12 (1465721659272986624)]} 0 27

   [junit4]   2> 51380 T28 C21 P36044 oasup.LogUpdateProcessor.finish [collection1] webapp= path=/update params={version=2&CONTROL=TRUE&wt=javabin} {delete=[0-12 (-1465721659658862592)]} 0 1
{code}

Cloud also gets the add then delete, but we end up with:
*Only in controlDocList: id=0-34*","18/Apr/14 13:07;markrmiller@gmail.com;Whoops, I was search on 0-12 - it was still in the field from last night - needed to search on 0-34.

So it looks like something is still off an legal diff checking - 0-34 went to control and failed going to cloud and so this should be a legal difference. Need to dig into why it still fails.","18/Apr/14 14:36;markrmiller@gmail.com;Here is a patch that largely cleans things up and adds a bit of testing.","18/Apr/14 15:00;jira-bot;Commit 1588486 from markrmiller@apache.org in branch 'dev/trunk'
[ https://svn.apache.org/r1588486 ]

SOLR-5996: Fix checkIfDiffIsLegal, add some testing, refactor out a few methods into CloudInspectUtil.","18/Apr/14 15:12;jira-bot;Commit 1588487 from markrmiller@apache.org in branch 'dev/branches/branch_4x'
[ https://svn.apache.org/r1588487 ]

SOLR-5996: Fix checkIfDiffIsLegal, add some testing, refactor out a few methods into CloudInspectUtil.","21/Apr/14 03:04;jira-bot;Commit 1588846 from markrmiller@apache.org in branch 'dev/trunk'
[ https://svn.apache.org/r1588846 ]

SOLR-5996: Improve request fail logging by including id.","21/Apr/14 03:05;jira-bot;Commit 1588847 from markrmiller@apache.org in branch 'dev/branches/branch_4x'
[ https://svn.apache.org/r1588847 ]

SOLR-5996: Improve request fail logging by including id.","21/Apr/14 15:07;markrmiller@gmail.com;I added some logging - there is still something to find here, though things have gotten much better.","22/Apr/14 13:47;markrmiller@gmail.com;Found it - adding the wrong id to the failed delete id's tracking.","22/Apr/14 13:47;jira-bot;Commit 1589127 from [~markrmiller@gmail.com] in branch 'dev/trunk'
[ https://svn.apache.org/r1589127 ]

SOLR-5996: Add deleteId and not Id for failed delete tracking.","22/Apr/14 13:48;jira-bot;Commit 1589128 from [~markrmiller@gmail.com] in branch 'dev/branches/branch_4x'
[ https://svn.apache.org/r1589128 ]

SOLR-5996: Add deleteId and not Id for failed delete tracking.","14/Jun/15 23:12;andyetitmoves;Adding here since some changes seem to have been done with this code path here.. Just happened to notice that the return value for {{CloudInspectUtil.compareResults}} in {{testIndexingBatchPerRequestWithHttpSolrClient}} is not checked at all (so discrepancies are ignored). Is this intended?",,,,,,,,,,,,,,,,
Common test fail in CollectionsAPIDistributedZkTest: java.lang.AssertionError: some core start times did not change on reload,SOLR-7063,12771059,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,29/Jan/15 16:54,29/Jan/15 16:54,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"{noformat}
java.lang.AssertionError: some core start times did not change on reload
	at __randomizedtesting.SeedInfo.seed([46E830596952E561:CEBC0F83C7AE8899]:0)
	at org.junit.Assert.fail(Assert.java:93)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.apache.solr.cloud.CollectionsAPIDistributedZkTest.testCollectionsAPI(CollectionsAPIDistributedZkTest.java:756)
	at org.apache.solr.cloud.CollectionsAPIDistributedZkTest.test(CollectionsAPIDistributedZkTest.java:191)
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2015-01-29 16:54:18.0,,,,,,,"0|i24ynz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Solr tests have gotten much slower.,SOLR-6293,12730313,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,28/Jul/14 20:38,06/Jan/15 21:07,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"I run tests with 8 jvms before I took a 2-3 month hiatus from Lucene / Solr, Solr tests ran in about 9-10 minutes on my machine. Now it's 16 minutes. This issue is a top level issue to track looking into what has caused the additional time, if it makes sense, or if there is stuff we can move to nightly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2014-07-28 21:29:09.788,,,false,,,,,,,,,,,,,,,,,408386,,,Tue Jan 06 21:07:00 UTC 2015,,,,,,,"0|i1y9rb:",408388,,,,,,,,,,,,,,,"28/Jul/14 21:29;shalin;Another candidate is TriLevelCompositeIdRoutingTest.","24/Aug/14 17:35;markrmiller@gmail.com;I've knocked a few of the slowest tests off the list. Here is the current accounting:

{noformat}
[junit4:tophints] 257.56s | org.apache.solr.handler.TestReplicationHandler
[junit4:tophints] 112.90s | org.apache.solr.cloud.BasicDistributedZkTest
[junit4:tophints] 112.90s | org.apache.solr.cloud.CollectionsAPIDistributedZkTest
[junit4:tophints] 104.33s | org.apache.solr.cloud.ShardSplitTest
[junit4:tophints]  92.20s | org.apache.solr.schema.TestCloudManagedSchemaConcurrent
{noformat}","18/Dec/14 14:08;markrmiller@gmail.com;It seems a lot of this may have come from SSL. See my recent comments in SOLR-4509.","06/Jan/15 21:07;markrmiller@gmail.com;Or, it may be from: SOLR-6896 ?? Or a combination? My work in SOLR-4509 has a very high setting for what SOLR-6896 makes very low, so things are a bit complicated. ",,,,,,,,,,,,,,,,,,,,,,,,
Use SolrJ collection API methods in SolrCloud tests wherever possible,SOLR-6516,12741224,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,anshum,anshum,anshum,13/Sep/14 01:43,13/Sep/14 01:43,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,We should use Collection API SolrJ calls instead of constructing a raw request.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2014-09-13 01:43:32.0,,,,,,,"0|i2003z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test fail in FullSolrCloudDistribCmdsTest on nightly runs.,SOLR-6431,12736535,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,25/Aug/14 15:07,25/Aug/14 16:02,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"{code}
org.apache.solr.client.solrj.SolrServerException: Error executing query
	at __randomizedtesting.SeedInfo.seed([4CDCFB52D83A47A0:CD3A754AAF65279C]:0)
	at org.apache.solr.client.solrj.request.QueryRequest.process(QueryRequest.java:100)
	at org.apache.solr.client.solrj.SolrServer.query(SolrServer.java:301)
	at org.apache.solr.cloud.CloudInspectUtil.compareResults(CloudInspectUtil.java:223)
	at org.apache.solr.cloud.CloudInspectUtil.compareResults(CloudInspectUtil.java:165)
	at org.apache.solr.cloud.FullSolrCloudDistribCmdsTest.testIndexingBatchPerRequestWithHttpSolrServer(FullSolrCloudDistribCmdsTest.java:414)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Aug 25 16:02:12 UTC 2014,,,,,,,"0|i1zaov:",9223372036854775807,,,,,,,,,,,,,,,"25/Aug/14 15:07;markrmiller@gmail.com;{code}
Caused by: org.apache.http.ParseException: Invalid content type: 
	at org.apache.http.entity.ContentType.parse(ContentType.java:233)
	at org.apache.solr.client.solrj.impl.HttpSolrServer.executeMethod(HttpSolrServer.java:496)
	at org.apache.solr.client.solrj.impl.HttpSolrServer.request(HttpSolrServer.java:210)
	at org.apache.solr.client.solrj.impl.HttpSolrServer.request(HttpSolrServer.java:206)
	at org.apache.solr.client.solrj.request.QueryRequest.process(QueryRequest.java:91)
	... 47 more
{code}","25/Aug/14 16:02;markrmiller@gmail.com;Fails about 1 in 10 for me.",,,,,,,,,,,,,,,,,,,,,,,,,,
SSLMigrationTest can fail with leaked threads due to problems stopping / starting jetty.,SOLR-5982,12708160,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,13/Apr/14 21:00,13/Apr/14 21:00,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,386483,,,2014-04-13 21:00:38.0,,,,,,,"0|i1ukuv:",386747,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OverseerTest fail that is somewhat common: testShardAssignmentBigger,SOLR-5802,12698341,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,03/Mar/14 01:00,03/Mar/14 01:01,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,376699,,,Mon Mar 03 01:01:16 UTC 2014,,,,,,,"0|i1swuf:",376994,,,,,,,,,,,,,,,"03/Mar/14 01:01;markrmiller@gmail.com;{noformat}
Error Message

Unable to verify all cores have been returned an id expected:<190> but was:<126>
Stacktrace

java.lang.AssertionError: Unable to verify all cores have been returned an id expected:<190> but was:<126>
	at __randomizedtesting.SeedInfo.seed([4F38704E1CB14EA:971D797F0BA2EB89]:0)
	at org.junit.Assert.fail(Assert.java:93)
	at org.junit.Assert.failNotEquals(Assert.java:647)
	at org.junit.Assert.assertEquals(Assert.java:128)
	at org.junit.Assert.assertEquals(Assert.java:472)
	at org.apache.solr.cloud.OverseerTest.testShardAssignmentBigger(OverseerTest.java:361)
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve and expand variation of behavior of the ChaosMonkey.,SOLR-5572,12686097,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,23/Dec/13 04:10,24/Feb/14 16:19,18/Feb/21 10:02,,,,,,,,SolrCloud,,,,,0,,,,,,,,,,,,,,,,,,,,SOLR-5573,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,365054,,,Mon Dec 23 05:40:01 UTC 2013,,,,,,,"0|i1qx9b:",365362,,,,,,,,,,,,,,,"23/Dec/13 05:40;markrmiller@gmail.com;different indexing patterns, different kill timing patterns, whole cluster reboots, etc, etc",,,,,,,,,,,,,,,,,,,,,,,,,,,
"We should add an option to the ChaosMonkey's to do more complicated partition failures on Linux, as well as simulate hard fails of Jetty.",SOLR-5482,12680408,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,21/Nov/13 00:43,01/Dec/13 22:29,18/Feb/21 10:02,,,,,,,,SolrCloud,,,,,0,,,,We can call out to iptables to block incoming and outgoing ports during the test run.,,,,,,,,,,,,,,,,,,,,"24/Nov/13 04:03;markrmiller@gmail.com;SOLR--5482.patch;https://issues.apache.org/jira/secure/attachment/12615483/SOLR--5482.patch","26/Nov/13 02:22;markrmiller@gmail.com;SOLR-5482.patch;https://issues.apache.org/jira/secure/attachment/12615771/SOLR-5482.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2013-12-01 21:58:46.241,,,false,,,,,,,,,,,,,,,,,359673,,,Sun Dec 01 22:24:04 UTC 2013,,,,,,,"0|i1q053:",359972,,,,,,,,,,,,,,,"21/Nov/13 00:53;markrmiller@gmail.com;i.e.

{noformat}
iptables -I INPUT -p tcp --dport 8983 -j ACCEPT

iptables -A INPUT -p tcp --destination-port 8983 -j DROP

iptables -A OUTPUT -p tcp --dport 8983 -j DROP

# /sbin/service iptables save
{noformat}","24/Nov/13 04:03;markrmiller@gmail.com;Here is some initial code I have been experimenting with. For now it just simulates hard stops of nodes by blocking ports with iptables.","26/Nov/13 02:22;markrmiller@gmail.com;Fixes up that patch - unblocks ports correctly now. Other minor cleanup. Tests are passing for me.","01/Dec/13 21:58;jira-bot;Commit 1546863 from [~markrmiller@gmail.com] in branch 'dev/trunk'
[ https://svn.apache.org/r1546863 ]

SOLR-5482: add option to simulate hard jetty fails with iptables","01/Dec/13 22:05;jira-bot;Commit 1546864 from [~markrmiller@gmail.com] in branch 'dev/branches/branch_4x'
[ https://svn.apache.org/r1546864 ]

SOLR-5482: add option to simulate hard jetty fails with iptables","01/Dec/13 22:06;markrmiller@gmail.com;You can enable the current support with the solr.tests.use.iptables sys prop.","01/Dec/13 22:18;uschindler;How does this work without being root?","01/Dec/13 22:22;markrmiller@gmail.com;See the comment in IpTables.java: To use, tests must be able to run iptables, eg sudo chmod u+s iptables

Initially, I've just committed the option so that I can run this on my fullmetaljenkins server where I currently run ChaosMonkey tests - I've just added new jobs that set this sys prop to true.","01/Dec/13 22:24;uschindler;OK, thanks! This somehow emulates FreeBSD, I assume :-)",,,,,,,,,,,,,,,,,,,
The ChaosMonkey StopableIndexingThread should sometimes use a CloudSolrServer rather than always grabbing a random HttpSolrServer client.,SOLR-5484,12680411,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,21/Nov/13 00:46,21/Nov/13 00:46,18/Feb/21 10:02,,,,,,,,SolrCloud,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,359676,,,2013-11-21 00:46:17.0,,,,,,,"0|i1q05r:",359975,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
beter randomized testing of <indexConfig> settings,SOLR-4950,12654263,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,hossman,hossman,hossman,21/Jun/13 22:47,22/Jun/13 00:17,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,Creating parent issue for various improvements regarding randomized testing of index config related settings.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,334540,,,Sat Jun 22 00:17:26 UTC 2013,,,,,,,"0|i1lpj3:",334866,,,,,,,,,,,,,,,"22/Jun/13 00:17;hossman;rmuir's comment about SOLR-2570 in SOLR-4942 got me thinking about how much could be done here, so i gathered the issues together under a common parent and tried to break out the individual commitable units of work so i could move forward and make progress and not lose track of anything.

I'm also explicitly marking this as blocked by SOLR-4953 because it would suck to get to the point where every solconfig.xml used in tests does an xmlinclude to get the randomized {{<indexConfig/>}} settings and then someone who greps for ""indexConfig"" in a file and doesn't find one adds their own and the randomization is shot to hell.",,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractSolrTestCase should have automatic check for loggd exceptions,SOLR-543,12394170,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,hossman,hossman,17/Apr/08 05:01,28/Feb/13 13:03,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"SOLR-509 and SOLR-541 got me thinking: it would be really nice if AbstractSolrTestCase had some code such that:
* setUp() registered a LogHandler that kept a record of any LogRecord that was:
** SEVERE
** WARNING
** contained a Throwable
* assertLog(Level, Class<Throwable>) could be called in the body of test methods to ensure that at a certain point a LogRecord with a particular level and/or type of Throwable had in fact been logged and note that it was expected.
* tearDown() would inspect the LogHandler to assert no LogRecords exist that have not already been noted as expected.

Something like this would allow us to make sure that nothing ""bad"" was getting logged even if the API being tested presented a happy shiny face to the world -- and to check that in situations where something bad *should* be logged, that it is.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2013-02-28 13:03:55.376,,,false,,,,,,,,,,,,,,,,,389,,,Thu Feb 28 13:03:55 UTC 2013,,,,,,,"0|i03w5z:",20644,,,,,,,,,,,,,,,"28/Feb/13 13:03;janhoy;This issue has been inactive for more than 4 years. Please close if it's no longer relevant/needed, or bring it up to date if you intend to work on it. SPRING_CLEANING_2013",,,,,,,,,,,,,,,,,,,,,,,,,,,
SolrIndexSearcher open/close imbalance in some of the new SolrCloud tests.,SOLR-3066,12540196,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Major,,,markrmiller@gmail.com,markrmiller@gmail.com,27/Jan/12 21:25,08/Feb/12 02:44,18/Feb/21 10:02,,,,,,,,,,,,,1,,,,"I have not been able to duplicate this test issue on my systems yet, but on jenkins, some tests that start and stop jetty instances during the test are having trouble cleaning up and can bleed into other tests. I'm working on isolating the reason for this - I seem to have been ip banned from jenkins at the moment, but when I can ssh in there, I will be able to speed up the try/feedback loop some. I've spent a lot of time trying to duplicate across 3 other systems, but I don't see the same issue anywhere but our jenkins server thus far.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2012-01-28 19:05:54.754,,,false,,,,,,,,,,,,,,,,,225611,,,Wed Feb 08 02:44:32 UTC 2012,,,,,,,"0|i03gw7:",18170,,,,,,,,,,,,,,,"28/Jan/12 18:27;markrmiller@gmail.com;*edited - changed an 'of' to 'on'

This looks similar to an issue I have occasionally but rarely seen with the replication handler test - a running snap pull keeps the core open just a little while even after core container shutdown. We have a similar situation in some of these tests because recoveries that will be attempted as nodes go down uses replication. What I'm still not sure about is why even though we wait quite a while for any index searchers to be closed after core container shutdown, we still don't see a searcher get closed.

I've seen that symtom in tests before - it ended up being because an executor was rejecting a task during shutdown and a searcher was not cleaned up - that doesn't look like it's a problem anymore though.

I've tried to replicate a slow env by running tons of tests at the same time on my windows vm - I have only seen a similar result once out of over 100 runs though.

Perhaps we just need to wait even longer - which seems strange that it could be that slow - but it does almost look like the searcher is returned at some point during later tests based on how it can throw off open/close numbers for a later test (more closes than opens).

Taking a break, but I'll be back on this later today.","28/Jan/12 19:05;yseeley@gmail.com;I've made this a non-critical error for now... to see if a test trips this, we'll need to check the console output for the run and search for ""SolrIndexSearcher"".","28/Jan/12 19:27;siren;I can see TestReplicationHandler fail open/close mismatch quite often, this is after running the tests for 24 hrs:

{code}
    35 TEST-org.apache.solr.handler.TestReplicationHandler.xml
      1 TEST-org.apache.solr.update.SoftAutoCommitTest.xml
      1 TEST-org.apache.solr.core.TestArbitraryIndexDir.xml
      1 TEST-org.apache.solr.cloud.LeaderElectionIntegrationTest.xml
      1 TEST-org.apache.solr.cloud.FullSolrCloudDistribCmdsTest.xml
{code}","08/Feb/12 02:42;markrmiller@gmail.com;So a lot of this seemed to be fixed by adding a higher timeout when we wait for the searcher open/close counts to balance out. I think this is partially because jenkins will run with test multipliers and so some tests start and stop quite a few number of jetties, so it on a slow system, it can take a little while for all cores to be released some times.

A couple of the tests that are currently ignored failed with bigger count mismatches though. I didn't want to turn those back on without more assurance they might pass.

So I installed freebsd in virtualbox and started playing there within the confines of the black hole behavior. I tried to run those two tests and indeed they failed - a couple stack trace dumps and I realized that some recovery attempt calls where hanging - I had set timeouts for the calls to recover/replicate, but not for the calls to sync. I added the timeouts and those tests started passing.

So things are looking okay, except that i just saw that very rarely on jenkins, the zkrecovery test is failing with an imbalance off by one. I'll probably make a different issue for that less frequent case.","08/Feb/12 02:44;markrmiller@gmail.com;Also, I already re-enabled the searcher open/close imbalance check that yonik had taken out temporarily - that has been working well for a few days at least now.",,,,,,,,,,,,,,,,,,,,,,,
Need a test for SolrCloud Zookeeper chroot,SOLR-14587,13312877,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,ilan,Ilan2,22/Jun/20 17:17,15/Jul/20 18:58,18/Feb/21 10:02,,master (9.0),,,,,,SolrCloud,,,,,0,,,,"With the fixing of SOLR-12823 an older test {{TestZkChroot}} that was supposedly testing how SolrCloud can be started with different chroot (in Zookeeper) was removed.
A new test needs to be implemented, and it might require changing some test framework classes (as setting a chroot in test is not easy, it is hard coded to some extent).

This Jira is to not forget we're missing such a test and one should eventually be added.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2020-06-22 17:17:46.0,,,,,,,"0|z0g3h4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Test fails for ""Can't find resource"" for files in the _default configset",SOLR-12386,13161179,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,dsmiley,dsmiley,22/May/18 20:48,06/May/20 13:31,18/Feb/21 10:02,,,,,,,,SolrCloud,,,,,0,,,,"Some tests, especially ConcurrentCreateRoutedAliasTest, have failed sporadically failed with the message ""Can't find resource"" pertaining to a file that is in the default ConfigSet yet mysteriously can't be found.  This happens when a collection is being created that ultimately fails for this reason.",,,,,,,,,,,,,,,,SOLR-12021,,,,"22/May/18 20:54;dsmiley;cant find resource, stacktrace.txt;https://issues.apache.org/jira/secure/attachment/12924622/cant+find+resource%2C+stacktrace.txt",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2018-05-22 21:08:16.899,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 06 13:31:15 UTC 2020,,,,,,,"0|i3u0pz:",9223372036854775807,,,,,,,,,,,,,,,"22/May/18 21:08;jira-bot;Commit af59c46363f3497d44548021e4ff15d924ddbec3 in lucene-solr's branch refs/heads/master from [~dsmiley]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=af59c46 ]

SOLR-12386: Apply AwaitsFix to ConcurrentCreateRoutedAliasTest
","22/May/18 21:12;jira-bot;Commit 982268efd14147ab99ab5b3e152fd4106e6581f1 in lucene-solr's branch refs/heads/branch_7x from [~dsmiley]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=982268e ]

SOLR-12386: Apply AwaitsFix to ConcurrentCreateRoutedAliasTest

(cherry picked from commit af59c46)
","22/May/18 21:19;dsmiley;Analysis strategy:
 * Enumerate each test that has failed this way (share here).  What do they have in common?
 * Try to make a test that easily reproduces; maybe with _some_ beasting.
 * ? go digging; come up with hair brained theories ?","23/May/18 21:46;hossman;This overall symptom sounds really familar – see SOLR-12021.

I wonder if the root cause here is similar to what I found in that jira?
{quote}[resource files] are being loaded with {{...getClassLoader().getResourceAsStream(resourceName)}} – but nothing is ever closing the stream, so it can eventually (depending on what test classes run in each JVM and how many files they try to open like this) cause the JVM to hit the ulimit for open file handles – but that specific cause of the failure is never reported, because {{ClassLoader.getResourseAsStream(...)}} is explicity designed to swallow any IOExceptions encountered and just returns ""null""...
{quote}
...allthough there was definitely some leaked InputStreams in that jira, there wouldn't neccessarily even have to be a resource leak to see similar problems: if individual tests are opening a lot of cores concurrently, they could be hitting the ulimit on jenkins (""randomly"" depending on what other tests were run in the same JVM causing a variable number of open file handles to various class files held open by the current system classloader) but instead of throwing a clean error to that effect getSourceAsStream just returns null and causes the SolrResourceLoader to assume it doesn't exist ... maybe?

(we should probably consider making {{ClassLoader.getResourceAsStream}} a forbidden API to prevent this risk even if it's *not* the cause of the current failures.)","23/May/18 21:52;uschindler;You can't make getResourceAsStream a forbidden-api, because this method(s) is basically all Java resource handling is going through. All other classloader methods are behaving the same way, so how to load resources then?","23/May/18 21:57;hossman;{quote}All other classloader methods are behaving the same way, so how to load resources then?
{quote}
Not true – getResourceAsStream explicitly swallows any IOExceptions (which might be thrown if there are too many open files) and returns ""null"" if they are encountered – we can do the same thing but actually catch & wrap/rethrow the IOExceptions by calling {{ClassLoader.getResource() + URL.openConnection()}} instead.

As i said: see SOLR-12021...
https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;a=blobdiff;f=solr/solrj/src/java/org/apache/solr/common/util/Utils.java;h=d35486e6c7688c4b32d8bd6840e590a36b4a5ab2;hp=4ab24d2be3e2aaf39b041c2a3676f456040b5e58;hb=9e0e301;hpb=df0f141907b0701d7b1f1fc297ae33ef901844a0


","23/May/18 22:04;uschindler;GetResource() may also return null, if the lookup of a file name does not work. Happens easily when you run out of file handles and the JAR file to be search in was closed by another call before.","23/May/18 22:34;hossman;bq. GetResource() may also return null ...

But at least then you can tell the difference between ""getResource() returned null meaning we didn't locate the file resource name"" and ""openConnection() threw 'IOException: Too many open files'""

And now that i look at it again: if we used {{Enumeration<URL> getResources(String name)}} instead of {{URL getResource(String)}} wouldn't that ensure we would get an IOException instead of ""null"" in the case you're talking about where even the lookup of the name failed because of too many filehandles?","23/May/18 22:45;uschindler;bq. And now that i look at it again: if we used Enumeration<URL> getResources(String name) instead of URL getResource(String) wouldn't that ensure we would get an IOException instead of ""null"" in the case you're talking about where even the lookup of the name failed because of too many filehandles?

This could work if we create a static utility method taking Class or ClassLoader and a resource name, returning an InputStream. Unfortunately there is no Class#getResources(), it's only on classloader. We still have the problem outside of Solr's code that after running out of file handles, loading of resources fails - and sometimes fails with NPE (depending on the brokenness of code)!

IMHO, the file handle leak in the mentioned commit could habe been fixed by just using try-with-resources around Class(Loader)#getResourceAsStream(). But we should fix the underlying issue (the leaks first), then think about improving that situation.","23/May/18 22:59;hossman;bq. Unfortunately there is no Class#getResources(), it's only on classloader.

Why does that matter? Doesn't {{Class.getResourceAsStream()}} just call {{Class.getClassLoader().getResourceAsStream()}} ?  we could still replace it with a helper utility like you're describing by passing {{Class.getClassLoader()}}

bq. But we should fix the underlying issue (the leaks first), then think about improving that situation.

My point before is that there may not actually *be* a leak -- it may very well be that all streams are getting closed properly, but that some tests are opening just enough resources that (depending on what other tests ran in the same JVM and what classes got loaded) they are hitting the ulimit for open files -- but instead of a clear error to that effect, we're getting ""null"" from {{getResourceAsStream()}}

ie: i agree with you that if there is a file handle leak we should fix it, but that is an indepenent possibility from the fact that we can/should ""fix"" the code we have which opens Resources to better report/propogate when we hit 'IOException: Too many open files' under the covers so people aren't baffled and confused by ""Can't find resource"" for files that definitely exist.","23/May/18 23:04;hossman;BTW...
{quote}IMHO, the file handle leak in the mentioned commit could habe been fixed by just using try-with-resources around Class(Loader)#getResourceAsStream() ...
{quote}
...that would have solved that particular leak, but it would not have fixed the error message returned in the event that the {{getResourceAsStream()}} _in that line of code_ returned 'null' down the road because some _other_ place in the code had a different resource leak ... we would still have the possibility of the caller throwing confusing {{invalid API spec: apispec/core.config.Commands.json}} exceptions because the method just returned 'null' and it couldn't distinguish ""resource doesn't exist"" from ""OS wouldn't let the JVM open that resource""","24/May/18 21:17;dsmiley;Interesting.
I'm not sure how this would be an issue for the SolrCloud tests for configSet resources since they are in ZooKeeper.  Or am I missing something?","18/Jun/18 17:01;erickerickson;[~dsmiley] Looking at BadApple'd tests, ConcurrentCreateRoutedAliasTest is AwaitsFix on this. This test hasn't failed in 4 weeks, WDYT about un-annotating it on the theory that it's fixed by SOLR-12021?","19/Jun/18 02:24;dsmiley;No; SOLR-12021 does not fix it; I've seen this error several times well after that was committed.  As Hoss says in his first comment here:

bq. I wonder if the root cause here is similar to what I found in that jira?

""similar"" (not same)","22/Apr/20 16:01;dsmiley;I think I know what the problem is:  We're not taking care to ensure the reader of a configSet (SolrCore load / ZkSolrResourceLoader) is seeing the most up to date information from ZK on this configSet.

Public service reminder:  ZooKeeper can appear to be eventually consistent between clients (e.g. between Solr nodes).  Thus clientA writes data then clientB doesn't necessarily see it yet.  One mechanism ZK has to help is a ""sync"" call which can be used preceding a read when you need to guarantee seeing the most recent information:   https://github.com/apache/zookeeper/blob/master/zookeeper-docs/src/main/resources/markdown/zookeeperProgrammers.md#ch_zkGuarantees  (see call-out note at the end of this section)

[~dragonsinth] I'd like your input on this, since you have more experience with Curator / ZK than I do.  A simple (naive?) solution is to add a ZK sync call in the constructor of ZkSolrResourceLoader.  However, might that potentially be expensive, delaying the load of all SolrCores?  Might there be a better way?","06/May/20 13:31;dsmiley;For the case of an incomplete configSet (i.e. one that didn't exist and is in the process of coming into existence), I think the solution is somewhat simple:  SOLR-14446 (Use Zk.multi when uploading configSets) in combination with a retry mechanism on creation of ZkSolrResourceLoader that ensures the ZK based configSet dir exists.  That retry mechanism would probably do a Zk.sync() in-between.  Not sure if that retry strategy should go in SOLR-14446 or be another issue.

A separate issue(s) is more comprehensively thinking about how to deal with _modifications_ to a configSet – e.g. for schema mutations, or otherwise.  That would probably involve a Zk.sync as well but with as yet unspecified means to ensure we don't call it too often.",,,,,,,,,,,,
HdfsAutoAddReplicasIntegrationTest failures,SOLR-13338,13222937,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,krisden,krisden,krisden,20/Mar/19 20:37,14/Jun/19 20:39,18/Feb/21 10:02,,,,,,,,Hadoop Integration,hdfs,Tests,,,0,,,,"HdfsAutoAddReplicasIntegrationTest failures have increased after SOLR-13330 (previously failed a different way with SOLR-13060), but they are starting to reproduce and beasting causes failures locally. They fail the same each time. Planning to figure out what is going on.",,,,,,,,,,,,,,,,SOLR-13413,SOLR-13541,SOLR-13330,SOLR-13060,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 14 20:38:03 UTC 2019,,,,,,,"0|z00x9s:",9223372036854775807,,,,,,,,,,,,,,,"20/Mar/19 20:39;krisden;* https://builds.apache.org/job/Lucene-Solr-NightlyTests-master/1797/
* https://builds.apache.org/job/Lucene-Solr-NightlyTests-8.x/49/
* http://jenkins.sarowe.net/view/main-branches/job/Lucene-Solr-Nightly-master/1025/","20/Mar/19 20:40;krisden;https://builds.apache.org/job/Lucene-Solr-repro/3050/

Only 1/5 failed here.","26/Mar/19 20:00;krisden;I have not seen HdfsAutoAddReplicasIntegrationTest fail recently. http://fucit.org/solr-jenkins-reports/failure-report.html doesn't show any recent failures either for this test. I can only point to upgrading Jackson to 2.9.8 in SOLR-13112 as a change that made these tests pass. I haven't seen an HDFS failure in 5+ locally on my Jenkins when previously it was about every other. I'll track this for a few more days and see if any new failures pop out.","28/Mar/19 13:24;krisden;new failure after ~7 days.

https://builds.apache.org/view/L/view/Lucene/job/Lucene-Solr-NightlyTests-8.x/55/","29/Mar/19 17:32;krisden;https://builds.apache.org/view/L/view/Lucene/job/Lucene-Solr-NightlyTests-master/1804/","30/Mar/19 20:22;krisden;I have a whole bunch of failure examples on my local Jenkins too. I need to sit down and figure out what is going on. Might take me a little while though.","10/May/19 15:39;krisden;So a lot of these issues look like [SOLR-13413|https://www.google.com/url?q=https://issues.apache.org/jira/browse/SOLR-13413&sa=D&source=hangouts&ust=1557588898292000&usg=AFQjCNGkWSSI7IjkUF5vpflX-dY0Gs6HLw] where there is just a timeout waiting. I haven't had a chance to test the Jetty change against this test.","14/Jun/19 20:38;krisden;Now that Jetty was upgraded (SOLR-13413 / SOLR-13541), will check on the test failures for this test and see if they start to get better.",,,,,,,,,,,,,,,,,,,,
Distributed grouping can return 'too many' results?,SOLR-9649,13012660,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,cpoerschke,cpoerschke,cpoerschke,16/Oct/16 05:05,08/Jun/19 15:34,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"stumbled across this whilst looking at SOLR-6203 and trying to factor {{GroupingSpecification.\[group\](sort|offset|limit)}} into {{GroupingSpecification.\[group\](sortSpec)}}",,,,,,,,,,,,,,,,SOLR-9660,,,,"04/Dec/16 04:18;Judith;SOLR-9649.patch;https://issues.apache.org/jira/secure/attachment/12841659/SOLR-9649.patch","16/Oct/16 05:07;cpoerschke;SOLR-9649.patch;https://issues.apache.org/jira/secure/attachment/12833633/SOLR-9649.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,2016-12-03 22:42:14.261,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Dec 04 04:18:59 UTC 2016,,,,,,,"0|i34y7j:",9223372036854775807,,,,,,,,,,,,,,,"16/Oct/16 05:07;cpoerschke;minimal test to demonstrate the unexpected(\?) behavior","03/Dec/16 22:42;Judith;Hi, Christine.  I think the issue you noticed here is the subject of    
SOLR-5878.  My diagnosis is that when group.format=simple in a          
distributed search, the value of 'rows' is interpreted as the number    
of groups to be represented in the result set rather than as the        
number of documents to be returned.  I've added another failing unit    
test to your patch where the result set is smaller so that it's easier  
to see what's happening: rows=9 and group.limit=2, and the 9th group    
returned contains 2 docs, so a total of 10 docs are returned.          ","04/Dec/16 04:18;Judith;[Deleting some unhelpful remarks about 'group.offset'---which evidently is not supported when group.format=simple---and about 'offset', which I saw in the patch tests and immediately conflated with 'start'.]",,,,,,,,,,,,,,,,,,,,,,,,,
Add tests for AssertTool,SOLR-11318,13099470,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,gerlowskija,gerlowskija,03/Sep/17 18:05,08/Jun/19 15:23,18/Feb/21 10:02,,8.0,,,,,,scripts and tools,,,,,0,,,,"{{bin/solr}}'s {{AssertTool}} is unique in that almost all of its logic lives in Java-land, which makes it pretty straightforward to test.

Any test-coverage we can add to the {{bin/solr}} logic is a good thing, as this is one of the first points of interactions for users.",,,,,,,,,,,,,,,,,,,,"03/Sep/17 22:24;gerlowskija;SOLR-11318.patch;https://issues.apache.org/jira/secure/attachment/12885169/SOLR-11318.patch","03/Sep/17 20:34;gerlowskija;SOLR-11318.patch;https://issues.apache.org/jira/secure/attachment/12885164/SOLR-11318.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Sep 03 22:25:23 UTC 2017,,,,,,,"0|i3jldb:",9223372036854775807,,,,,,,,,,,,,,,"03/Sep/17 20:43;gerlowskija;Attached patch contains some tests or {{AssertTool}}.  They were all pretty easy to write.

In the course of my testing, I found a bug in AssertTool:

{code}
[~/c/l/solr] $ bin/solr assert --exitcode --not-started http://www.google.com
[~/c/l/solr] $ echo $?
1
{code}

The exit code of AssertTool is intended to be the number of assertions failed (or 100) on error.  The invocation above _should_ exit with an exit code of 0.

Unless anyone objects, I'll bundle a fix for this in with this patch.","03/Sep/17 22:25;gerlowskija;Updated patch contains a bug fix for the AssertTool issue mentioned above, as well as a test that initially detected this case (and that now passes).

Tests and precommit both pass.",,,,,,,,,,,,,,,,,,,,,,,,,,
Create Windows-equivalent of bin-test/test,SOLR-12137,13147785,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,gerlowskija,gerlowskija,25/Mar/18 14:09,08/Jun/19 15:16,18/Feb/21 10:02,,8.0,,,,,,scripts and tools,,,,,0,,,,"SOLR-11749 introduced a regression suite for the {{bin/solr}} scripts.  Currently this suite (located in {{solr/bin-test}} only covers the *nix copy of {{bin/solr}}.  No tests are run for the Windows version.

This JIRA involves porting the existing {{bin-test/test}} logic (along with the accompanying tests) to Windows batch.  This will allow both versions of the script to be tested, and will open the door to future steps, like hooking the suite into one of ant's test targets.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2018-03-25 14:09:02.0,,,,,,,"0|i3rr9r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test RankQuery in distributed mode,SOLR-11804,13127677,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,diegoceccarelli,diegoceccarelli,29/Dec/17 13:49,08/Jun/19 15:15,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,Currently {{RankQuery}} is not tested in distributed mode. I added a few tests in `TestDistributedSearch` to check that it works properly.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2017-12-29 13:52:42.15,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jan 23 04:21:11 UTC 2018,,,,,,,"0|i3odbb:",9223372036854775807,,,,,,,,,,,,,,,"29/Dec/17 13:52;githubbot;GitHub user diegoceccarelli opened a pull request:

    https://github.com/apache/lucene-solr/pull/296

    SOLR-11804: Test RankQuery in distributed mode

    Currently `RankQuery` is not tested in distributed mode. I added a few tests in `TestDistributedSearch` to check that it works properly.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/bloomberg/lucene-solr SOLR-11804

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/lucene-solr/pull/296.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #296
    
----
commit 1591ec8e3c5e0cd670890642b34aba4eb22e0a99
Author: Diego Ceccarelli <dceccarelli4@...>
Date:   2017-12-29T13:51:04Z

    SOLR-11804: Test RankQuery in distributed mode

----
","23/Jan/18 04:21;tflobbe;Thanks [~diegoceccarelli]. The patch looks good, although {{q=all}} only returns 2 docs, maybe the test can be improved by having a better query (that returns at least the re-rank amount of docs?). In line with that, even if in many cases (specially in this test) we only validate distributed vs non-distributed, I'd prefer if you checked something of the response, at least to make sure docs are coming back, maybe like:
{code:java}
    QueryResponse response = query(""q"",facetQuery, ""rows"",100, ""facet"",""true"",
          ""facet.range"",tlong,
          ""facet.range.start"",200,
          ""facet.range.gap"",100,
          ""facet.range.end"",900,
          ""facet.range.other"",""all"");
    assertEquals(tlong, response.getFacetRanges().get(0).getName());
    assertEquals(new Integer(6), response.getFacetRanges().get(0).getBefore());
    assertEquals(new Integer(5), response.getFacetRanges().get(0).getBetween());
    assertEquals(new Integer(2), response.getFacetRanges().get(0).getAfter());{code}",,,,,,,,,,,,,,,,,,,,,,,,,,
Add bin-test/test coverage for bin/solr start/stop/restart,SOLR-12227,13152547,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,gerlowskija,gerlowskija,15/Apr/18 12:22,08/Jun/19 15:15,18/Feb/21 10:02,,8.0,,,,,,scripts and tools,,,,,0,,,,"SOLR-11749 introduced a regression-test-suite for the {{bin/solr}} scripts.  This is one of a series of follow-on issues to expand the test coverage in this suite to cover more of the {{SolrCLI}} tools made available by {{bin/solr}}

This issue focused specifically on adding coverage for the start, stop, and restart commands to {{bin/solr}}.  Expanding this coverage is important for future refactors or additions to the bin/solr scripts, such as porting more of the logic back to Java code (SOLR-11206, SOLR-11946), or unifying the solr.in.* files used on Solr startup (SOLR-7871)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2018-04-15 12:22:57.0,,,,,,,"0|i3ski7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integrate bin-test/test with Ant,SOLR-12228,13152549,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,gerlowskija,gerlowskija,15/Apr/18 12:28,08/Jun/19 15:14,18/Feb/21 10:02,,8.0,,,,,,Build,scripts and tools,,,,0,,,,"SOLR-11749 created a regression test suite for our {{bin/solr}} scripts, and SOLR-12137 expanded this coverage to Windows as well.

Now that we have a test suite on both Windows and *nix, we should create an {{ant}} target allowing devs to easily trigger these tests.  We should also consider whether there's community consensus behind adding these tests to existing runs of {{ant test}}.  If there are concrete but fixable things preventing {{ant test}} integration, we should fix those.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2018-04-15 12:28:47.0,,,,,,,"0|i3skin:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add bin-test/test coverage for bin/solr zk functionality,SOLR-12226,13152546,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,gerlowskija,gerlowskija,15/Apr/18 12:20,08/Jun/19 15:13,18/Feb/21 10:02,,8.0,,,,,,scripts and tools,,,,,0,,,,"SOLR-11749 introduced a regression-test-suite for the {{bin/solr}} scripts.  This is one of a series of follow-on issues to expand the test coverage in this suite to cover more of the {{SolrCLI}} tools made available by {{bin/solr}}

This issue focused specifically on adding coverage for the {{bin/solr zk}} tool.  Expanding this coverage is important for future refactors or additions to the bin/solr scripts, such as porting more of the logic back to Java code (SOLR-11206, SOLR-11946), or unifying the solr.in.* files used on Solr startup (SOLR-7871)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2018-04-15 12:20:42.0,,,,,,,"0|i3skhz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add bin-test/test coverage for bin/solr auth functionality,SOLR-12225,13152544,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,gerlowskija,gerlowskija,15/Apr/18 12:18,08/Jun/19 15:11,18/Feb/21 10:02,,8.0,,,,,,scripts and tools,,,,,0,,,,"SOLR-11749 introduced a regression-test-suite for the {{bin/solr}} scripts.  This is one of a series of follow-on issues to expand the test coverage in this suite to cover more of the {{SolrCLI}} tools made available by {{bin/solr}}

This issue focused specifically on adding coverage for the {{bin/solr auth}} tool.  Expanding this coverage is important for future refactors or additions to the bin/solr scripts, such as porting more of the logic back to Java code (SOLR-11206, SOLR-11946), or unifying the solr.in.* files used on Solr startup (SOLR-7871)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2018-04-15 12:18:20.0,,,,,,,"0|i3skhj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add test for activation functions in NeuralNetworkModel,SOLR-12785,13186210,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,kamulau,kamulau,20/Sep/18 01:17,08/Jun/19 15:00,18/Feb/21 10:02,,,,,,,,contrib - LTR,,,,,0,,,,,,,,,,,,,,,,,,,,SOLR-12780,,,,"20/Oct/18 15:43;kamulau;SOLR-12785-A.patch;https://issues.apache.org/jira/secure/attachment/12944863/SOLR-12785-A.patch","20/Oct/18 15:44;kamulau;SOLR-12785-B.patch;https://issues.apache.org/jira/secure/attachment/12944864/SOLR-12785-B.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Oct 20 15:47:54 UTC 2018,,,,,,,"0|i3ya5b:",9223372036854775807,,,,,,,,,,,,,,,"21/Sep/18 02:26;kamulau;A couple of comments regarding the patch:
 # I moved the default implementations to the Activation interface, and implemented in enums (this pattern is mentioned in ""Effective Java"", Item 3). I decided on the enum as activation is just a function; if another layer is created with the same activation as a previous layer, only one object will be created (i.e. if there are three layers with sigmoid activation, one object will be created, instead of three as it is now). Doing this also made it easier to test. If it is preferred that the implementations not be singletons or in an enum class, please let me know; any comments are appreciated.
 # I also attempted to write the test for the activation functions without changing current implementation of DefaultLayer.setActivation(), however in doing so, I felt that I had to construct a NeuralNetworkModel object (with one input, one output, weight 1 and bias 0). See test-no-activation-change.txt, which I have attached.

Any comments or advice would be greatly appreciated!","11/Oct/18 16:17;kamulau;If changes are accepted for additional activation functions (SOLR-12780), the test in the patch should be changed accordingly; if the tests (and edited implementation of default activation functions) is accepted here, the implementation of the activation functions in SOLR-12780 will have to change accordingly.","20/Oct/18 15:47;kamulau;Deleted old patches and added new ones to reflect the fact that Leaky Relu and TanH were added in SOLR-12780.

A-patch adds tests without changing the implementation of default Activation implementations (via a network with exactly one input and one output node).

B-patch changes implementation of default Activation implementations and adds tests for that.",,,,,,,,,,,,,,,,,,,,,,,,,
reduce test failures due to NullPointerException,SOLR-12877,13191984,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,cpoerschke,cpoerschke,16/Oct/18 16:47,18/Oct/18 22:17,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"Creating this as an umbrella ticket for fixing various NullPointerExceptions e.g. encounted in this type of code pattern in tests:

before:
{code:java}
Bar bar = foo.getBar(id);
assertEquals(42, bar.size()); // if bar is null we hit a NPE here
{code}
after:
{code:java}
Bar bar = foo.getBar(id);
assertNotNull(bar); // if bar is null the test now fails here
assertEquals(42, bar.size());
{code}
The test failure itself would still remain a test failure but a slightly clearer one perhaps.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2018-10-16 17:03:35.818,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 18 22:17:15 UTC 2018,,,,,,,"0|i3z9kn:",9223372036854775807,,,,,,,,,,,,,,,"16/Oct/18 16:48;cpoerschke;Having a {{assertNotNull(bar);}} check at each and every possible point is not practical of course but instead the scope and intention of this ticket here could be to add {{assertNotNull(bar);}} in cases where the subsequent use of {{bar}} has been seen to result in a NPE. Does that kind of make sense?","16/Oct/18 17:03;jira-bot;Commit 15002eba2f7b90d7323dc6a9277c61e75aea5004 in lucene-solr's branch refs/heads/master from [~cpoerschke]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=15002eb ]

SOLR-12877: avoid NPE in TestTlogReplica.testRealTimeGet
","16/Oct/18 17:03;jira-bot;Commit d2f7272b0e2d4faefdf0c7c7e991311bde4e9c3e in lucene-solr's branch refs/heads/master from [~cpoerschke]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d2f7272 ]

SOLR-12877: avoid NPE in TestUtilizeNode.getReplicaList
","16/Oct/18 22:53;jira-bot;Commit 15002eba2f7b90d7323dc6a9277c61e75aea5004 in lucene-solr's branch refs/heads/jira/http2 from [~cpoerschke]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=15002eb ]

SOLR-12877: avoid NPE in TestTlogReplica.testRealTimeGet
","16/Oct/18 22:53;jira-bot;Commit d2f7272b0e2d4faefdf0c7c7e991311bde4e9c3e in lucene-solr's branch refs/heads/jira/http2 from [~cpoerschke]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d2f7272 ]

SOLR-12877: avoid NPE in TestUtilizeNode.getReplicaList
","18/Oct/18 22:17;jira-bot;Commit ac60ddda3c96584ebcca35660d846ab6424ea680 in lucene-solr's branch refs/heads/branch_7x from [~cpoerschke]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ac60ddd ]

SOLR-12877: avoid NPE in TestTlogReplica.testRealTimeGet
","18/Oct/18 22:17;jira-bot;Commit 4d811b798976e3213737ffdccd4540e40218d837 in lucene-solr's branch refs/heads/branch_7x from [~cpoerschke]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4d811b7 ]

SOLR-12877: avoid NPE in TestUtilizeNode.getReplicaList
",,,,,,,,,,,,,,,,,,,,,
fix MathExpressionTest.testMultiVariateNormalDistribution,SOLR-12609,13175888,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,cpoerschke,cpoerschke,31/Jul/18 16:54,10/Aug/18 15:17,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"Here's details of a recent failure: https://jenkins.thetaphi.de/job/Lucene-Solr-7.x-MacOSX/771/testReport/junit/org.apache.solr.client.solrj.io.stream/MathExpressionTest/testMultiVariateNormalDistribution/
{code}
java.lang.AssertionError
	at __randomizedtesting.SeedInfo.seed([B23FB1D1571F1061:28C438A66036526A]:0)
	at org.junit.Assert.fail(Assert.java:92)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.junit.Assert.assertTrue(Assert.java:54)
	at org.apache.solr.client.solrj.io.stream.MathExpressionTest.testMultiVariateNormalDistribution(MathExpressionTest.java:3010)
...
{code}
",,,,,,,,,,,,,,,,,,,,"31/Jul/18 16:57;cpoerschke;SOLR-12609.patch;https://issues.apache.org/jira/secure/attachment/12933794/SOLR-12609.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2018-07-31 18:30:55.581,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 10 15:17:17 UTC 2018,,,,,,,"0|i3wj47:",9223372036854775807,,,,,,,,,,,,,,,"31/Jul/18 16:55;cpoerschke;This test is currently annotated as a {{BadApple}}. I propose as a next step to have the test report the actual value (that triggers the assertion) so that it is easier to compare it against the expected range.","31/Jul/18 18:30;jira-bot;Commit 8a4482805bfdcb31450b25a824b8f785543e8f4d in lucene-solr's branch refs/heads/master from [~cpoerschke]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8a44828 ]

SOLR-12609: include actual value in two MathExpressionTest.testMultiVariateNormalDistribution asserts
","31/Jul/18 18:50;jira-bot;Commit d19ac7cebd2c714715bf2d777c0f2d715745a9e1 in lucene-solr's branch refs/heads/branch_7x from [~cpoerschke]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d19ac7c ]

SOLR-12609: include actual value in two MathExpressionTest.testMultiVariateNormalDistribution asserts
","10/Aug/18 15:17;cpoerschke;from https://jenkins.thetaphi.de/job/Lucene-Solr-master-Linux/22616/ failure earlier this week
{code}
FAILED:  org.apache.solr.client.solrj.io.stream.MathExpressionTest.testMultiVariateNormalDistribution

Error Message:
[-3.2124788454459896, 40.43704103619221]

Stack Trace:
java.lang.AssertionError: [-3.2124788454459896, 40.43704103619221]
	at __randomizedtesting.SeedInfo.seed([F87D0365A7F86D44:62868A1290D12F4F]:0)
	at org.junit.Assert.fail(Assert.java:93)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.apache.solr.client.solrj.io.stream.MathExpressionTest.testMultiVariateNormalDistribution(MathExpressionTest.java:3010)
{code}
( the mailing list archives still have details at http://mail-archives.apache.org/mod_mbox/lucene-dev/201808.mbox/%3C273016007.101.1533620778941.JavaMail.jenkins%40serv1.sd-datasolutions.de%3E )",,,,,,,,,,,,,,,,,,,,,,,,
MiniSolrCloudCluster.waitForAllNodes to log a little more,SOLR-12604,13175636,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,cpoerschke,cpoerschke,cpoerschke,30/Jul/18 18:30,30/Jul/18 18:34,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,Current vs. expected count is just numbers. If we also log which nodes _were_ found then that might provide insights into what nodes are missing e.g. perhaps there are patterns as to which node is found or not found?,,,,,,,,,,,,,,,,,,,,"30/Jul/18 18:34;cpoerschke;SOLR-12604.patch;https://issues.apache.org/jira/secure/attachment/12933625/SOLR-12604.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2018-07-30 18:30:37.0,,,,,,,"0|i3whkf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TestLTRReRankingPipeline.testDifferentTopN test fails,SOLR-11134,13089061,Test,Reopened,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,cpoerschke,cpoerschke,21/Jul/17 14:41,20/Mar/18 14:26,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2017-07-21 15:02:58.289,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 20 14:26:22 UTC 2018,,,,,,,"0|i3hunz:",9223372036854775807,,,,,,,,,,,,,,,"21/Jul/17 15:02;jira-bot;Commit 58358099bf72b7d39bee2b67a57abdb7549787f8 in lucene-solr's branch refs/heads/master from [~cpoerschke]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5835809 ]

SOLR-10174, SOLR-11134: @AwaitsFix instead of @Ignore for TestLTRReRankingPipeline.testDifferentTopN
","21/Jul/17 15:23;jira-bot;Commit 5be1258965c069b8c89c9a04b1f92fd218e027fe in lucene-solr's branch refs/heads/branch_7x from [~cpoerschke]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5be1258 ]

SOLR-10174, SOLR-11134: @AwaitsFix instead of @Ignore for TestLTRReRankingPipeline.testDifferentTopN
","25/Feb/18 04:56;erickerickson;I'm annotating this as BadApple so it gets run occasionally and we see it in reports.","20/Mar/18 10:51;ab;This test fails 100% in recent @BadApple builds, which suggests that either the test is broken or the functionality is broken.","20/Mar/18 11:10;romseygeek;Given that nobody has found time to look at this since last July, I think we should set it back to AwaitsFix?","20/Mar/18 13:05;jira-bot;Commit 3afb8b15bffc26a1f34e79110f988a9b24825169 in lucene-solr's branch refs/heads/master from [~ab]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3afb8b1 ]

SOLR-11134: This test fails reproducibly, mark it as AwaitsFix.
","20/Mar/18 13:06;jira-bot;Commit 1cf20cd336064e35bb6fccede3ead79761876f3b in lucene-solr's branch refs/heads/branch_7x from [~ab]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1cf20cd ]

SOLR-11134: This test fails reproducibly, mark it as AwaitsFix.
","20/Mar/18 14:26;jira-bot;Commit 8f4ef4b72dcc218f10c8d56718e6953310114242 in lucene-solr's branch refs/heads/branch_7_3 from [~ab]
[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8f4ef4b ]

SOLR-11134: This test fails reproducibly, mark it as AwaitsFix.
",,,,,,,,,,,,,,,,,,,,
ShardSplitTest failure due to NPE.,SOLR-8122,12902326,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,markrmiller@gmail.com,markrmiller@gmail.com,04/Oct/15 18:04,22/Feb/18 18:30,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"{noformat}
java.lang.NullPointerException
	at __randomizedtesting.SeedInfo.seed([B40902F05D77650A:3C5D3D2AF38B08F2]:0)
	at org.apache.solr.cloud.ShardSplitTest.logDebugHelp(ShardSplitTest.java:540)
	at org.apache.solr.cloud.ShardSplitTest.checkDocCountsAndShardStates(ShardSplitTest.java:431)
	at org.apache.solr.cloud.ShardSplitTest.splitByUniqueKeyTest(ShardSplitTest.java:215)
	at org.apache.solr.cloud.ShardSplitTest.test(ShardSplitTest.java:77)
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2015-10-04 18:04:14.0,,,,,,,"0|i2mkpz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add a test to assert that request dispatcher functions can be overridden,SOLR-7690,12838141,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,shalin,shalin,16/Jun/15 11:50,09/May/16 18:47,18/Feb/21 10:02,,,,,,5.5,6.0,,,,,,0,,,,"It should be possible for basic functions of the solr request dispatcher to be overridden e.g.
{code}
protected void execute(SolrQueryResponse rsp)
{code}
and
{code}
protected void sendError(int code, String message) throws IOException {
{code}

In Solr 5.2, SOLR-7484 broke this functionality and was fixed in 5.2.1 by SOLR-7623. We should add a test which asserts this feature so that it is not accidentally broken again in future.",,,,,,,,,,,,,,,,,,,,"01/Sep/15 05:43;mariusneo;SOLR-7690.patch;https://issues.apache.org/jira/secure/attachment/12753461/SOLR-7690.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,2015-09-01 05:43:54.962,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 01 05:43:54 UTC 2015,,,,,,,"0|i2g3l3:",9223372036854775807,,,,,,,,,,,,,,,"26/Aug/15 13:14;shalin;Bulk move to 5.4 after 5.3 release.","01/Sep/15 05:43;mariusneo;In the patch can be found the SolrDispatchFilterOverrideTest class.

Unfortunately, I can't seem to find a way how to call HttpSolrCall#sendError(int, String) method.

In HttpSolrCall.java line 409-412 there is the check :  
{code}
if (solrDispatchFilter.abortErrorMessage != null) {
      sendError(500, solrDispatchFilter.abortErrorMessage);
      return RETURN;
}
{code}
but the field abortErrorMessage is never set in SolrDispatchFilter class. 

The method HttpSolrCall#sendError(int, String)  is also used in HttpSolrCall#sendError(Throwable) , but i don't see an easy way to simulate a situation generating an exception within the previously mentioned method call.",,,,,,,,,,,,,,,,,,,,,,,,,,
Add tests for bin/post,SOLR-7901,12853690,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,ehatcher,ehatcher,ehatcher,09/Aug/15 13:15,09/May/16 18:44,18/Feb/21 10:02,,,,,,6.0,,scripts and tools,,,,,0,,,,"bin/post relies on SimplePostTool, which has tests, but bin/post itself needs a tests.  SOLR-7859 shows an example where a test would have caught a problem.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2015-08-09 13:15:00.0,,,,,,,"0|i2iian:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add a test which asserts that autoAddReplicas also checks live nodes to see if state has changed,SOLR-7663,12837076,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,markrmiller@gmail.com,shalin,shalin,11/Jun/15 08:23,09/May/16 18:43,18/Feb/21 10:02,,,,,,5.5,6.0,SolrCloud,Tests,,,,0,,,,"As discussed on SOLR-6923, we need a test which asserts that we don't regress the fix added in SOLR-6923.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Aug 26 13:14:21 UTC 2015,,,,,,,"0|i2fx4n:",9223372036854775807,,,,,,,,,,,,,,,"26/Aug/15 13:14;shalin;Bulk move to 5.4 after 5.3 release.",,,,,,,,,,,,,,,,,,,,,,,,,,,
TestRandomRequestDistribution can lose requests,SOLR-8949,12956296,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,mdrob,mdrob,05/Apr/16 21:30,05/Apr/16 21:30,18/Feb/21 10:02,,6.0,,,,,,,,,,,0,,,,I was looking at SOLR-7493 with [~gchanan] and he noticed that {{TestRandomRequestDistribution::testRequestTracking}} can still pass by losing requests and then trivially seeing that not all of them were completed on the same node.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2016-04-05 21:30:03.0,,,,,,,"0|i2voqv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Nightly fail in org.apache.solr.handler.TestReplicationHandler: ObjectTracker found 9 object(s) that were not released!!! [NRTCachingDirectory, ...",SOLR-8447,12923250,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,markrmiller@gmail.com,markrmiller@gmail.com,19/Dec/15 22:32,08/Mar/16 11:11,18/Feb/21 10:02,,,,,,,,,,,,,1,,,,Build: https://builds.apache.org/job/Lucene-Solr-NightlyTests-trunk/886/,,,,,,,,,,,,,,,,SOLR-4506,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2016-03-08 10:19:18.972,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 08 11:11:33 UTC 2016,,,,,,,"0|i2q4nj:",9223372036854775807,,,,,,,,,,,,,,,"19/Dec/15 22:32;markrmiller@gmail.com;{noformat}
 [junit4]   2> org.apache.solr.common.util.ObjectReleaseTracker$ObjectTrackerException
   [junit4]   2> 	at org.apache.solr.common.util.ObjectReleaseTracker.track(ObjectReleaseTracker.java:43)
   [junit4]   2> 	at org.apache.solr.core.CachingDirectoryFactory.get(CachingDirectoryFactory.java:352)
   [junit4]   2> 	at org.apache.solr.handler.IndexFetcher.fetchLatestIndex(IndexFetcher.java:386)
   [junit4]   2> 	at org.apache.solr.handler.IndexFetcher.fetchLatestIndex(IndexFetcher.java:270)
   [junit4]   2> 	at org.apache.solr.handler.ReplicationHandler.doFetch(ReplicationHandler.java:387)
   [junit4]   2> 	at org.apache.solr.handler.ReplicationHandler$1.run(ReplicationHandler.java:275)
{noformat}","19/Dec/15 22:42;markrmiller@gmail.com;This is reproducible - it's doTestStressReplication on Nightly. By code inspection, I have not yet spotted how it can happen. Still digging.","19/Dec/15 23:09;markrmiller@gmail.com;Seems to be perhaps from SOLR-4506. If I don't do that clean up on core reload in SolrCore#initIndex, the leak does not happen.","19/Dec/15 23:12;markrmiller@gmail.com;I suspect that SOLR-4506 is not really implemented correctly. It seems to have a new SolrCore on a reload blow away the directory of the previous SolrCore, and that SolrCore may actually still be in use. On first look, that seems a little off.","08/Mar/16 10:19;markus17;Hi - i got this too sometimes in certain unit tests of an UpdateProcessor. Our other UpdateProcessors don't show this behaviour. 

{code}
ObjectTracker found 3 object(s) that were not released!!! [SolrCore, MockDirectoryWrapper, MockDirectoryWrapper]
{code}

This specific UpdateProcessor implements processCommit() and has some SolrIndexSearcher logic when running in non-cloud mode. This specific UpdateProcessor has a reference to a SolrCore, which it got from its Factory.

Does something come to mind?","08/Mar/16 10:56;markus17;Allright, i know what causes it, it is retrieving an IndexSearcher from the core.

{code}
  @Override
  public void processCommit(CommitUpdateCommand cmd) throws IOException {
    if (next != null) {
      next.processCommit(cmd);
    }
    SolrIndexSearcher searcher = core.getRealtimeSearcher().get();
  }
{code}

I am not allowed to do this in an UpdateProcessor. -Do i have to call close on RefCount after i'm done with my logic? Does that also close the IndexSearcher?- It is protected so i cannot call close on RefCount.","08/Mar/16 11:11;markus17;Ok, for whoever has this issue too:

{code}
  @Override
  public void processCommit(CommitUpdateCommand cmd) throws IOException {
    if (next != null) {
      next.processCommit(cmd);
    }
    
    RefCounted<SolrIndexSearcher> searcher = core.getRealtimeSearcher();
    searcher.decref();
{code}

The API-doc for getRealtimeSearcher doesn't mention that the decRef must be decremented and i didn't notice the docs for getRegisteredSearcher and getSearcher.

Thanks for letting me monologue my way out of this :p",,,,,,,,,,,,,,,,,,,,,
factor out a TestMiniSolrCloudClusterBase class,SOLR-7886,12852701,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,cpoerschke,cpoerschke,06/Aug/15 21:09,07/Aug/15 07:53,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"Please see SOLR-7877 for initial discussion on this.

Currently we have:
{code}
public class TestMiniSolrCloudCluster extends LuceneTestCase
{code}
and
{code}
public class BasicAuthIntegrationTest extends TestMiniSolrCloudCluster {
public class TestAuthenticationFramework extends TestMiniSolrCloudCluster {
public class TestMiniSolrCloudClusterKerberos extends TestMiniSolrCloudCluster {
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2015-08-07 04:59:24.519,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 07 07:53:03 UTC 2015,,,,,,,"0|i2ifuv:",9223372036854775807,,,,,,,,,,,,,,,"07/Aug/15 04:59;shalin;But those tests have no business extending TestMiniSolrCloudCluster, do they? There are many tests which extend SolrTestCaseJ4 and use MiniSolrCloudCluster directly. Perhaps these tests should also do the same?","07/Aug/15 07:53;gchanan;I believe that's the idea behind the jira.  Though there may be cases where extending is justified, e.g. in the case where you want to run the same tests with a different configuration.",,,,,,,,,,,,,,,,,,,,,,,,,,
"Move solr.test.sys.prop(1|2) out of the generic solrconfig.xml that's used by most tests",SOLR-7817,12846658,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,anshum,anshum,21/Jul/15 20:01,21/Jul/15 20:01,18/Feb/21 10:02,,,,,,,,,,,,,0,,,,"We have solr.test.sys.prop1 and solr.test.sys.prop2 system properties in the widely used solrconfig.xml and it would make sense to move these to a different solrconfig which can be used by the tests that need this.

Setting this system property in the test base class isn't good, specially as writing a new test that doesn't extend on the existing test base classes requires the knowledge of setting these if you want to use the widely used solrconfig.xml.

Here's another conversation about the same from 2007:
http://mail-archives.apache.org/mod_mbox/lucene-solr-dev/200703.mbox/%3Cc68e39170703291430w5a57f603p7f0b7412d7cbb419@mail.gmail.com%3E",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2015-07-21 20:01:51.0,,,,,,,"0|i2hikf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
debug info test in MLT handler should be moved to MLT component,SOLR-2740,12521138,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Minor,,,koji,koji,02/Sep/11 02:31,02/Sep/11 02:31,18/Feb/21 10:02,,3.1,3.2,3.3,4.0-ALPHA,,,MoreLikeThis,SearchComponents - other,,,,0,,,,"In SOLR-860, I wrote a test for debug info that is produced by MLT *component*. But I put it in MLT *handler* test case. As it confuses them, it should be moved to MLT component test case. Also, adding a test for debug info (for handler) in handler test case is nice to have. It avoids introducing regression like that was reported in SOLR-2734.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,3056,,,2011-09-02 02:31:26.0,,,,,,,"0|i03ivj:",18491,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add unit tests for FunctionQParser.parse() methods.,SOLR-8229,12909520,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Trivial,,,gerlowskija,gerlowskija,01/Nov/15 22:07,09/May/16 18:54,18/Feb/21 10:02,,6.0,,,,6.0,,query parsers,,,,,0,,,,"While working on an unrelated issue, I found myself reading through FunctionQParser.

I had some trouble figuring out what the expected behavior was for the overloaded parse() methods.  They were missing Javadocs, and I couldn't find any unit tests to clarify their behavior.

I'd like to write the unit tests, so I authored this JIRA to cover them.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,2015-11-01 22:07:15.0,,,,,,,"0|i2nson:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add test cases for org.apache.solr.parser.TokenMgrError,SOLR-8755,12945323,Test,Open,SOLR,Solr,software,yseeley@gmail.com,A search server based on Lucene.,http://lucene.apache.org/solr/,Trivial,,,b.vanalderweireldt,b.vanalderweireldt,29/Feb/16 02:02,09/May/16 18:51,18/Feb/21 10:02,,6.0,,,,6.0,,,,,,,0,new,newbie,newdev,Add test cases for org.apache.solr.parser.TokenMgrError,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,2016-02-29 02:06:08.181,,,false,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 29 02:06:08 UTC 2016,,,,,,,"0|i2tw0v:",9223372036854775807,,,,,,,,,,,,,,,"29/Feb/16 02:06;githubbot;GitHub user bvanalderweireldt opened a pull request:

    https://github.com/apache/lucene-solr/pull/18

    SOLR-8755 Add test cases for org.apache.solr.parser.TokenMgrError

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/bvanalderweireldt/lucene-solr SOLR-8755

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/lucene-solr/pull/18.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #18
    
----
commit 822b4c84bafe6702a9a7569ac50d9b723bb3f96a
Author: bvanalderweireldt <benoit.v@hybhub.com>
Date:   2016-02-29T02:05:36Z

    SOLR-8755 Add test cases for org.apache.solr.parser.TokenMgrError

----
",,,,,,,,,,,,,,,,,,,,,,,,,,,
