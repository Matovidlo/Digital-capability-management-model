Issue id,Status,Summary,Issue Type,Created,Author,Resolution,Resolved,Description,Creator,Labels,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary,Comment author,Commentary
33601,OPEN,carousel-item-dark,css; feature,2021-04-09 22:17:00 +0000 UTC,jmacdonald-spectacle,Opened,,"I like the new carousel-dark class, but I think it would also be useful to have darker or lighter controls, etc. on a slide-by-slide basis.

I would recommend something like a carousel-item-dark and carousel-item-light class available on each carousel-item.

This would allow slides to override the carousel setting, if necessary. ",,,mdo,"
--
Controls and indicators are outside each slide, so it'd be difficult to style those based on the slides. One method could be sibling selectors, however the HTML order is never guaranteed. Blend modes or something might be useful depending on the context?
--
",jmacdonald,"
--
I was just concentrating on the captions, but you're right. the controls and indicators wouldn't work. Might need a class change on the carousel element itself.

If I get something working, I'll submit a solution.
--
",,,,,,,,
33596,OPEN,ScrollBar.js: handle properly; undefined properties during reset,js; v5,2021-04-09 12:14:31 +0000 UTC,GeoSot,Opened,,"Maybe the below check is redundant. 
https://github.com/twbs/bootstrap/blob/c864852135b17a89bf2f3599212f5a4d3bd273f8/js/src/util/scrollbar.js#L52

Reference: https://github.com/twbs/bootstrap/pull/33245#discussion_r610542888",,,,,,,,,,,,,,
33592,OPEN,[v5-b3] Using a `select` menu in a dropdown in a navbar collapses the dropdown menu,,2021-04-09 08:06:39 +0000 UTC,lenormf,Opened,,"Hi,

Here's a reproducer:

```html
<nav class=""navbar navbar-expand-lg navbar-light bg-light"">
  <ul class=""navbar-nav me-auto mb-2 mb-lg-0"">
    <li class=""nav-item dropdown"">
      <a class=""nav-link dropdown-toggle"" href=""#"" id=""navbarDropdown"" role=""button"" data-bs-toggle=""dropdown"" aria-expanded=""false"">
        Dropdown
      </a>
      <ul class=""dropdown-menu"" aria-labelledby=""navbarDropdown"">
        <li>
          <select class=""form-select"" aria-label=""Default select example"">
            <option selected>Open this select menu</option>
            <option value=""1"">One</option>
          </select>
        </li>
      </ul>
    </li>
  </ul>
</nav>
```

- expand the dropdown menu by clicking on it
- select an item in the menu (e.g. ""One"")

Outcome: the dropdown menu gets collapsed upon selecting an item
Expected: the dropdown menu remains open, to allow for example submitting the form that the select input is a part of

I haven't tried outside of a navbar (apparently Popper is not needed for dropdowns in navbars?).

HTH.",,,,,,,,,,,,,,
33591,OPEN,form-select[multiple] should not display any indicator/icon,,2021-04-09 13:22:51 +0000 UTC,tkrotoff,In progress,,"Under Bootstrap 4 (4.6.0), custom-select[multiple] does not display the select indicator and the is-valid/invalid icon:

```HTML
<select class=""custom-select is-valid"" multiple></select>
```

![image](https://user-images.githubusercontent.com/643434/114147971-90f2de80-9919-11eb-98a2-7c24c1b7cd09.png)

Under Bootstrap 5 (5.0.0-beta3), the new form-select[multiple] does display the select indicator and the is-valid/invalid icon:

```HTML
<select class=""form-select is-valid"" multiple></select>
```

![image](https://user-images.githubusercontent.com/643434/114153910-22fde580-9920-11eb-8023-6fb2c028e789.png)

This is a regression.",,,alecpl,"
--
Probably fixed by #33411
--
",tkrotoff,"
--
IMHO the PR is wrong/not enough, see my comment here: https://github.com/twbs/bootstrap/pull/33411#issuecomment-816675388

--
",,,,,,,,
33587,OPEN,"V5 beta3 - in RTL the select tag with class ""form-select"" the arrow should be on the left #css",awaiting-reply,2021-04-08 16:51:27 +0000 UTC,mostafakasem,Opened,,"In RTL the select tag with class ""form-select"" the arrow should be on the left not to the right side.
 
**FIX**

`[dir=""rtl""] .form-select{
  background-position: left .75rem center;
  padding: .375rem .75rem .375rem 2.25rem;
}`",,,ffoodd,"
--
Bug reports must include a **live demo** of the issue. Per our [contributing guidelines](https://github.com/twbs/bootstrap/blob/master/.github/CONTRIBUTING.md), please create a reduced test case via [CodePen](https://codepen.io/) or [JS Bin](https://jsbin.com/) and report back with your link, Bootstrap version, and specific browser and operating system details.

---
_This is a saved reply._
--
",,,,,,,,,,
33584,OPEN,Modal.js: adjustDialog misaligns the dialog box,confirmed; js; v4; v5,2021-04-09 08:35:14 +0000 UTC,GeoSot,Opened,,"When modal is open and after window resize, it can be seen that modal is not aligned properly on x-axis 

Replicate:
* open dev-tools inspector and make the browser available space small, so to be easy to spot the difference
* any modal you open, it gets a padding right (cause of bodyOverfloating or ModalOverfloating)
* try to resize window. Same behavior again

Tried on win-10 & linux  chrome|firefox  

Reference: #33245, #31845

Fully explained [here](https://github.com/twbs/bootstrap/pull/33245#issuecomment-814635916)

Example below 

https://user-images.githubusercontent.com/22406063/113994977-7dcf0880-985e-11eb-9d34-2866fbf52e0f.mp4

",,,XhmikosR,"
--
Does this affect v4 too? Please add the related labels :)
--
",,,,,,,,,,
33581,OPEN,BS5 beta-3: backdrop overlays nested Offcanvas content inside .fixed-top,awaiting-reply,2021-04-10 08:38:20 +0000 UTC,neralex,Opened,,"Hi,

is there a way to prevent the backdrop-overlaying without moving the nested div.offcanvas outside of the parent-element .fixed-top?

- OS: Windows 10
- Browser: latest Chrome and Firefox
- Test case: https://codepen.io/neralex/pen/XWpeqRb

Thanks in advance.
",,,alpadev,"
--
The problem is how z-index or particularly stacking contexts work. A new stacking context is created for the element and all nested elements inside. Since the z-index of .fixed-top is lower than the z-index of the backdrop (which isn't nested inside), you can't go _higher_ than the backdrop from within the .fixed-top element itself.

I guess it would be possible to change the behaviour of the offcanvas and/or backdrop, but in my opinion it would be just easier to move .offcanvas out of the .fixed-top element.

Are there any reasons why you need that inside of .fixed-top?
--
",,,,,,,,,,
33580,OPEN,Modal.js: ScrollBar tweak makes some redundant actions on `sticky-top`,help wanted; js,2021-04-09 09:32:24 +0000 UTC,GeoSot,In progress,,"While a modal is opened, the code tries to make some magic with padding/margin on fixed elements

Although line 459 adds `paddingRight` on `.sticky-top` and line 460 reverts this, adding negative `marginRight`
https://github.com/twbs/bootstrap/blob/0795a778f2b9e90a92ac5a240811cc2427dc268d/js/src/modal.js#L460

https://github.com/twbs/bootstrap/blob/0795a778f2b9e90a92ac5a240811cc2427dc268d/js/src/modal.js#L459


## Replicate:
* Go to [docs/modal](https://getbootstrap.com/docs/5.0/components/modal/#live-demo)
* Open the modal. The `<nav class=""bd-subnavbar py-2"" aria-label=""Secondary navigation"">` is `stiky` by css, but it will not be affected at all while modal opens.
* Then add the `sticky-top` class `<nav class=""bd-subnavbar py-2 sticky-top"" aria-label=""Secondary navigation"">`
* open the browser inspector 
* open the modal again
### Result: 
The `nav` element will have two js-added properties
```css
padding-right: 17px;
margin-right: -17px;
```
Example test attached:
![image](https://user-images.githubusercontent.com/22406063/113945697-864c2280-980f-11eb-9bcf-3381730bbb05.png)


Ps: The same issue, lives in scrollbar.js too, as it is a copy of modal code
",,,GeoSot,"
--
Below we can see the two defferences

css sticky-top
![image](https://user-images.githubusercontent.com/22406063/114153871-7aa04f00-9928-11eb-8562-61e9c1a90122.png)

class sticky-top
![image](https://user-images.githubusercontent.com/22406063/114153967-9277d300-9928-11eb-9d0b-3f70ce7e7c36.png)

I do not know if this counts like bug or not. 

--
",,,,,,,,,,
33579,OPEN,Bootstrap tooltip with wrong position inside a .table-responsive,,2021-04-07 21:38:39 +0000 UTC,pbuttelli,Opened,,"**Operating system:** Ubuntu 20.04.2 LTS
**Browser:** Firefox 87.0
**Reduced test case:** https://jsfiddle.net/3r9z1o84/

I'm having a problem while using Bootstrap tooltips inside a parent with `overflow: auto`, more specifically inside a `.table-responsive` div. Both buttons are inside a `<td>` and have `data-bs-placement=""top""`, so the tooltip should be placed in the top of them, not anywhere else.

This is what is happening:
![image](https://user-images.githubusercontent.com/11038642/113937069-043c0980-97cf-11eb-902c-a080f246285c.png) ![image](https://user-images.githubusercontent.com/11038642/113937077-069e6380-97cf-11eb-9ead-0ffd290f43bf.png)

This is the expected behavior (when `overflow-x` is removed):
![image](https://user-images.githubusercontent.com/11038642/113937184-27ff4f80-97cf-11eb-9745-101c1f674580.png) ![image](https://user-images.githubusercontent.com/11038642/113937242-377e9880-97cf-11eb-9f2b-9a77c4887bd1.png)
",,,,,,,,,,,,,,
33576,OPEN,V5 Spinners : Add more spinners to documentation,feature,2021-04-07 15:14:07 +0000 UTC,devhoussam,Opened,,https://loading.io/css/,,,,,,,,,,,,,,
33574,OPEN,Offcanvas inside containers other than viewport,feature; v5,2021-04-09 23:02:54 +0000 UTC,iainhallam,Opened,,"In some user interfaces, it's possible to make a drawer appear using any element with appropriate classes as the container, rather than the viewport. I'd like to use this to allow properties panes to easily be associated with different parts of the page, rather than needing to go to the window edge all the time.

A codepen for the sort of thing I'm after:

https://codepen.io/iainhallam/pen/vYywVev

If this is already possible, could it be added to the documentation, and if not, could this be a feature request, please?",,,mdo,"
--
I believe this is already possible, but a quick demo could be helpful for sure. Unsure what kind of potential issues the backdrop could introduce though. Might be something @GeoSot is already thinking about elsewhere.
--
",,,,,,,,,,
33565,OPEN,`$btn-box-shadow` is not properly disabling shadows when `$enable-shadows: true` is set.,css,2021-04-07 03:29:09 +0000 UTC,Ltchoc221,Opened,,"Version: 
""5.0.0-beta3""

Environment
Google Chrome (89.0.4389.72) on Windows 7, Using a CRA Application

Issue: 
When setting `$enable-shadows: true`, and `$btn-box-shadow: null;`, box shadows are still appearing.  When `$btn-box-shadow: null, null;` is set, then the box shadows finally disappear.  

I believe this is due to the default of `$btn-box-shadow` being an array of values, and when a single 'null' is passed in, the second value of the array is getting added on somewhere in the import/compilation chain and still gets processed by the scss/mixins/_box-shadow.scss mixin.  When I set the variable to '$btn-box-shadow: none', I see the warning spit out about 8 times from that mixin, so I know it is being processed at least once. 

I'm not a Sass expert so I was unable to reproduce in a fiddle outside of my application, and I'm not sure if this fully qualifies as a bug or is a needed update to the documentation that the end-user must null-out both array entries in order to fully remove the shadows. We want to selectively disable shadows in our application, so we are setting $enable-shadows as we want them on certain components.",,,mdo,"
--
I believe this is because we force the ""outline"" box shadow on focus at all times. Would need to dig in further to confirm.
--
",,,,,,,,,,
33564,OPEN,Offcanvas doesn't show when calling show() programmatically,js; v5,2021-04-09 22:27:49 +0000 UTC,djthorpe,In progress,,"Version:
bootstrap-5.0.0-beta3

Browser:
Google Chrome (on MacOS)  89.0.4389.114

Issue:
Calling show() programatically does not show canvas, only backdrop appears for a moment then disappears

Javascript Class implemented:

```javascript
class InfoView {
    constructor() {
        var node = document.querySelector(""#infosheet"");
        this._Modal = new bootstrap.Offcanvas(node);
    }
    doShow() {
            this._Modal.show();
    }
}
```

HTML implemented:

```html
   <div class=""offcanvas offcanvas-bottom"" tabindex=""-1"" id=""infosheet"" aria-labelledby=""info-label"">
        <div class=""offcanvas-header"">
          <h5 class=""offcanvas-title"" id=""info-label"">Offcanvas Bottom</h5>
          <button type=""button"" class=""btn-close text-reset"" data-bs-dismiss=""offcanvas"" aria-label=""Close""></button>
        </div>
        <div class=""offcanvas-body small"">
          ...
        </div>
    </div>
```",,,GeoSot,"
--
@djthorpe pleasecan you provide a codepen example?
--

--
Very interesting. I suspect the already created offcanvas catches the 'click' event and closes itself.

I am pretty sure, is going to be fixed with #33545

Stay in touch please

[Demo codepen](https://codepen.io/GeosSV/pen/yLgpVRJ)
--
",djthorpe,"
--
Yep apologies - here is the example on codepen:

https://codepen.io/djthorpe/pen/vYgeOVo


--
",,,,,,,,
33555,OPEN,offcanvas: don't allow scrolling the page if the viewport is blocked (mobile),v5,2021-04-05 21:40:24 +0000 UTC,korki43,Opened,,"You shouldn't be able to scroll on the page if your entire viewport is blocked by an offcanvas with `scroll=true`. This happens on a lot of mobile devices.

Example: Go to the [offcanvas docs](https://getbootstrap.com/docs/5.0/components/offcanvas/#backdrop), on a mobile phone, in reponsive design mode or with an extremly thin window and open a scrollable offcanvas. You will be able to scroll the page while you're only seeing the offcanvas. If you close the offcanvas you'll be on a different point on the page.
If the offcanvas itself is also scrollable the scrollbars are even weirder ([example](https://codepen.io/korki43/full/BapZePQ)).

This can probably be fixed by checking if the width of offcanvas equals the window width before enabling scrolling.",,,,,,,,,,,,,,
33552,OPEN,Popover hides the button; which is in charge of closing the popover,docs; js; v4,2021-04-07 05:14:03 +0000 UTC,dilyanpalauzov,Opened,,"I make my browser very narrow, as narrow as possible.  Then I load https://getbootstrap.com/docs/4.6/components/popovers/#example and click on “Click to toggle popover”.  The popover appears above the button, so that the button cannot be clicked anymore.  The only way to close the popover is to click the hidden button behind the popover.

This does happen, when I load the page on my phone, which is very narrow.  On the desktop the same happens with Chromium, Firefox, Epiphany (WebKit).

* Permit always to close the popovers, e.g. by not showing them over the button, which closes the popover.",,,,,,,,,,,,,,
33541,OPEN,Border indicating failed input field validation in input group is hidden behind its neighbor element,css; v5,2021-04-04 17:13:04 +0000 UTC,n01337,Opened,,"In contrast to a focused input element, the invalidity indicator border (red by default) is hidden behind its neighboring elements. It would be worthwhile to optionally allow to show this border around the whole input group or otherwise raise its zIndex appropriately.

Applies to the bootstrap v5.0.0-beta3.

[What it looks like](https://imgur.com/oHwTH58)
[How it should look like](https://imgur.com/ly4ufoX)

The images are a combination of an input and a select element put within an input group.",,,korki43,"
--
Example Codepen: https://codepen.io/korki43/pen/ExZmwNr
--

--
The following lines in `mixins/_forms.scss` seem to cause the problem:
https://github.com/twbs/bootstrap/blob/bfafabfd53c330fd341cac97ba07e85abba698ab/scss/mixins/_forms.scss#L135-L140

This was added in #33211 to make the right border of invalid elements in form groups also appear red.

I think reverting #33211 is the best option for now. It violates the [`z-index` scales approach](https://getbootstrap.com/docs/5.0/extend/approach/#z-index-scales) and also doesn't really fix the problem (as you can see in my example with two validated elements).

Ref: #33204 #33211
--
",,,,,,,,,,
33539,OPEN,BS5: Check & Radios Documentation - centering,css; feature; v5,2021-04-09 00:56:17 +0000 UTC,lacutah,In progress,,"**Bootstrap 5 Documentation**

I chased my tail for way to long figuring this out, and figured others could benefit from clarification / example in the docs.

All I wanted to do was visually center a BS-Stylized checkbox.

What's not clear in the documentation is that the class `.form-check` (and it's dependent `.form-check-inline`) class used in almost all the examples only purpose is to provide margin and padding that integrates it into LTR or RTL verticle or horizontal form-control flows - and it prevents you from visually centering the checkbox because of the integrated margins and padding even when using `.form-check-inline`.

I'd love to see an example added for centering (it would have saved me plenty of grief...), here's a starter: [Simple Centering Example](https://codepen.io/Lacutah/pen/yLgMaeM)",,,mdo,"
--
Any interest in opening a PR to add an example to the docs page?
--
",lacutah,"
--
Looks like something I can edit, and it would be really kewl to say I contributed to BS! :P  Gimme a bit (4/15/2021) and I'll pull something together - or consider this confirmation ghosted, LOL.

Is it accurate that it's just editing the one .md file?  bootstrap/site/content/docs/5.0/forms/checks-radios.md 
--
",,,,,,,,
33535,OPEN,offcanvas don't remove events on dispose (trigger js error on document click),confirmed; js; v5,2021-04-09 22:45:24 +0000 UTC,markusilmer,Opened,,"I create and destroy (use `dispose()`) Offcanvas with JS. After destroy i get JS errors on every click

Here is a simple Codepen example
https://codepen.io/maz1989/pen/abppYVL
",,,GeoSot,"
--
Will be fixed with #33545

[Demo codepen](https://codepen.io/GeosSV/pen/GRryNze)
--
",,,,,,,,,,
33532,OPEN,Scope awareness,css; feature,2021-04-04 17:15:57 +0000 UTC,ssimo3lsuhsc,Opened,,"Before opening:

- [Search for duplicate or closed issues](https://github.com/twbs/bootstrap/issues?utf8=%E2%9C%93&q=is%3Aissue)
- Read the [contributing guidelines](https://github.com/twbs/bootstrap/blob/main/.github/CONTRIBUTING.md)

Feature requests must include:

- As much detail as possible for what we should add and why it's important to Bootstrap
- Relevant links to prior art, screenshots, or live demos whenever possible

I'm suprised that nobody has brought this up in the last five years. The rise of content management systems and WordPress has had a profound impact on the development of HTML and CSS, and the very fact that HTML5 had even at one point considered a `<style scoped>` attribute proves that issues of ""polluting the global scope"" are as relevant in CSS as they are in JavaScript, Python, or PHP. I am coining a new term _scope-awareness_ to help the developers of frameworks know how they can solve the problem. Bootstrap, for its part, took a step in the right direction when it started using a framework designed to output CSS. At first this framework was LESS, but today it is SASS. The idea of _scope-awareness_ is that **it should be easy to change the targets of any CSS rule that targets either the `html` or `body` elements by default.** 
I develop a government Web site using WordPress. I'm in charge of only the main content area of the Web site. I want to use Bootstrap CSS for its diverse set of utility classes. I'm also a big fan of Reboot. The trouble is that the CSS selectors `html` and `body` are hard-coded into `_reboot.scss`. As I'm sure you know, Sass does NOT allow `@extend #maincontenti body`.  As such, it is difficult to change the `html` and `body` style rules so that both target the `#maincontenti` element.
How can Bootstrap fix this? Introduce two variables and make their default values `html` and `body`, respectively. And if you want to tell me that if I can compile it, I can also change the hardcoding? That's fine, too. I'll do it for now; I'm just asking that if there are enough votes to store them as variables, then it should be put on the roadmap.

Stuart
",,,mdo,"
--
Could maybe do a Sass variable for the root, but I'm not sure what problems that may cause. If you wanted to give it a try, happy to review any PRs.
--
",,,,,,,,,,
33530,OPEN,Column CSS doesn't override row column default css when row-cols-[breakpoint]-[x] is used.,css; v5,2021-04-04 17:16:17 +0000 UTC,lacutah,In progress,,"**OS:** Windows 10
**Browser:** Chrome, Firefox, Edge latest
**Version:** 5 beta 3

**Area:** Grid
**Apparent Problem:** Column CSS doesn't override row column default css when row-cols-[breakpoint]-[x] is used.
**My Expectation:** Column specific classes should always override row class
**Example:** [CodePen Example](https://codepen.io/Lacutah/pen/NWdddOG)

The current order of CSS appears to be wrong:
```
.row-cols-[x]
.col-[x]
.row-cols-[breakpoint]-[x]
.col-[breakpoint]-[x]
```
I would expect it to be:
```
.row-cols-[x]
.row-cols-[breakpoint]-[x]
.col-[x]
.col-[breakpoint]-[x]
```


",,,mdo,"
--
I don't think we designed them to do allow for that override—it was built as either or, not both. Unsure if we wanna take it this direction and allow that.
--

--
Oh shit, my bad. And I wrote the thing lol. Let's fix it!
--
",lacutah,"
--
The fifth example in the documentation shows it being used that way. And since the example doesn't use a breakpoint it works, so we're getting inconsistent behavior?

https://getbootstrap.com/docs/5.0/layout/grid/#row-columns
```
<div class=""container"">
  <div class=""row row-cols-4"">
    <div class=""col"">Column</div>
    <div class=""col"">Column</div>
    <div class=""col-6"">Column</div>
    <div class=""col"">Column</div>
  </div>
</div>
```
--

--
I did notice that the documentation doesn't explicitly say cols should overwrite the row ""shortcuts"" - but **it seems the documentation should be made explicitly clear** (and it follows order of specificity in my head!) if this is fixed. 

In the existing documentation the closest I could find: 
_Whereas normal .col-* classes apply to the individual columns (e.g., .col-md-4), the row columns classes are set on the parent .row as a shortcut._

My first bug here - but been (consuming) bootstrap for awhile - wasn't sure if this was a bug or if I wasn't understanding or if there was some other reason it wasn't working consistently.
--
",ffoodd,"
--
There's at least some confusion in the docs, I agree.

The part you're quoting implicitly talks about specificity though: targetting the element itself (single class) or the parent (at least a class and a selector). The latter wins.

Needs to be made clearer in the docs, not sure either those should work together.
--
",,,,,,
33528,OPEN,Expandable button always announced as collapsed by Narrator,accessibility,2021-04-04 17:16:30 +0000 UTC,HeiglCorp,Opened,,"Hi,

I am using Narrator on Windows 10. I noticed the collapsible button component on https://getbootstrap.com/docs/4.0/components/dropdowns/#single-button-dropdowns is 
- always announcing button as being collapsed despite being expanded
- announces ""Dropdown Button Collapsed has popup"" twice when clicking on it for the first time after page load

I was wondering if there is a way for me to fix this when using this component or if it is a general issue in the library.

Thanks,
Dominik",,,,,,,,,,,,,,
33509,OPEN,Mistake in the Documentation for tab shown event.,docs; js; v5,2021-04-07 05:23:24 +0000 UTC,iaroslavglodov,Opened,,"At the end of the [Navbar documentation](https://github.com/twbs/bootstrap/edit/main/site/content/docs/5.0/components/navs-tabs.md), there is an example of weird behavior. When using the same code only the first tab event is treigerring. If using as `tabEl` parent `<ul>` element it works as expected.

```js
var tabEl = document.querySelector('button[data-bs-toggle=""tab""]')
tabEl.addEventListener('shown.bs.tab', function (event) {
  event.target // newly activated tab
  event.relatedTarget // previous active tab
})
```

—— macOS 11.2.3, Chrome Version 89.0.4389.90 (Official Build) (arm64)",,,,,,,,,,,,,,
33491,OPEN,V5 Offcanvas - Option to disable auto hide when offcanvas loses focus.,feature; js; v5,2021-04-09 23:03:01 +0000 UTC,scoizzle,In progress,,"Currently in v5.0.0-beta 3:

Offcanvas will autohide when it loses focus. IE you click anywhere other than the offcanvas area.

What I'm suggesting:

Add data-bs-autohide boolean value to config options for Offcanvas.
Default for data-bs-autohide is true; to maintain existing compatibility.

Disable event registration for EVENT_CLICK_DISMISS when data-bs-autohide is set to false.

Alternatively, to allow changing of this property via the data attribute, allow the event to still be registered, but change the event handler to respect the autohide property.

Examples of the modifications required to implement change follow.

`
const Default = {
  backdrop: true,
  keyboard: true,
  scroll: false,
  autohide: true
}

const DefaultType = {
  backdrop: 'boolean',
  keyboard: 'boolean',
  scroll: 'boolean',
  autohide: 'boolean'
}
`

`
      if (!this._config.autohide) {
        EventHandler.on(this._element, EVENT_CLICK_DISMISS, SELECTOR_DATA_DISMISS, () => this.hide())
      }
`",,,iainhallam,"
--
If I understand what's being proposed, would this allow the offcanvas to be used more as a drawer in the user interface? The Material UI guidelines have drawer as a component that can be on-screen all the time:

https://material.io/components/navigation-drawer#standard-drawer
--
",scoizzle,"
--
Yes, that is precisely what I am suggesting.
--
",GeoSot,"
--
It is a valid feature. 
We will try to take it into consideration or you may do a PR,
However keep it for now, till #33545 is merged. I will have it in mind too
--
",,,,,,
33481,OPEN,V5 beta3 - deselecting button group checkbox on ios safari doesn't work.,css; v5,2021-03-29 15:19:06 +0000 UTC,alexgodin,In progress,,"On any mobile browser (I just checked in latest iPhone Chrome on iPhone SE 2020) deselecting a checkbox inside a button group doesn't deselect until you re-select another component. We also see this on Android.

To reproduce open this codepen on an iPhone: https://codepen.io/alexgodin/details/gOgPRpL Select an option and then try to deselect it.",,,rohit2sharma95,"
--
That is unselected in real, just the color is there because of the hover rule. :thinking:
And when you click somewhere else, that color is removed because the hovered style are removed then.

/CC @patrickhlauke
--
",patrickhlauke,"
--
@rohit2sharma95 indeed. see also https://github.com/twbs/bootstrap/issues/31149
--

--
i wouldn't rely on `hover` queries https://css-tricks.com/interaction-media-features-and-their-potential-for-incorrect-assumptions/

might be worth tweaking/patching the core styles to just suppress the hover and possibly focus background change altogether.
--
",alexgodin,"
--
Hey! I'm looking for a workaround in the interim. Will a pure css fix like this work?

```
@media (hover: none) {
  div:hover { background-color: inherit; }
}
```

Or is there something else I should do?
--
",,,,,,
33480,OPEN,V5 Alerts Component : Add the icon space,docs; feature,2021-03-30 05:10:13 +0000 UTC,devhoussam,In progress,,"**[Live Example](https://codepen.io/pen/define/)** 

![Image](https://i.imgur.com/Aq0cCVa.png)
",,,rohit2sharma95,"
--
Your example link is not working, can you please create a reduced test case via [CodePen](https://codepen.io/) or [JS Bin](https://jsbin.com/) and report back with your link, Bootstrap version, and specific browser and Operating System details. :slightly_smiling_face: 
--
",devhoussam,"
--
thank you but I already push a PR about this feature **[#33485](https://github.com/twbs/bootstrap/pull/33485)**

Live Preview : https://codepen.io/themes4all/pen/rNjeORE
--
",,,,,,,,
33469,OPEN,"Reset inside a Dialog does not work if data-dismiss=""modal"" is set.",awaiting-reply; js; v5,2021-04-07 05:17:30 +0000 UTC,meduzapat,Opened,,"Hello, I found an issue when using the reset form button inside a Dialog.
If the button does reset and dismissal by using data-dismiss=""modal"", the dialogs close fine but the form is never reset.

Test case on codepen: https://codepen.io/meduzapat/pen/LYxpGNe

I added 3 buttons, normal close, reset and close, and my work around: reset and js close.

Tested on:
Chrome OS, Linux: Firefox 86.0.1 (64-bit) and chrome Version 89.0.4389.90 (Official Build) (64-bit) an Windows.
",,,rohit2sharma95,"
--
It's because the default behavior is prevented in the hide method:
https://github.com/twbs/bootstrap/blob/232e392c9126fcb1dbe13c963e7edcdbd62cfeb8/js/src/modal.js#L151-L154

And the default behavior is being prevented intentionally here. (Like clicking anchor tag updates the route)

/CC @twbs/js-review
--
",,,,,,,,,,
33463,OPEN,Tooltip placement does not work with a parent container has overflow: auto or overflow: scroll,awaiting-reply; js; v5,2021-04-01 12:30:11 +0000 UTC,KeenthemesHub,Opened,,The tooltip placement does not work with a parent container has overflow: auto or overflow: scroll.  boundary: 'window' did not help either.,,,GeoSot,"
--
@KeenthemesHub can you provide an example replicating the problem using codepen?
--
",amarinediary,"
--
@GeoSot I can confirm the issue. As @KeenthemesHub isn't answering I will takeover this bug report.

If the parent container is set to x/y `overflox:scroll`  or x/y `overflow:hidden;`, the `data-bs-placement` will be ignored and fallback to default `auto` placement.

As per Bootstrap website documentation about tooltips: 
> Overflow auto and scroll
> ---
> Tooltip position attempts to automatically change when a parent container has `overflow: auto` or `overflow: scroll` like our `.table-responsive`, but still keeps the original placement’s positioning. To resolve, set the boundary option to anything other than default value, `'scrollParent'`, such as `'window'`:
- Source @ https://getbootstrap.com/docs/5.0/components/tooltips/#usage

Specifying `data-bs-boundary=""window""` won't work and the tooltip will still remain in default auto state.

On the following default case I have reproduced the issue i'm experiencing. `data-bs-boundary=""window""` as been set, and even so, the tooltip still show either at the top or bottom position event tho `data-bs-placement=""right`.
[Here is a reduced test case](https://codepen.io/amarinediary/pen/wvggqZq)
___
- macOS Mojave version 10.14.3 (18D109)
- Chrome version 89.0.4389.90 (Official Build) (x86_64)
- Bootstrap version 5.0.0-beta3
--
",,,,,,,,
33457,OPEN,offcanvas Toggle doesn't trigger if it has image inside (Event doesn't bubble?),confirmed; js; v5,2021-04-06 16:20:41 +0000 UTC,Kloptoe,In progress,,"Toggle being picky on whats it on https://gyazo.com/99dca53751898f9714f8347ecafc0ffa

you cannot use images as a trigger it needs text to work......",,,mdo,"
--
You have to share a live demo, videos don't help us.
--
",Kloptoe,"
--
@mdo https://codepen.io/KT_NETWORK/pen/BapNKMJ
--
",dernst,"
--
I had the same problem when using icons in the toggle button. As workaround you can add `data-bs-target` to the element inside the toggle-button/toggle-link also. For your codepen example you have to add `data-bs-target=""#user-sidebar""` to your `img` element. For me it worked this way.
--
",webglisten,"
--
Only text triggers working properly, font icons, svg, img are not working as triggers. here is an example: https://mis.gumatech.com/

if you click on the icon it won't open but if you click on the padding of the button it will work.
--
",GeoSot,"
--
I think we have problem with eventHandler here :/
--
",Ri,"
--
Hi!
I came across this issue myself and was in a hurry, so I recompiled the JS with this pull request. However, now I find the offcanvas always works the first time. If I close the offcanvas by clicking on the backdrop it continues to work, however if I use the X to close, it won't reopen at all, even on the padding. I don't know if that's useful at all or if I've just jumped the gun, but I thought I'd mention it.

> I had the same problem when using icons in the toggle button. As workaround you can add `data-bs-target` to the element inside the toggle-button/toggle-link also. For your codepen example you have to add `data-bs-target=""#user-sidebar""` to your `img` element. For me it worked this way.

I can also confirm this workaround is semi-functional. Using an SVG you must also put it on each `<path>` otherwise certain clicked areas won't function.
--
"
33447,OPEN,Fade offcanvas backdrop,feature; js; v5,2021-04-07 05:16:40 +0000 UTC,fulldecent,Opened,,"An example of offcanvas shown with backdrop is at https://getbootstrap.com/docs/5.0/components/offcanvas/#live-demo

Currently, the backdrop is shown without animation. Plotting opacity over time, this is the step function:

```ascii-line-graph
_________----------
```

Please consider a fade-in/fade-out to make the change less harsh.",,,,,,,,,,,,,,
33441,OPEN,V5 Utilities : Add border-style-hidden,feature,2021-03-23 13:22:07 +0000 UTC,devhoussam,Opened,,"**It's a commonly used setting for tables without outer borders**

```
table {
     border-collapse: collapse;
     border-style: hidden;
}
 table td, table th {
     border: 1px solid black;
}
```

**References :** 

https://stackoverflow.com/questions/1257430/how-can-i-apply-a-border-only-inside-a-table
https://developer.mozilla.org/en-US/docs/Web/CSS/border-style
https://getbootstrap.com/docs/5.0/utilities/borders/

**The Utility :**

```
.border-hidden {
     border-style: hidden;
}
```",,,,,,,,,,,,,,
33423,OPEN,color-contrast() coming in CSS,css; v5,2021-03-22 08:12:26 +0000 UTC,ffoodd,Opened,,"Still a draft but supported in some browsers (ATM Safari TP), [`color-contrast()` CSS function](https://drafts.csswg.org/css-color-5/#colorcontrast) will conflict with our internal function using the same name.

Here're a few demos around it:
- [Dave Rupert's one](https://twitter.com/davatron5000/status/1372973144131186689)
- [Adam Argyle's ones](https://twitter.com/argyleink/status/1372634187866378243)

Not sure what issue could appear but definetely something to keep an eye on.  If we manage to use the exact same signature, it might ensure to workaround any trouble.",,,,,,,,,,,,,,
33412,OPEN,New color maps and functions (v5),feature,2021-03-22 09:55:20 +0000 UTC,WinterSilence,Opened,,"New color maps:
~~~scss
// Color maps

$blues: (
  ""100"": $blue-100,
  ""200"": $blue-200,
  ""300"": $blue-300,
  ""400"": $blue-400,
  ""500"": $blue-500,
  ""600"": $blue-600,
  ""700"": $blue-700,
  ""800"": $blue-800,
  ""900"": $blue-900
) !default;
$indigos: (
  ""100"": $indigo-100,
  ""200"": $indigo-200,
  ""300"": $indigo-300,
  ""400"": $indigo-400,
  ""500"": $indigo-500,
  ""600"": $indigo-600,
  ""700"": $indigo-700,
  ""800"": $indigo-800,
  ""900"": $indigo-900
) !default;
$purples: (
  ""100"": $purple-100,
  ""200"": $purple-200,
  ""300"": $purple-300,
  ""400"": $purple-400,
  ""500"": $purple-500,
  ""600"": $purple-600,
  ""700"": $purple-700,
  ""800"": $purple-800,
  ""900"": $purple-900
) !default;
$pinks: (
  ""100"": $pink-100,
  ""200"": $pink-200,
  ""300"": $pink-300,
  ""400"": $pink-400,
  ""500"": $pink-500,
  ""600"": $pink-600,
  ""700"": $pink-700,
  ""800"": $pink-800,
  ""900"": $pink-900
) !default;
$reds: (
  ""100"": $red-100,
  ""200"": $red-200,
  ""300"": $red-300,
  ""400"": $red-400,
  ""500"": $red-500,
  ""600"": $red-600,
  ""700"": $red-700,
  ""800"": $red-800,
  ""900"": $red-900
) !default;
$oranges: (
  ""100"": $orange-100,
  ""200"": $orange-200,
  ""300"": $orange-300,
  ""400"": $orange-400,
  ""500"": $orange-500,
  ""600"": $orange-600,
  ""700"": $orange-700,
  ""800"": $orange-800,
  ""900"": $orange-900
) !default;
$yellows: (
  ""100"": $yellow-100,
  ""200"": $yellow-200,
  ""300"": $yellow-300,
  ""400"": $yellow-400,
  ""500"": $yellow-500,
  ""600"": $yellow-600,
  ""700"": $yellow-700,
  ""800"": $yellow-800,
  ""900"": $yellow-900
) !default;
$greens: (
  ""100"": $green-100,
  ""200"": $green-200,
  ""300"": $green-300,
  ""400"": $green-400,
  ""500"": $green-500,
  ""600"": $green-600,
  ""700"": $green-700,
  ""800"": $green-800,
  ""900"": $green-900
) !default;
$teals: (
  ""100"": $teal-100,
  ""200"": $teal-200,
  ""300"": $teal-300,
  ""400"": $teal-400,
  ""500"": $teal-500,
  ""600"": $teal-600,
  ""700"": $teal-700,
  ""800"": $teal-800,
  ""900"": $teal-900
) !default;
$cyans: (
  ""100"": $cyan-100,
  ""200"": $cyan-200,
  ""300"": $cyan-300,
  ""400"": $cyan-400,
  ""500"": $cyan-500,
  ""600"": $cyan-600,
  ""700"": $cyan-700,
  ""800"": $cyan-800,
  ""900"": $cyan-900
) !default;

$color-maps: (
  ""blue"": $blues,
  ""indigo"": $indigos,
  ""purple"": $purples,
  ""pink"": $pinks,
  ""red"": $reds,
  ""orange"": $oranges,
  ""yellow"": $yellows,
  ""green"": $greens,
  ""teal"": $teals,
  ""cyan"": $cyans,
  ""gray"": $grays
) !default;
~~~
New color functions:
~~~scss
// Returns color from map.
//
// Example: `color: get-color(""blue"", ""300""); background-color: get-color(""green"", 4);`
//
// @param {string} $color Color name (""red"", ""gray"")
// @param {string|number} $index Color index (""900"", 900 or 9)
// @param {map} $color-maps Map of color maps
// @return {color|null} Color or null
@function get-color($color, $index: ""500"", $maps: $color-maps) {
  @if type-of($index) != string {
    $index: quote(if ($index < 10, $index * 100, $index));
  }
  @return if (
      map-has-key($maps, $color, $index),
      map-get($maps, $color, $index),
      null
  );
}

// Replaces/sets color and returns updated map.
//
// Example: `$color-maps: set-color(""green"", ""500"", #0d9d1d);`
//
// @param {string} $color Color name (""red"", ""green"")
// @param {string|number} $index Color index (""900"", 900 or 9)
// @param {color} $value New value (#eee, #eeeeee or gray)
// @param {map} $maps Map of color maps
// @return {map} New map
@function set-color($color, $index, $value, $maps: $color-maps) {
  @if type-of($index) != string {
    $index: quote(if ($index < 10, $index * 100, $index));
  }
  $map: map-merge(map-get($maps, $color), ($index: $value));
  @return map-merge($maps, ($color: $map));
}

// Return shade/tint color.
//
// @param {color} $color Base color
// @param {number} $percentage Shade/tint %
// @param {color} $color-contrast-light White color
// @return {color}
@function calc-color($color, $percentage: 20%, $color-contrast-light: #fff) {
  @return if(
    color-contrast($color) == $color-contrast-light,
    shade-color($color, $percentage),
    tint-color($color, $percentage)
  )
}
~~~
and  api utilities as mixins :)

If we replace colors in variables to `get-color()`, we can set new colors by `set-color()` without any problems.",,,,,,,,,,,,,,
33393,OPEN,Automatically publish a nightly or weekly pre-release,feature; help wanted; meta,2021-03-28 20:24:50 +0000 UTC,mdo,In progress,,"There are some nice Actions out there that could help us do this, but my intent is to encourage others to help us test our builds more regularly, helping us to land important changes and communicate what we're working on. Would love if someone wanted to jump in and help us by drafting something or stirring the conversation.

---

**More thoughts:**

- Using same prelease name or tag could be nice? Something like Chrome's `canary`? `nightly`, `weekly`, or `preview` also could work...
- I think this would only really apply to v5 and our `main` branch.
- Automating the changelog and publishing on a cron job feels straightforward enough?",,,korki43,"
--
@mdo should the build be published to npm as well, or only as a github pre-release?
--

--
I did a bit of research and it seems like `release-drafter` can not be run in scheduled github actions (release-drafter/release-drafter#783). So we would need to get the changelog from the drafted release. (Or switch to another changelog generator.)
--

--
@whizzsfe I'm totally with you.
I think it would attract more people to test the nightly version if it was released directly on npm. It's way more comfortable to just install it with npm and have it integrate with all the other modules, than to build the whole project yourself or download it from the releases. 
--
",mdo,"
--
Maybe just GitHub? Unless we use the same tag over and over again... not 100% sure.
--
",whizzsfe,"
--
I don't see using the same tag over again. It would make issue tracking hard....
Then again I just use a plain _git pull_ to get current changes.
--
",,,,,,
33387,OPEN,Responsive classes for offcanvas,feature,2021-03-16 23:38:10 +0000 UTC,iainhallam,Opened,,"I've got a sidebar down my page that I'd like to move into an offcanvas (looking forward to the full release of v5 to use that), but I'd like it to be ""oncanvas"" when the page is above a certain width (as a part of the page, rather than overlaid like a shown offcanvas). For an example, see the current version of Slack via the web - as you shrink the window the sidebar becomes an offcanvas element with a button to show it.

![Slack-bar-oncanvas](https://user-images.githubusercontent.com/282030/111393269-54ccb500-86b0-11eb-8123-4918922b417b.png)
> _Sidebar shown on the page_

![Slack-bar-offcanvas](https://user-images.githubusercontent.com/282030/111393278-58603c00-86b0-11eb-9957-dc1fe37c5993.png)
> _Sidebar moves to offcanvas, with toggle button in the header_

I'm imagining something like the existing responsive classes in Bootstrap would be a possible way of using this: `offcanvas`, `offcanvas-sm`, ..., `offcanvas-xxl`. When used with a breakpoint, the element would only have the offcanvas styles applied below the breakpoint.",,,,,,,,,,,,,,
33370,OPEN,Scrolling breaks when switching a modal window,,2021-03-29 12:02:34 +0000 UTC,Mrreadiness,In progress,,"Bootstrap v5.0.0-beta.

Sample code:

```
currentModal.hide ();
newModal.show ();
```

The windows change, but instead of `<body class = ""modal-open"">` we get
`<body class>`",,,GeoSot,"
--
Hey Mrreadiness,
My draft trial, doesn't agree.

![Capture](https://user-images.githubusercontent.com/22406063/111219884-2cc25080-85e1-11eb-9336-1e37697ebd6b.PNG)

Can you provide a sample code that replicates the issue?
(Please correct me, if I am doing something wrong)
--
",Mrreadiness,"
--
Hey! Inside the auth modale, the button that should change the modal.
Through attributes:
```
<a type = ""button"" class = ""text-decoration-none"" data-bs-dismiss = ""modal"" data-bs-toggle = ""modal""
data-bs-target = ""# modalRestore""> Recover password </a>
```

Or via JS:
`<a type=""button"" id=""restorePassBtn""> Restore password</a>`
```

var authModal = new bootstrap.Modal (document.getElementById ('modalAuth'));
var restoreModal = new bootstrap.Modal (document.getElementById ('modalRestore'));

var restoreBtn = document.querySelector (""#restorePassBtn"");

restoreBtn.addEventListener (""click"", function () {
     authModal.hide ();
     restoreModal.show ();
})
```
--

--
Thanks, @Moosjon! I haven't seen this place in the documentation before. A great example of a bug. 
--
",Moosjon,"
--
@GeoSot : I think the problem here is that when toggling modal windows the scrollbar becomes visible instead of remaining hidden.

See https://getbootstrap.com/docs/5.0/components/modal/#toggle-between-modals

Click ""Open first modal"": scrollbar is **hidden**.
Click ""Open second modal"": scrollbar is **visible**.
Click ""Back to first"": scrollbar is **visible**.

The body class ""modal-open"" seems to disappear when toggling these modals.
And I think that's the problem described here.
--
",Jacquesvw,"
--
Was about to report this issue as well.
--
",,,,
33359,OPEN,Switch states not visible in High Contrast Mode,css; v4,2021-03-25 09:11:53 +0000 UTC,softwarea,In progress,,"Bootstrap 4.6:
The states of a simple switch are not visible in Windows High Contrast Mode.

I used the following code from the documentation and enabled the High Contrast Mode with [Left-Alt]+[Left-Shift]+[Print].
```
<div class=""custom-control custom-switch"">
  <input type=""checkbox"" class=""custom-control-input"" id=""customSwitch1"">
  <label class=""custom-control-label"" for=""customSwitch1"">Toggle this switch element</label>
</div>
```
The toggle indicator is not visible.

Here is a [CodePen](https://codepen.io/softwarea/pen/YzpgjRx) sample.

I believe this is a bug? Anybody knows a quick workaround?
",,,alpadev,"
--
You're right that this needs to be addressed. As a workaround, to make color adjustments work you either have to use `forced-color-adjust: none;` (not really [supported](https://caniuse.com/?search=forced-color-adjust)) or use valid colors from the system palette https://www.w3.org/TR/css-color-4/#css-system-colors.

Leaving this as a reference here: https://blogs.windows.com/msedgedev/2020/09/17/styling-for-windows-high-contrast-with-new-standards-for-forced-colors/
--

--
@softwarea not sure about the roadmap - looks like in v5 the active state is working at least.

Custom range slider in v4.6/v5 are not visible in high contrast mode too.

cc @XhmikosR @patrickhlauke 
--

--
@ffoodd 

![image](https://user-images.githubusercontent.com/2838324/111774653-0d147c00-88b0-11eb-9078-817be0288042.png)

![image](https://user-images.githubusercontent.com/2838324/111774665-0f76d600-88b0-11eb-8279-294472eb51c8.png)

In v5 the situation is somewhat better because you can see the checked state
![image](https://user-images.githubusercontent.com/2838324/111775264-d12de680-88b0-11eb-851e-f57352cdd7b1.png)

Range sliders are invsible like in v4
--
",softwarea,"
--
Ok, thank you alpadev. I wasn' sure if this is a Bootstrap bug or Browser issue. Do you think this will be fixed in 4.6? Or in 5.x?
--
",XhmikosR,"
--
Personally, this is not something I can fix on v4. PRs are welcome if someone wants to fix the issue and doesn't cause any regressions, but v4 needs to be as stable as possible at this point.
--
",ffoodd,"
--
Would you mind providing screenshots, please? Could help to see what happens, for non Windows user. :)

Using system colors could help but should be scoped to high-contrast media queries, and support is not so great. Workaround would be using `border`s alongside `background`—which is the solution [suggested by Adrian Roselli on his ""Under-engineered toggles"" post](https://adrianroselli.com/2019/03/under-engineered-toggles.html) (in which he also enhances support using the high-contrast media query, too).
--
",,,,
33357,OPEN,Missed notice: _root.scss is required,docs; v5,2021-04-05 06:07:55 +0000 UTC,WinterSilence,In progress,,"In documentation not written that `_root.scss` is required. Also, removing ` @import ""root"";` from `bootstrap.scss` not generate warning/notice about it.",,,mdo,"
--
It recompiles fine for me without it included. What error do you see with our npm scripts?
--

--
We don’t label this as required anywhere in Bootstrap proper, that comment is only in the npm starter project, so closing this out.
--
",WinterSilence,"
--
@mdo 
>It recompiles fine for me without it included.

This file required because this vars used in other files.
--

--
@ffoodd 
> Custom properties (sometimes referred to as CSS variables or cascading variables)

get by `var()`? then it's variables =)
--

--
@ffoodd yes, only  custom properties _defines by SASS variables_
--

--
@ffoodd all right, some SASS values defines by CSS custom properties, removing file have ""backside"" effect.
--

--
@ffoodd i think need something like this:
~~~scss
// `scss/_root.scss`:
...
$root-custom-properties: true;
@function root-css-var($name) {
  @if global-variable-exists(""root-custom-properties"") {
      @return ""var(--#{$name})"";
  }
  @error ""File 'scss/_root.scss' not required."";
}
~~~
~~~scss
// `scss/_*.scss`
$a: root-css-var(""gradient"");
~~~
--
",ffoodd,"
--
@mdo Not a compilation issue, ""variable"" stands for custom properties here 🙂
--

--
Well, in our root file you only have custom properties 😉 And this intended to clarify the issue for others.
--

--
This file is not required on the Sass side, you wouldn't be able to compile otherwise. What's missing in our docs is that this file is required for e.g. our reboot which uses font related custom props.
--

--
@mdo If I'm right, this is the issue: if we don't include the root files, some of our custom properties won't be set (font families mostly).

It's not required on the Sass side but it is on the CSS one.
--
",,,,,,
33345,OPEN,Docs for the collapse component do not include example for data-bs-parent,docs; v5,2021-03-12 21:44:30 +0000 UTC,danielkauffman,In progress,,"The [v5 docs for the collapse component](https://getbootstrap.com/docs/5.0/components/collapse/#via-data-attributes) state:

> To add accordion-like group management to a collapsible area, add the data attribute data-bs-parent=""#selector"". Refer to the demo to see this in action.

However, the example on that page does not show how to use the `data-bs-parent` attribute.

The [example from the v4 docs](https://getbootstrap.com/docs/4.6/components/collapse/#accordion-example) shows how to use the `data-parent` attribute to get accordion-like group management.

The `data-bs-parent` attribute works in v5, but I had to parse the docs for v4 in order to figure out how to use it.

I'm doing accordion-like group management, but not wanting the accordion markup, so using collapse with the `data-bs-parent` attribute works perfectly for me.

This appears to be a regression arising from moving the accordion to a separate section in the docs. Ideally, I think the v5 docs for the collapse component should have an example showing the use of the `data-bs-parent` attribute and the v5 docs for the accordion component should describe the `data-bs-parent` attribute as critical for accordion behavior.

See also #33214.",,,mdo,"
--
Down to see additional examples for just about any component :). If you have a snippet you've put together for v5, would you mind opening a PR for it? Happy to help see it over the finish line.
--
",danielkauffman,"
--
@mdo Awesome. Like so? It's my first contribution to Bootstrap so I might have missed something. :-)
--
",,,,,,,,
33338,OPEN,BS website search that saves results,docs; help wanted,2021-03-19 19:18:35 +0000 UTC,nathan-daugherty,Opened,,"This isn't related to Bootstrap code, but to the documentation website, so I apologize if this isn't the right place to submit that kind of feature request.

The search can be cumbersome because you type in a topic like ""Lists"" and multiple results show without any distinction. Click one and find it's not the one you want, so you have to re-type ""lists."" What is a better user experience in my opinion is to somehow save the search so you can just go back to see the results and click on another one.
",,,alpadev,"
--
@mdo The next version of DocSearch (currently [alpha](https://github.com/algolia/docsearch/tree/next) - [documentation](https://autocomplete-experimental.netlify.app/docs/docsearch-js/)) features recently searched items.

![image](https://user-images.githubusercontent.com/2838324/111249998-df5bd880-860c-11eb-8f41-b4b12c135416.png)

As a workaround for the current version we could open links in a new tab (maybe not the best but simpliest thing to do). Alternatively save the search value in the local storage or manipulate the url e.g. `...?search=value` and make docsearch aware of that. 

Not sure whats the best thing to do. AFAICT there are already some projects using it e.g. those based on [Docusaurus 2](https://v2.docusaurus.io/showcase)
--
",XhmikosR,"
--
I think the best solution would be moving the new docsearch versions as soon as it's stable. Right now we do have custom styles, so we'd need to adapt our docs to drop any no-longer needed stuff.

--
",mdo,"
--
Agreed on the next stable Algolia version.
--
",,,,,,
33336,OPEN,V5 Tabs Component : Add Scrollable Tabs,feature,2021-03-11 10:24:53 +0000 UTC,devhoussam,Opened,,https://codesandbox.io/s/n5uch,,,,,,,,,,,,,,
33324,OPEN,Modal data-bs-dismiss and data-bs-target,feature; js,2021-03-12 18:54:20 +0000 UTC,ray73864,Opened,,"Currently modals support a 'data-bs-target' with the 'data-bs-toggle' attribute, that way if you have a 'data-bs-toggle' of 'Modal' it knows which Modal to actually open.

I would love to see 'data-bs-dismiss' also support a 'data-bs-target' attribute if one is present.

Right now, I am free to open a modal, then while that modal is being displayed, open another one and have the new one on top, which is great for at work, in my case, modalOne is for adding a not on file part number to a customer quote, and modalTwo is for a markup calculator that modalOne can open (This is for our stores), I used to do all this using Bootbox, but since moving to BS5 for all my new stuff and completely dropping jQuery, I can't use Bootbox anymore.

The problem is that if you close modalTwo, it also closes modalOne, so what I have done is when modalTwo opens, I add a custom event to the btn-close (I removed 'data-bs-dismiss' from the button) and also overrode the 'escape' key, in both instances when you click the 'X' on modalTwo or press escape, it closes only modalTwo and takes you back to the correct field on modalOne.

If there was a 'data-bs-target' available for 'data-bs-dismiss', then I could tell it which modal it is to close.

Hopefully that all makes sense.
",,,,,,,,,,,,,,
33320,OPEN,V5 Utilities : Add Border Opacity,feature,2021-03-09 14:46:34 +0000 UTC,devhoussam,Opened,,"**Why Border Opacity?**

> The Border Opacity Utilities for controlling the opacity of an element's border color.

**Border Color Changes :**

```
.border-primary {
  --bs-border-opacity: 1;
  border-color: rgba(13, 110, 253, var(--bs-border-opacity))
}

.border-indigo {
  --bs-border-opacity: 1;
  border-color: rgba(102, 16, 242, var(--bs-border-opacity))
}

.border-purple {
  --bs-border-opacity: 1;
  border-color: rgba(111, 66, 193, var(--bs-border-opacity))
}
...
```

**Border Opacity Example :**

```
.border-opacity-0 {
  --bs-border-opacity: 0
}

.border-opacity-5 {
  --bs-border-opacity: 0.05
}

.border-opacity-10 {
  --bs-border-opacity: 0.1
}

.border-opacity-20 {
  --bs-border-opacity: 0.2
}

.border-opacity-25 {
  --bs-border-opacity: 0.25
}
...
```

> The same thing is supported by Tailwind CSS V2.03

https://tailwindcss.com/docs/border-color
https://tailwindcss.com/docs/border-opacity


",,,,,,,,,,,,,,
33309,OPEN,V5 Dropdowns : Add the scrollbar possibility when dropdown menu contains many items,feature,2021-03-09 12:28:55 +0000 UTC,devhoussam,In progress,,"**Something similar to this class :**

`.dropdown-menu-scrollable { ... }`",,,blakej115,"
--
I think it is unnecessary to add an additional class for this. You can use the `overflow-auto` class along with setting a height and/or max-height on your dropdown.

```
<ul class=""dropdown-menu overflow-auto"" style=""max-height: 200px;"" aria-labelledby=""dropdownMenuButton1"">
    ...
</ul>
```

See working example on [CodePen](https://codepen.io/Blakej115/pen/VwmEqpZ).
--
",devhoussam,"
--
> I think it is unnecessary to add an additional class for this. You can use the `overflow-auto` class along with setting a height and/or max-height on your dropdown.
> 
> ```
> <ul class=""dropdown-menu overflow-auto"" style=""max-height: 200px;"" aria-labelledby=""dropdownMenuButton1"">
>     ...
> </ul>
> ```
> 
> See working example on [CodePen](https://codepen.io/Blakej115/pen/VwmEqpZ).

I know but it will be more efficient if there is a dropdown class to do this the same thing is exist for **[modals](https://getbootstrap.com/docs/5.0/components/modal/#scrolling-long-content)**
--
",,,,,,,,
33285,OPEN,V5 Add Lighten Buttons,feature,2021-03-06 10:55:48 +0000 UTC,devhoussam,Opened,,"It will be similar like this example :

![Image](https://i.imgur.com/knznIcS.png)


```
<button type=""button"" class=""btn btn-lighten-primary"">Lighten Primary</button>
<button type=""button"" class=""btn btn-lighten-secondary"">Lighten Secondary</button>
<button type=""button"" class=""btn btn-lighten-success"">Lighten Success</button>
<button type=""button"" class=""btn btn-lighten-danger"">Lighten Danger</button>
<button type=""button"" class=""btn btn-lighten-warning"">Lighten Warning</button>
<button type=""button"" class=""btn btn-lighten-info"">Lighten Info</button>
```",,,,,,,,,,,,,,
33275,OPEN,Carousel data-ride / data-interval / data-pause bugs,,2021-03-11 01:30:34 +0000 UTC,epignosis567,In progress,,"Hi. I spent several hours testing different Bootstrap 4.5 carousel options configuration because I thought I sensed a bug and this is what I've found:

The behavior of the “default” values of data-ride and data-interval often result in different behavior if those “default” values are entered manually.

I’ve indicated after each result whether or not it conforms to the expected behavior according to the defaults as stated in the docs. 
OK = functions as expected
X? = does not function as expected

If no **data-ride / data-interval / pause** is present
then according to the docs the defaults are 
**data-ride=“false” data-interval=“5000” pause=“hover”**
RESULTS
carousel will not start on its own - OK
carousel will continue once started - X?
(I assume the data-interval default is overriding the data-ride value, even though this isn't made clear in the docs.)

For all of the following tests I set **pause=“false”** 
meaning that the focus/mouse location should have no effect on whether or not the carousel advances

**data-ride=""carousel"" + data-interval=""false""**
will not start on its own - X? 
will not continue once started - X?
(I again assume that data-interval=""false"" is preventing carousel from starting/advancing, overriding the data-ride setting.)

**data-ride=“false” (with default data-interval=“5000”)**
will not start on its own - OK
will continue once started - X?
(Contradicts previous test where the data-interval value overrides the data-ride value)

**data-ride=“false” + data-interval=“1000”** 
will not start on its own - OK 
will continue once started AND pause on hover - X?
(Contradicts previous test where the data-interval value overrides the data-ride value _AND_ causes a pausing error)


So the question seems to be, does the data-interval value override the data-ride setting, because sometimes it does and sometimes it doesn't.
And additionally, what's up with that weird pause error?

(I'm especially interested because while these questions are important on their own, putting a carousel inside of a modal DEFINITELY has it's own weird bugs that arise, so I'm hoping to get an answer on this first, and then start working on the carousel inside of a modal issues, which are my real concern.)

macOS 10.15.6
Chrome 89.0.4389.72",,,epignosis567,"
--
Bump?
--

--
Thanks. Learning how to code and just starting to file github issues, didn't know the appropriate bump time frame.

Still not understanding why sometimes 'data-interval' overrides the 'data-ride' setting and sometimes it doesn't. But the main problem is that weird pause error, maybe it's a problem somewhere in my file, or maybe it's a bug. I uploaded the file to github so others can test but it seems pretty straight forward to me. Like I said I'm still learning though. 
--
",alpadev,"
--
From what I can tell `data-ride=""carousel""` is only used to decide if the carousel should cycle automatically (if `data-interval` isn't set to false) after the page loads. It has no effect once the carousel got started.

Pretty much as is described in the documentation:
> Autoplays the carousel after the user manually cycles the first item. If set to 'carousel', autoplays the carousel on load.

The naming is a bit misleading maybe. 

To prevent auto-cycling you use `data-interval=""false""`.

Btw. ""Bump?"" after 3 days already rather makes me want to ignore your question.. 🙄 This is open source where you either contibute to solve problems or got patience.
--

--
Well we do this for fun and in our spare time so maybe you should lower your expectations.. And I can guarantee you there are people on this project who take care it's not lost somewhere.

Again `data-ride` only has the effect of kicking off the cycle automatically after the page loads. Once it got started `data-ride` has no effect on the functionality.

Pause is only happening in regards of `data-pause` e.g. on `hover` or if set to `false` it should not pause. And `data-interval` is used to define the timing between cycles or with `data-interval=false` to disable it from cycling automatically.
--

--
And welcome to the dev community. Writing issues is a good starting point but you sometimes have to wait weeks or even months to eventually get a response. (Not on this project tho 😉)

Since you're in the process of learning things - this is the source of the carousel: https://github.com/twbs/bootstrap/blob/v4.6.0/js/src/carousel.js

You can try to look there and figure the logic for yourself or maybe propose some changes to the documentation if you feel there is a need to explain some things better. 

And if you really think you spotted a bug. The issue template mentions
>- A [reduced test case](https://css-tricks.com/reduced-test-cases/) or suggested fix using [CodePen](https://codepen.io/) or [JS Bin](https://jsbin.com/)

So share an example of what you find weird. It always makes it easier for others to spot the problem.
--
",,,,,,,,
33263,OPEN,Break base variables up into separate file for easier customizing,feature; v5,2021-03-15 18:41:37 +0000 UTC,brianmeagher,Opened,,"Currently overriding base level variables, i.e. `$input-btn-padding-x`, also requires overriding all variables that have been declared using that value `$btn-padding-x` and `$input-padding-x`.

I'm suggesting either breaking these variables out into a separate sass file (see below) or moving component specific variables into the existing sass file, i.e. `_buttons.scss`

```scss
// Custom.scss
// Option B: Include parts of Bootstrap

// Required
@import ""../node_modules/bootstrap/scss/functions"";
@import ""../node_modules/bootstrap/scss/mixins"";

@import ""../node_modules/bootstrap/scss/base"";

// Include custom base variable default overrides here

@import ""../node_modules/bootstrap/scss/variables"";

// Include custom variable default overrides here

// Optional
@import ""../node_modules/bootstrap/scss/root"";
@import ""../node_modules/bootstrap/scss/reboot"";
@import ""../node_modules/bootstrap/scss/type"";
@import ""../node_modules/bootstrap/scss/images"";
@import ""../node_modules/bootstrap/scss/containers"";
@import ""../node_modules/bootstrap/scss/grid"";
```",,,ffoodd,"
--
Wrapping things up, I seriously think this is needed: see #33264 and #33070 recently. 

@mdo Based on discussions [on #43 in bootstrap-npm-starter](https://github.com/twbs/bootstrap-npm-starter/issues/43), it seems that this architecture change is the most straightforward way for easier customization.
--

--
Also kind of relates to #28553 — however no adherence needed between those topics.
--
",mdo,"
--
Opened #33368 to start discussion again with breaking out our colors.
--
",,,,,,,,
33244,OPEN,Offcanvas — Remaining things,v5,2021-03-16 16:39:14 +0000 UTC,rohit2sharma95,Opened,,"Things to do after #29017

- [x] Accept `data-bs-body` option in the configuration object as well (PR — #33248)
- [ ] Add a navbar offcanvas example too
- [ ] Fix/tweak/remove the existent offcanvas separate example
- [ ] Improve snippets in offcanvas page to remove `...`?",,,GeoSot,"
--
 _Accept data-bs-body option in the configuration object as well_ can be closed with this #33248
--
",,,,,,,,,,
33224,OPEN,When the sample code in the v5.0 document is too wide; the Copy button will block the code,docs; has-pr; v5,2021-03-01 16:01:29 +0000 UTC,summertzz,Opened,,"### System Info

- Operating system and version:  All/Unrelated
- Browser and version: All/Unrelated

### Steps to reproduce

1. open (https://getbootstrap.com/docs/5.0/getting-started/introduction/#css)
2. view sample code
3. the rightmost code is blocked

### What is expected?

The code on the right is not blocked, just like the old version of the document, see (https://getbootstrap.com/docs/4.6/getting-started/introduction/#css)

### What is actually happening?

the rightmost code is blocked
",,,lsbbd,"
--
| Environment | Info |
|---|---|
| bootstrap | 5.0 |
| Browser | chrome 88.0.4324.192 |

![image](https://user-images.githubusercontent.com/18237955/109513829-7474b280-7ae0-11eb-877b-5ff85d57f664.png)

--
",,,,,,,,,,
33219,OPEN,Documentation improvement: full-width responsive; with gutter and without side-margins.,awaiting-reply,2021-03-03 11:18:19 +0000 UTC,RichardNeill,In progress,,"May I suggest another example, that would be helpful here: https://getbootstrap.com/docs/4.1/layout/grid/

Namely, what is the right way to get a full-width responsive 2+-column layout, with gutter **between** the columns, but not **around** them. This is, I think, a fairly common use-case requirement, and it's not obvious (to me anyway) from the docs as to how to achieve it.

Representing the edge of the screen by ""["",""]"",  content as ""aaa"", and whitespace as "".""

On Mobile, we want the cols stacked, :

[aaaaaaaaa]
[bbbbbbbbb]

Whereas on Desktop:

[aaaaaaaaa...bbbbbbbbb]

i.e. there is a gutter between aaa, bbb  which automatically appears when the columns reflow, but the left-col remains hard-to-the-left, and the right-col remains hard-to-the-right. Similarly we could have:
 [aaaaaaaaa...bbbbbbbbb...ccccccccc...ddddddddd]



The docs don't show how to achieve this. They do explain 3 other options though:

* wrapping it in container-fluid results in margins at the side (which I am asking how to eliminate):

[...aaaaaaaaa...bbbbbbbbb...]

* using .no-gutter results in no internal spaces:

[aaaaaaaaabbbbbbbbb]

* omitting the container results in an unwanted horizontal scrollbar:

[aaaaaaaaa...bbbbbbbbb...]    






",,,aribudin,"
--
Hello
I think this possible with d-flex

```
<div class=""d-flex flex-column flex-lg-row justify-content-center justify-content-lg-between bg-primary mb-3"">
    <div class=""custom-column p-2 flex-fill bg-warning"">Item here</div>
    <div class=""custom-column p-2 flex-fill bg-warning"">Item here</div>
    <div class=""custom-column p-2 flex-fill bg-warning"">Item here</div>
</div>
```
Dont forget to add space in lg screen up with this scss

```
@include media-breakpoint-up(lg) { 
 .custom-column {
   max-width: 32%;
}
}
```
--
",ffoodd,"
--
@RichardNeill Would you mind providing either a visual example or a sample test case that does what you'd want, please?
Not really easy to understand, for now.
--
",RichardNeill,"
--
Hello. I've found a way to do this:

&lt;div.container-fluid px-0&gt;
    &lt;div class='row no-gutters'&gt;
      &lt;div class='col-xl-6 pr-xl-4'&gt;Section A&lt;/div&gt;
     &lt;div class='col-xl-6 pl-xl-4'&gt;Section B&lt;/div&gt;
   &lt;div&gt;
&lt;div&gt;

This does what I want, i.e.

* For smaller screens, stack section A and section B,  each being full width.
* For large screens, 2 column layout, with a gap between A and B, but  A has no left-margin, B has no right-margin, and there is no unwanted horiz scrollbar.

So...
1. I think this approach might be worth documenting.
2. It is rather ugly, because of the need to explicitly add the pr and pl as the columns re-wrap. It would get progressively nastier if we had more than 2 cols, and more than 2 types of screen to support.

What I think would be better would be to have a ""row.only-inner-gutters"" class that would keep the gutters between the columns, but not around them.  The effect of .only-inner-gutters would be:

* add padding on L and R
* but not to the first-child or last-child.
* and not to the children that get a soft-wrap.

Thanks!
--
",,,,,,
33200,OPEN,Helper of notch screen (eg iphoneX),css; feature; v5,2021-02-27 09:35:11 +0000 UTC,ttttttssssss,In progress,,"Will `notch screen` features be adapted in `V5`?

Feature requests must include:

- As much detail as possible for what we should add and why it's important to Bootstrap

    Helps developers a lot

- Relevant links to prior art, screenshots, or live demos whenever possible
![image](https://user-images.githubusercontent.com/58020640/109091782-5c9fd600-7750-11eb-917a-9553bc840fb8.png)

> This is just one abstract example
```css
.iphone_x{
  padding-bottom: constant(safe-area-inset-bottom);
  padding-bottom: env(safe-area-inset-bottom);
}

```
",,,ffoodd,"
--
@ttttttssssss Based on your abstract suggestion, you'd recommend some kind of utility to be used as a wrapper? Am I right?
--
",ttttttssssss,"
--
yeah！But not `utilities` , I think he's more like`Helpers`(eg [clearfix](https://getbootstrap.com/docs/5.0/helpers/clearfix/)) 
 (use a css wrapper )

Because the function only needs CSS to complete.

Of course this is my subjective opinion, bootstrap developers are more professional than me
--
",,,,,,,,
33185,OPEN,Slide Transitions for Dropdowns,feature,2021-02-26 05:00:48 +0000 UTC,rexarvind,Opened,,"Dropdowns open instantly, please add smooth css transition.",,,giaduc777,"
--
Hello, if this feature is not assign yet. Can you assign it to me ? thanks...
--
",,,,,,,,,,
33171,OPEN,V5: Consider adding form floating label color,feature,2021-02-21 19:01:21 +0000 UTC,fschiettecatte,Opened,,Please consider adding a $form-floating-label-color variable to control the color of the floating label.,,,,,,,,,,,,,,
33147,OPEN,Custom $grid-gutter-width in SASS overflows col margin-right,awaiting-reply,2021-02-26 10:45:42 +0000 UTC,jonaslingren,In progress,,"Macbook Pro - MacOS BigSur Version 11.2
Chrome Verison 88.0.4324.146

I have no clue on how to add sass to the bootstrap in codepen, but this is the setup:
https://codepen.io/pen/?template=OJbgxRr 

This has been testet in **bootstrap@5.0.0-beta2**, same result. 

If you're adding `$grid-gutter-width: 5rem;` to customise your $grid-gutter-width through SASS the cols margin-right will push outside your row and container in a way that your page will have empty space on the right. This adds a scrollbar on the X axis of your website. I have tried to find a solution but not yet been able to do so within Bootstrap. 

This is how it should be:
![image](https://user-images.githubusercontent.com/72208908/108387818-405edf00-720e-11eb-925c-8a8f3f4c6b17.png)

But when you add a custom grid gutter width it will push your page so you get a scrollbar:
![image](https://user-images.githubusercontent.com/72208908/108388017-7ef49980-720e-11eb-9310-3948660ad905.png)

Here you can see the col is pushing outside your container (The bright red part is the col pushing your website):
![image](https://user-images.githubusercontent.com/72208908/108389524-0c84b900-7210-11eb-9bc5-84edc3349e52.png)

",,,marcelmoreau,"
--
@jonaslingren 

You just need to use an `overflow-hidden` class on your `.container`: https://codepen.io/marcelmoreau/pen/zYoproR

Or, your `.container`'s padding-x would need to be >= to the padding-x of your grid columns. So it would need to be >= `$grid-gutter-width` / 2
--
",jonaslingren,"
--
@marcelmoreau sounds more like a hack than a actual solution..

If this is the solution, this should be part of the docs, but why can't it be automated so the containers padding-x is equal width the grids? also it's strange that it's only pushing right 
--
",ffoodd,"
--
You may provide a reduced test case by only  adding to your CodePen the relevant part of our sources.

FWIW as a first review, your imports are wrong: you shouldn't import `bootstrap.scss` after importing partials and modifying variables, since `bootstrap.Scss` import them back again and import `_variables.scss` too. And I'd say this is what's causing your issue. Please follow [our recommendations for importing our Sass files](https://getbootstrap.com/docs/5.0/customize/sass/#importing).
--
",,,,,,
33143,OPEN,Dropdown dividers are styled with a wrong property,css; v5,2021-02-18 16:16:58 +0000 UTC,simzikov,Opened,,"`$dropdown-divider-bg` controls the border color of the dropdown divider, instead of controlling its background color:

```
// Dividers (basically an `<hr>`) within the dropdown
.dropdown-divider {
  height: 0;
  margin: $dropdown-divider-margin-y 0;
  overflow: hidden;
  border-top: 1px solid $dropdown-divider-bg;
}
```

Since the `hr` color in Bootstrap v5 is controlled with `background-color`, this causes issues when overriding `$dropdown-divider-bg` with a semi-transparrent color values.",,,,,,,,,,,,,,
33142,OPEN,Weird blur effect with floating labels in Firefox,css; v5,2021-02-18 23:20:22 +0000 UTC,stijn7621,In progress,,"When I click in the v5 docs page on the textbox the floating labels are a bit blurry. After about a second the label is not blurry anymore. 

In the example for v4.3 (https://getbootstrap.com/docs/4.3/examples/floating-labels/) is this not the case.

Only happens in Firefox (Tested in Chrome and Firefox).",,,mdo,"
--
Could be the CSS transforms that are causing it. Are you by chance zoomed in at all? And what version of Firefox?
--

--
Yeah we changed the way we do it in v5 so it'd be quite different than v4 :).
--
",stijn7621,"
--
Possibly caused by multiple overriden css transforms. I have experienced delay in transform when developing before.

I’m not zoomed in (100%). It happens on the current version of firefox. Also, the label is not blurry in the given example for v4.3.
--
",,,,,,,,
33134,OPEN,Add CSP URLs to the docs & more details for other CSP implementation methods,docs,2021-04-08 03:16:30 +0000 UTC,9mido,In progress,,"https://github.com/twbs/bootstrap/pull/32832

https://github.com/twbs/bootstrap/issues/25394

PR 32832 provides a section for CSP in the docs but it is lacking CSP URLs developers could plug into their code to enable bootstrap assets. 

For anybody who wants to see the results of that documentation PR 32832 here is the online version:

https://getbootstrap.com/docs/5.0/customize/overview/#csps-and-embedded-svgs

With this documentation PR 32832 there is no reference to CSP URLs that you can plug into your CSP configurations or where in the CSP configurations to put them (script-src, frame-src, etc). You are just linking to the code documentation page for each element?

I was hoping bootstrap could provide something like this:

https://content-security-policy.com/examples/

https://stripe.com/docs/security/guide#content-security-policy

https://developers.google.com/recaptcha/docs/faq#im-using-content-security-policy-csp-on-my-website.-how-can-i-configure-it-to-work-with-recaptcha

Using bootstrap provided CSP URLs and plugging them in is much easier than locally hosted assets, inline images, etc. CSP provided URLs is by far the easiest and quickest way to get CSP protection for your site. 

Following what Stripe and Google does in this case is a best practice by providing bootstrap provided CSP URLs to the public to handle the assets for you. 

I wouldn't know where to begin on where to actually download the images/svgs from and then figure out where to put them locally and then how to reference them in my code. There is no guidance for how to do that in the current docs. Maybe add more details for developers who may want to reference them locally or provide more details on some of the other methods like inline images in addition to using bootstrap provided CSP URLs. Because some developers might want to change the colors of the assets or change the asset images altogether or something. ",,,9mido,"
--
@mdo 

Can the v5 label also be added to this issue? It would be nice to have this feature when v5 comes out and not afterwards. 
--
",,,,,,,,,,
33101,OPEN,v5: Use :read-only instead of [readonly],css; feature; v5,2021-02-16 08:01:52 +0000 UTC,alecpl,Opened,,"There are two places where `[readonly]` selector is used. I think it could be replaced with `:read-only` for consistency.

https://developer.mozilla.org/en-US/docs/Web/CSS/:read-only#browser_compatibility",,,,,,,,,,,,,,
33035,OPEN,Strange values generated from RFS - Bootstrap 4.6,rfs; v4,2021-02-11 15:50:51 +0000 UTC,danielblazquez,Opened,,"When customizing my title sizes (`h1`, `h2`...) with RFS active, I have found an unwanted effect in the `h5` tag (only in that one).

In this tag a value inside `calc()` is generated **much higher** (`1.1999882569vw`) than the previous tags (for `h4`, it is ` 0.15vw`).

**My custom variables:**

```scss
$enable-responsive-font-sizes:                true;
$font-size-base:              1.125rem;
$h1-font-size:                $font-size-base * 2.22222222223;
$h2-font-size:                $font-size-base * 1.77777777778;
$h3-font-size:                $font-size-base * 1.44444444445;
$h4-font-size:                $font-size-base * 1.22222222223;
$h5-font-size:                $font-size-base * 1.11111111112;
$h6-font-size:                $font-size-base;
```

**CSS generated:**

```css
h1, .h1 {
  font-size: 2.5rem;
}
@media (max-width: 1200px) {
  h1, .h1 {
    font-size: calc(1.375rem + 1.5vw);
  }
}

h2, .h2 {
  font-size: 2rem;
}
@media (max-width: 1200px) {
  h2, .h2 {
    font-size: calc(1.325rem + 0.9vw);
  }
}

h3, .h3 {
  font-size: 1.625rem;
}
@media (max-width: 1200px) {
  h3, .h3 {
    font-size: calc(1.2875rem + 0.45vw);
  }
}

h4, .h4 {
  font-size: 1.375rem;
}
@media (max-width: 1200px) {
  h4, .h4 {
    font-size: calc(1.2625rem + 0.15vw);
  }
}

h5, .h5 {
  font-size: 1.25rem;
}
@media (max-width: 1200px) {
  h5, .h5 {
    font-size: calc(1.25rem + 1.1999882569vw);
  }
}
```

- Sass 1.32.7
- Windows 10.
- Chrome 88.0.4324.146

",,,ffoodd,"
--
That may only concern RFS —another repo. @MartijnCuppens if you have a moment to have a look?
--
",mdo,"
--
Maybe worth reviewing issues and/or reporting in https://github.com/twbs/rfs instead?
--
",,,,,,,,
32993,OPEN,Bootstrap 5 modal .fade does not finish hide animation if element within it is focused,,2021-02-05 21:46:44 +0000 UTC,suneettipirneni,Opened,,"Whenever closing a `.fade` modal the animation should complete fully, however when an element in the modal is focused this is not the case. I can successfully reproduce this issue by using the any one of the bootstrap 5 modal examples that have `.fade`. The difference is hard to see at first glance so I attached slowed down videos of the two animations to identify the discrepancies.

Closing modal with no element focused:

https://user-images.githubusercontent.com/77477100/107073805-d24dfd00-67b5-11eb-8b7e-b6df468a9754.mp4

As you can see the animation finishes and executes properly.

Closing modal with element within it focused:

https://user-images.githubusercontent.com/77477100/107073751-bf3b2d00-67b5-11eb-9a51-6d75f8bd1ac2.mp4

Here the animation starts, but then gets interrupted and suspends.

- Operating system and version
macOS Big Sur 11.2
- Browser and version
Safari 14.0.3

Bootstrap 5.0.0-beta1

- A [reduced test case](https://css-tricks.com/reduced-test-cases/) or suggested fix using [CodePen](https://codepen.io/) or [JS Bin](https://jsbin.com/)

https://getbootstrap.com/docs/5.0/components/modal/#varying-modal-content",,,,,,,,,,,,,,
32984,OPEN,Add a callout in docs regarding npm,docs,2021-02-04 14:50:20 +0000 UTC,XhmikosR,Opened,,"NPM is a dependency manager: you use it to consume Bootstrap as a dependency, not to build its documentation.

I guess this is the main cullprit here: our ""Build Tools"" are for contributing (building docs, ensuring quality, etc.), not related to using Bootstrap as a dependency.

So maybe we may add a callout to mention this, and that our NPM package only contains what it needs as a dependency?

_Originally posted by @ffoodd in https://github.com/twbs/bootstrap/issues/32719#issuecomment-760749234_",,,,,,,,,,,,,,
32954,OPEN,dropdown keyboard fixes,feature; help wanted; js; v5,2021-02-20 13:58:40 +0000 UTC,XhmikosR,In progress,,"BTW does it make sense to open the dropdown but not select the first/last element depending on the arrow key?

I feel like it's an extra key. But that's for later too. :)

_Originally posted by @XhmikosR in https://github.com/twbs/bootstrap/pull/32750#issuecomment-770921055_",,,XhmikosR,"
--
I guess for v5 that's OK to do, for v4 not sure if it's a considered a breaking change. But the current situation does not make a lot of sense to me.
--

--
Thanks! See if you can deduplicate the code to get rid of the linting warning too :)
--
",sijusamson,"
--
I would be working on this :-)

--

--
@XhmikosR I was able to fix the issue, but I couldn't find any alternate solution to remove the linting warning.
--
",,,,,,,,
32949,OPEN,v5: shift-color() not working correctly with dark default link color?,confirmed; css; v5,2021-02-19 13:16:17 +0000 UTC,marcelmoreau,In progress,,"If I want a dark color as my default link color (e.g. `#111111`), I would want its hover state to lighten the color instead of darkening it. It would appear that v5 accounts for this in its variables file, using the `shift-color()` function. 
```
$link-color: $primary !default;
$link-decoration: underline !default;
$link-shade-percentage: 20% !default;
$link-hover-color: shift-color($link-color, $link-shade-percentage) !default;
$link-hover-decoration: null !default;
```
According to `shift-color()`’s [comment](https://github.com/twbs/bootstrap/blob/v5.0.0-beta1/scss/_functions.scss#L164) , it should _“Shade the color if the weight is positive, else tint it_”. This sounds perfect and is exactly what I hope for. But if I pass a negative percentage like `-20%` to `$link-shade-percentage` in hopes of tinting it, I get a Sass compilation error: `$weight: Expected -20% to be within 0% and 100%`. 

This aligns with that Sass says, that [`mix()` only accepts 0% - 100% weight](https://sass-lang.com/documentation/modules/color#mix), but I don't know. Am I doing this wrong? Thanks for your work getting v5 out!",,,ffoodd,"
--
Works great in our core (used in alerts, tables and list-groups) and made [a reduced test case on Sassmeister](https://www.sassmeister.com/gist/3ba670b42d92f7a6115ba568d18d3c79)—works great too.

May I ask what tool you're using to run Sass?
--

--
Could be renamed indeed, feel free to open a PR or suggest anything in a new issue.
--

--
Indeed, the goal is the same but the approach diverges. The variable is not the bug, but there's something to clarify and improve for sure.
--
",marcelmoreau,"
--
Sassmeister is buggy for me but you're right, it looks fine [in a codepen of your same code](https://codepen.io/marcelmoreau/pen/rNWaRXX)

Someone could probably close this ticket – I will close it tonight if no one else does.

I am running Laravel Mix 5.0.9 and I see references to Sass Loader (I am on 8.0.2) in my error output, so perhaps I'll try to update that, use another package, or I don't know what.
```
ERROR in ./resources/scss/main.scss
Module build failed (from ./node_modules/css-loader/index.js):
ModuleBuildError: Module build failed (from ./node_modules/sass-loader/dist/cjs.js):
SassError: $weight: Expected -20% to be within 0% and 100%.
    ╷
161 │   @return mix(black, $color, $weight);
    │           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ╵
  node_modules/bootstrap/scss/_functions.scss 161:11            shade-color()
  node_modules/bootstrap/scss/helpers/_colored-links.scss 8:68  @import
  node_modules/bootstrap/scss/_helpers.scss 2:9                 @import
  resources/scss/vendor/_bootstrap.scss 17:9                    @import
  resources/scss/vendor/__vendor-dir.scss 1:9                   @import
  /Users/marcel/Sites/git/foobar/resources/scss/main.scss 14:9                                                    root stylesheet
    at /Users/marcel/Sites/git/foobar/node_modules/webpack/lib/NormalModule.js:316:20
    at /Users/marcel/Sites/git/foobar/node_modules/loader-runner/lib/LoaderRunner.js:367:11
    at /Users/marcel/Sites/git/foobar/node_modules/loader-runner/lib/LoaderRunner.js:233:18
    at context.callback (/Users/marcel/Sites/git/foobar/node_modules/loader-runner/lib/LoaderRunner.js:111:13)
    at /Users/marcel/Sites/git/foobar/node_modules/sass-loader/dist/index.js:73:7
```
All that said, `$link-shade-percentage` might not be the best variable name, as it implies a link would always be shaded and not tinted. Someone might consider renaming that. I can open another issue if need be.
--
",Boberro,"
--
I believe the indeed is a bug regarding $link-shade-percentage variable. Just like @marcelmoreau wanted to use it, it's shading or tinting a link _shift-color_ function, but it's also used in helpers/_colored-links.scss and this use case does not take negative values into account.

helpers/_colored-links.scss line 8:
`color: if(color-contrast($value) == $color-contrast-light, shade-color($value, $link-shade-percentage), tint-color($value, $link-shade-percentage));`
--
",,,,,,
32946,OPEN,dropdown-end causes horizontal scrollbar,,2021-02-03 19:31:38 +0000 UTC,aimeos,In progress,,"Browser: Chrome 87
OS: Ubuntu

Dropdown menus with class ""dropdown-end"" for alignment to the right are place partly out of the viewport before they are moved to the left with translate(). This leads to a horzontal scrollbar:

Example: https://codepen.io/aimeos/pen/jOVELyo
",,,harshpandey002,"
--
Hi @aimeos 
I'm new to open source projects.
I wanna fix this issue and make my first contribution.
Can I start working ?
--

--
Hello @aimeos,
Sir,

The class """"dropdown-menu-end"" seems to work fine, cause even after removing it, same problem occurs.
Moreover, the amount of space occurring on the right of dropdown was too much in case of tables.
I tried the same with FlexBox, scrollbar is still occurring, but if you add more text to any dropdown list. scroll bar goes away.

I'm lost, please guide me 

Please Check: https://codepen.io/harshpandey002/pen/OJbyjNj?editors=1100
--
",aimeos,"
--
Sure! :-)
--
",,,,,,,,
32944,OPEN,v5: Tooltips with data-bs-title not working,awaiting-reply; js; v4; v5,2021-02-17 17:34:58 +0000 UTC,masi,In progress,,"If I want to code my HTML with data-bs-title instead of title this does not work as described in the docs.

IMHO the reason is _fixTitle(). If the element has no title attribute and no data-bs-original-title with string data then the title attribute is forced to an empty string, but data-bs-original-title is NOT set to the value of data-bs-title.

```
  _fixTitle() {
    const title = this._element.getAttribute('title')
    const originalTitleType = typeof this._element.getAttribute('data-bs-original-title')

    if (title || originalTitleType !== 'string') {
      this._element.setAttribute('data-bs-original-title', title || '')
      if (title && !this._element.getAttribute('aria-label') && !this._element.textContent) {
        this._element.setAttribute('aria-label', title)
      }

      this._element.setAttribute('title', '')
    }
  }
```
What is missing here is that the title takes data-bs-title into consideration.

",,,Chrissdroid,"
--
Because in the docs it's writed just `title` and not `data-bs-title` and works as expected ?

The renaming described in the migration guide is only for data attributes, not for basic html attributes
Or i missed something ?
--
",masi,"
--
https://getbootstrap.com/docs/5.0/components/tooltips/#options

The docs say that all options can be passed as data attributes with the data-bs- prefix. There is no execption for title.

I can write a fix if there is a chance it will get accepted.
--

--
Noticed the behaviour in a project that went from v3 to v5, so I don't know about v4 :)

I would rather not have title attributes in my source code even if they are removed by BS so that no screen reader or other AT has ever a chance to access the attribute. The accessibiliy concern is the motivation for my request.

Changing _fixTitle() should IMHO be enough. Only question that remains is what happens if there are a title AND a data-bs-title present.
--

--
It depends on whether you have supplied a selector or not:

```
    if (this.config.selector) {
      this.config = {
        ...this.config,
        trigger: 'manual',
        selector: ''
      }
    } else {
      this._fixTitle()
    }

```

If you do it like @Blodhgard by attaching directly then the code tries to fix the title. This function does not take data.bs-title into account. But that's what I have already said in my original comment.
--
",XhmikosR,"
--
Does this work in v4? I'm not sure if this was supposed to work TBH. If it's a regression, then we should fix it. If it doesn't work with v4 either, then we need to discuss how to proceed.
--

--
After looking at the v4-dev code, it seems we do the same on v4 too. Not sure why, though.
--
",rohit2sharma95,"
--
I was unable to reproduce this issue in V5
https://jsbin.com/qiwolemeqe/edit?html,output
--
",Blodhgard,"
--
I have the same problem.
In v4 I changed the title changing the property: (with jQuety)
`$tooltip.prop(""title"", tooltipContent);`

In v5 I cannot do it in that way. Also setting it in the initialization is not working
`new bootstrap.Tooltip(document.getElementById('my_tooltip', {
    ""data-bs-title"": tooltipContent
 }));`
--
",,
32941,OPEN,v5: export utilities such as EventHandler and SelectorEngine,feature; js,2021-02-03 20:06:10 +0000 UTC,mistic100,In progress,,"I maintain https://github.com/mistic100/Bootstrap-Confirmation which is an abstraction above Popover to add contextual buttons.

While removing jQuery dependency I find myself having to copy at lot of utility code from Boostrap such as `EventHandler`, `SelectorEngine` etc.

It would be much useful for plugins developpers to be able to import such utilities from Boostrap itself instead of duplicating code.",,,mistic100,"
--
This is particularly import for the ""Data"" helper.

Because the data are not actually stored on the HTMLElement but on a private singleton store, there is not way for a plugin to access it.
--

--
I think it would be a very good idea to promote a coherent plugin architecture for v5. Previous versions benefited from jQuery for this, it would be a shame the ecosystem splits into a multitude of API and usages.
--

--
If I do a PR it will be only to export the mentionned utils. You might aggree that this subject needs a bit more of planning and conception from the core team.
--
",XhmikosR,"
--
I don't think we ever planned on these to be part of the public API. Perhaps the Data helper might make sense, but the rest not so much AFAICT.

We can export more if needed in a minor release as long as there's consensus it's useful.
--

--
Feel free to make a PR. Just keep in mind we really need to get the regressions fixed first so that we can release v5 stable, so any help there is more than welcome.
--

--
Yeah, for sure. It can wait until someone else chimes in too.
--
",,,,,,,,
32934,OPEN,Collapse on page with thousands of collapsable divs kills the browser,performance,2021-02-01 20:43:59 +0000 UTC,liord2c,In progress,,"I have a page with thousands of cards that contain some collapsable elements. collapse.js is looping through all of them to collapse a single item. Here's a link to a [video displaying the issue](https://drive.google.com/file/d/1H9xqfjJPqei06w9f7V5Z88p5Vo0RJJlR/view?usp=sharing)

Sorry for the potato quality but in essence I put a break point and show that the collapse call is on a single element. I then put a break point in collapse.js and show that in the constructor it's looping through ~4500 elements and during that loop the browser is just locked up and unusable. Even after that loop is done the browser is sluggish as hell. 

Let me know if you need anything else to debug",,,XhmikosR,"
--
Without a CodePen or a demo it's hard to know, but my guess is the same thing as #30976
--

--
I don't think it's due to the constructor loop, or at least the issue I
referenced is not about that.

Feel free to submit a PR, if you pinpoint the root cause.

On Sat, Jan 30, 2021, 19:46 liord2c <notifications@github.com> wrote:

> Reopened #32934 <https://github.com/twbs/bootstrap/issues/32934>.
>
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub
> <https://github.com/twbs/bootstrap/issues/32934#event-4269393226>, or
> unsubscribe
> <https://github.com/notifications/unsubscribe-auth/AACVLNOOXH4KP52RQPFXDYDS4RAV7ANCNFSM4WZWCPOQ>
> .
>

--

--
@liord2c can you try with jQuery 3.5.1, Bootstrap 4.6.0 and use our bundle file instead of the separate ones?

Please try to fix any HTML validation and parsing errors. They shouldn't affect the performance, but at this point I'm not sure if it helps.

The attached HTML file behaves faster for me, tested with the latest Firefox and Edge Chromium.

* [test.collapse2.zip](https://github.com/twbs/bootstrap/files/5904964/test.collapse2.zip)

Regardless, if you pinpoint the root cause, please make a PR.

PS. Apart from the above, and the traditional techniques of CSS, JS and HTML minification, autoprefixer etc, you might want to experiment with https://web.dev/content-visibility/.

--

--
Let me know how it goes. What I mentioned did help, but still Chromium suffers.

Might also be worth checking v5 with the demo page to see if things are better.
--
",liord2c,"
--
I think it's most likely related, I tried creating a codepen for you but to really see the issue you need a lot of divs and codepen limits it to 1Mb. The obvious issue is my page is overly complex and I'll fix that but in the collapse.js constructor there is a loop through the entire DOM for no reason. That is probably the reason for bug 30976. 

In case you want to actually see the issue, here's a [link](https://drive.google.com/file/d/1E_MXmZl79Nr_vTU3VtNths7dcp5B_lrD/view?usp=sharing) to a 7.5MB HTML page that you can run that will show the issue



--

--
@XhmikosR will try and take a look at it this afternoon. I will also try and find time to do a PR, collapse.js constructor does way too much and should be reduced. Although I'm pretty sure it's not the issue, it's definitely related to the complexity of the HTML. Chrome starts dying with over 40K divs on a page. I will also try the content visibility as what I'm seeing is chrome drawing non-visible divs non-stop. 
--

--
Ok definitely faster but still dies once I get around 25K divs. Also even at 10K divs I see serious lag on the collapse, it's the browser that is struggling to draw. I need to test with content-visibility as if browser skips drawing non-visible divs it will be super fast. 
--
",,,,,,,,
32933,OPEN,Document HTML sanitization in tooltip,docs; v4; v5,2021-01-30 15:44:05 +0000 UTC,terrymorse58,In progress,,"A review of tooltip.js reveals that it sanitizes any HTML in the title attribute, allowing only the tags and attributes in a whitelist defined in sanitizer.js.

Please consider mentioning this in the docs. It may save someone else several hours of debugging when their HTML isn't showing up in a tooltip.",,,XhmikosR,"
--
We already have this documented https://getbootstrap.com/docs/5.0/components/tooltips/#options
--

--
Actually, perhaps we should have a callout too.
--

--
It's already documented in https://getbootstrap.com/docs/5.0/getting-started/javascript/#sanitizer but I guess linking to that section from each component probably makes sense.
--
",terrymorse58,"
--
Yes, please add a callout to alert the user that tootip custom HTML is sanitized, and what that means. The only hint of this on the tooltips page is the word ""sanitize"" in the options, with no explanation of its impact.
--
",,,,,,,,
32897,OPEN,V5; popover not working on webpack project,js; v5,2021-02-03 19:57:25 +0000 UTC,navalex,Opened,,"Operating System: Windows 10
Browser: Chrome

Packages on package.json:
```json
{
""@popperjs/core"": ""^2.6.0"",
""bootstrap"": ""^5.0.0-beta1""
}
```

I'm creating a popover with this line:
```javascript
import '@popperjs/core'
import 'bootstrap'
import {Popover} from 'bootstrap'

const powered = new Popover(document.querySelector('#label-powered'), {
        html: true,
        trigger: 'hover',
        container: 'body',
        title: 'test',
        content: 'test',
        placement: 'top'
})
```

No error in console, no content created on HTML when I hover",,,juanbautista0,"
--
I also have a related problem, my Bootstrap V5 tabs are not working.
--

--
I had to uninstall the **beta** version and reinstall the **alpha** version ""^5.0.0-alpha1"".
--
",,,,,,,,,,
32873,OPEN,Error: CSS minification error: Missed semicolon. File: my-file.css,css,2021-03-18 21:25:54 +0000 UTC,tcastelly,In progress,,"Hello,

I'm using VueJS with bootstrap. Since the version `4.6.0` I can't build anymore my application:
> Error: CSS minification error: /home/.../my-file.css:1:141721: Missed semicolon. File: my-file.css

Same behavior if I try to build with `sass` or `node-sass`.

I found a workaround by changing the order of `animation` values in `_progress.scss`.

```diff
diff --git a/scss/_progress.scss b/scss/_progress.scss
index b48ffc4b8..a3fbecf2b 100644
--- a/scss/_progress.scss
+++ b/scss/_progress.scss
@@ -34,7 +34,7 @@

 @if $enable-transitions {
   .progress-bar-animated {
-    animation: $progress-bar-animation-timing progress-bar-stripes;
+    animation: progress-bar-stripes $progress-bar-animation-timing;

     @if $enable-reduced-motion {
       @media (prefers-reduced-motion: reduce) {
```

same in `_spinners.scss`
```diff
diff --git a/scss/_spinners.scss b/scss/_spinners.scss
index 7444ed1d1..00bb01784 100644
--- a/scss/_spinners.scss
+++ b/scss/_spinners.scss
@@ -3,7 +3,7 @@
 //

 .spinner-border {
@@ -15,7 +15,7 @@
   border-right-color: transparent;
   // stylelint-disable-next-line property-disallowed-list
   border-radius: 50%;
-  animation: $spinner-animation-speed linear infinite spinner-border;
+  animation: spinner-border $spinner-animation-speed linear infinite;
 }

 .spinner-border-sm {
@@ -47,7 +47,7 @@
   // stylelint-disable-next-line property-disallowed-list
   border-radius: 50%;
   opacity: 0;
-  animation: $spinner-animation-speed linear infinite spinner-grow;
+  animation: spinner-grow $spinner-animation-speed linear infinite;
 }
```

I think the name of the animation should be the first value.
",,,XhmikosR,"
--
/CC @MartijnCuppens @mdo we recently changed the order in 4.6.0 and main
--

--
Seems like a (serious) bug with cssnano. We use clean-css and there are no issues. You should report your issue there so that there's a chance for it to be fixed.

@mdo your call if we should revert the change or not. Again, do note that we have applied the same changes to main too.
--

--
Well, you need to pinpoint what's failing for you exactly. I hardy just looked at your first repo.

The fact is that our CI passes with the latest node-sass and sass.
--
",mdo,"
--
If it compiles fine for us, unsure why it'd be a problem for this situation. Without details on the `my-file.css`, not sure what we can do to help debug.
--

--
Very strange situation IMO—ideally these tools shouldn't care about the order, right? Do we know where there's a list of official value orders for shorthand properties?
--

--
Yeah from that same page:

> For example, a value parsed from `animation: 3s none backwards` (where `animation-fill-mode` is `none` and `animation-name` is `backwards`) must not be serialized as `animation: 3s backwards` (where `animation-fill-mode` is `backwards` and `animation-name` is `none`).

So I think that's saying the animation name should come first?
--
",tcastelly,"
--
I created a repo, you just have to run:
`npm run build`

https://github.com/shenron/vue-bootstrapjs

Btw, my scss file:

```scss

@import '../node_modules/bootstrap/scss/bootstrap';
```

Thank you for your help.


--

--
@XhmikosR thank you for your help.

I'm trying to reproduce the error with only cssnano, without success:
https://github.com/shenron/cssnano-error
--

--
I found information here:
https://www.w3.org/TR/css-animations-1/

> Note that order is important within each animation definition: the first value in each `<single-animation>` that can be parsed as a `<time>` is assigned to the animation-duration, and the second value in each `<single-animation>` that can be parsed as a `<time>` is assigned to animation-delay.

> Note that order is also important within each animation definition for distinguishing `<keyframes-name>` values from other keywords. When parsing, keywords that are valid for properties other than animation-name whose values were not found earlier in the shorthand must be accepted for those properties rather than for animation-name. Furthermore, when serializing, default values of other properties must be output in at least the cases necessary to distinguish an animation-name that could be a value of another property, and may be output in additional cases.

I guess in our case the order should not matter.
--

--
Maybe if the shorthand property is confusing we can use multiple properties?
--
",saifulriza,"
--
Same problem here. when compiling to production using version 5 or 4.6.0. to solve this I have to downgrade to version 4.5.3
--
",ffoodd,"
--
Just as a reference, this was changed in #32121 (along with other shorthand values reordering).
--
",,
32867,OPEN,custom-file inside input-group issue v4.6.0,confirmed; css; has-pr; v4,2021-03-02 11:11:58 +0000 UTC,PerseusTheGreat,Opened,,"Hi,
Recently I got **v4-dev** branch to update my RTL edition, then I have figured out when a `custom-file` is placed inside an `input-group` with at least one `input-group-append`, its `border-radius` styles will be applied  wrongly. 

Live evidences of official v4.6.0 docs for considerations:
- [https://getbootstrap.com/docs/4.6/components/forms/#supported-elements](https://getbootstrap.com/docs/4.6/components/forms/#supported-elements) | first sample : last input
- [https://getbootstrap.com/docs/4.6/components/input-group/#custom-file-input](https://getbootstrap.com/docs/4.6/components/input-group/#custom-file-input) | first sample : 2nd and 4th inputs

I am working on a machine with:
- Microsoft Windows 10 20H2 x64
- Microsoft Edge Chromium 87.0.664.75
- Chrome 88.0.4324.104
- Firefox 84.0.2",,,mdo,"
--
Appears to have come from #31962.

- https://getbootstrap.com/docs/4.6/components/input-group/#custom-file-input
- https://getbootstrap.com/docs/4.5/components/input-group/#custom-file-input
--
",alecpl,"
--
@mdo, as a regression it would be nice to be assigned to 4.6.1 project and hopefully fixed sooner rather than later.
--
",,,,,,,,
32831,OPEN,[v5] Remove font weight from dropdown items,css,2021-02-06 14:28:43 +0000 UTC,robinheidrich,Opened,,"The dropdown items have an unnecessary font weight set. ([See here](https://github.com/twbs/bootstrap/blob/main/scss/_dropdown.scss#L131))

It should be removed, or atleast should be given its own Sass variable ($dropdown-item-font-weight).",,,SyDe,"
--
hey I am new to open source, and would love for this issue to be my first. 
--
",mdo,"
--
Starting place would be identifying why we added it in the first place :).
--
",harshad71,"
--
if it is not resolve should i work on it?
--
",,,,,,
32824,OPEN,Carousel button links don't work with space keys,accessibility; js; v5,2021-02-09 18:26:19 +0000 UTC,masi,In progress,,"The example in the 5.0 docs uses a-tags with role=button. To fully implement the ARIA pattern, please either change the example to use button-tags or fix the JS code to invoke the action with a space key.

https://www.w3.org/TR/wai-aria-practices-1.1/#button
https://dev.to/tylerjdev/when-role-button-is-not-enough-dac
",,,knoobie,"
--
There is already a PR https://github.com/twbs/bootstrap/pull/32627. 
--
",ffoodd,"
--
This stays accurate IMHO, since carousel will still allow to use links. @patrickhlauke do you agree, or could we skip this?
--
",patrickhlauke,"
--
should ideally do a brutal ""if `role=""button""` apply handler for `Space`"" (possibly just scoped to bootstrap's components)
--

--
(noting that it's not a WCAG failure per se, but yes the behaviour should be that things that are announced as buttons will trigger with both `Enter` and `Space`)
--

--
reminded of this https://patrickhlauke.github.io/aria/presentation/?full#103 - could possibly do a generic one that targets all known bootstrap components where authors may end up using links or generic containers with `role=""button""` (dropdown toggles, carousel buttons/indicators, close buttons, collapse triggers, ...)
--
",masi,"
--
> There is already a PR #32627.

Sorry, my bad. Didn't found that one in a quick search.

Thank you, @patrickhlauke 
--
",,,,
32820,OPEN,Toasts should not autohide when hovered or when focus is inside,accessibility; help wanted; js; v5,2021-03-31 05:02:29 +0000 UTC,patrickhlauke,Opened,,"For accessibility and usability reasons, if an autohiding toast is hovered with the mouse, or when `:focus-within`, it should prevent the autohiding / reset the delay (so when not hovered anymore / when focus moves out again, the delay kicks in again and eventually the toast does hide).

Due to `:focus-within`, probably can only target v5 - unless extra work is done in JS to check `document.activeElement` and to verify if it's a child element of the toast.",,,,,,,,,,,,,,
32800,OPEN,Floating label on textarea overlaps content,confirmed; css; v5,2021-03-11 01:50:05 +0000 UTC,rynop,In progress,,"- Operating system and version: macOS 11.1
- Browser and version: Chrome 87.0.4280.141 (Official Build) (x86_64)

Bug:
![image](https://user-images.githubusercontent.com/372730/104614054-7fb57100-564d-11eb-8619-693ff7390f9c.png)

To reproduce:
1. Visit https://getbootstrap.com/docs/5.0/forms/floating-labels/#textareas
2. Type in 4 lines of text
",,,alecpl,"
--
Confirmed with Chromium 87.0.4280.66 on Linux, no issue in Firefox.
--
",TechOverflow,"
--
Confirmed in Safari 14.0.3.
--
",mdo,"
--
No need for further confirmation, it’s a problem in literally every browser :).
--
",rynop,"
--
I will do my best to circle back around and PR if it's not obvious to you what the fix is.  I spent 5mins on what I thought the obv.  fixes might be, and no 🎲 . LMK. Thanks
--
",z3r0101,"
--
While waiting for the official fix...

.form-floating > .form-control:not(:-moz-placeholder-shown) ~ label {
    opacity: 1;
    color: rgba(0, 0, 0, 0.5);
    background-color: #fff;
    height: auto;
    padding: 0px;
    padding: 0px 0px 0px 10px;
    width: 100%;
    transform: scale(0.982) translateY(0.045rem) translateX(0.1rem);
    border-radius: 5px 0 0 0;
}
.form-floating > .form-control:focus ~ label,
.form-floating > .form-control:not(:placeholder-shown) ~ label,
.form-floating > .form-select ~ label {
    opacity: 1;
    color: rgba(0, 0, 0, 0.5);
    background-color: #fff;
    height: auto;
    padding: 0px 0px 0px 10px;
    width: 100%;
    transform: scale(0.982) translateY(0.045rem) translateX(0.1rem);
    border-radius: 5px 0 0 0;
}
.form-floating > .form-control:-webkit-autofill ~ label {
    opacity: 1;
    color: rgba(0, 0, 0, 0.5);
    background-color: #fff;
    height: auto;
    padding: 0px;
    padding: 0px 0px 0px 10px;
    width: 100%;
    transform: scale(0.982) translateY(0.045rem) translateX(0.1rem);
    border-radius: 5px 0 0 0;
}
--
",,
32779,OPEN,Modal wrongly adding right padding due to window.innerWidth not returning the right value,,2021-01-14 23:39:36 +0000 UTC,yusufhm,In progress,,"I've been having an issue with a project, where a right padding is being adding to a full-width modal, but only on Windows Chrome interestingly.

While doing a search, I came across a similar [issue](https://stackoverflow.com/questions/32862394/bootstrap-modals-keep-adding-padding-right-to-body-after-closed) which did not help.

However I decided to look into where that padding gets added in `modal.js`; it seems to happen in the `_adjustDialog` method which uses the `_checkScrollbar` method - this [line](https://github.com/twbs/bootstrap/blob/63f3d939eaceeb84dcc77a7392953bcc8c5bc0a3/js/src/modal.js#L455) specifically - to know whether the body is overflowing. It uses `window.innerWidth` to do that which, when I checked in my console, was giving a different value than expected (again, only on Windows).

After some research, I found this [post](https://stackoverflow.com/a/36317697/351590) which explained why that value could be wrong, and what to use instead: `window.visualViewport.width`. In our case, it would be `Math.round(window.visualViewport.width)` since we're also rounding the other value. I've tested that locally and it seems to be working for our scenario, but I'm not sure if it would break other things.",,,XhmikosR,"
--
Are you sure this isn't a duplicate of #27071?
--
",yusufhm,"
--
It seems to be related, although I'm not using `.sticky-top` anywhere. I'll create a PR with the change I described above then we can see if that fixes the other issue as well.
--
",,,,,,,,
32774,OPEN,"Automate inlined SVGs list in ""Customize"" docs",docs; help wanted; v5,2021-01-29 13:05:39 +0000 UTC,ffoodd,Opened,,"Could use regex in a dedicated shortcode, or maybe some kind of flag in our Sass files to locate SVGs?

---

Could we make some shortcode to make it dynamic? Regexing SVG Data URi shouldn't be that hard. Ideally we'd get the corresponding file name to output, not sure is this is doable.

_Originally posted by @ffoodd in https://github.com/twbs/bootstrap/pull/32759#discussion_r555548024_",,,mdo,"
--
That'd be cool!
--
",,,,,,,,,,
32746,OPEN,Horizontal form example: fieldset and legend not working in Safari,css; v5,2021-01-10 04:48:33 +0000 UTC,mdo,Opened,,"https://getbootstrap.com/docs/5.0/forms/layout/#horizontal-form

Works in Chrome, but not Safari. Found after reading up on #24938.

<img width=""792"" alt=""Screen Shot 2021-01-09 at 8 47 03 PM"" src=""https://user-images.githubusercontent.com/98681/104114680-ef2d0880-52bb-11eb-9e78-61a623a3a125.png"">

",,,,,,,,,,,,,,
32723,OPEN,v5: Dropdown - create a class/data-attribute selector to prevent closing dropdown-menu on click,feature; js,2021-01-07 22:28:23 +0000 UTC,jakubmuda,Opened,,"By default `.dropdown-menu` hides when you click inside it. The only exception is when you have a form - it stays open when you focus on input or click buttons. It would be good to have a dedicated class `.dropdown-menu-something` or data attribute `data-something=""something""` to prevent `.dropdown-menu` from hiding for content other than forms.

`<ul class=""dropdown-menu dropdown-menu-something"" aria-labelledby=""dropdownMenuButton"">`

OR

`<ul class=""dropdown-menu"" data-something=""something"" aria-labelledby=""dropdownMenuButton"">`

It looks like the javascript for preventing such behaviour in forms is very simple so why not add another selector?
Line 634: https://github.com/twbs/bootstrap/blob/main/js/dist/dropdown.js#L634",,,,,,,,,,,,,,
32715,OPEN,No sample code provided,docs; help wanted; v5,2021-04-07 04:50:32 +0000 UTC,zhangchenglin,In progress,,"https://github.com/twbs/bootstrap/blob/8095de20ea1f32c866a2dd228f1d328dd14647ab/docs/5.0/components/tooltips/index.html#L491-L499

No sample code provided",,,mdo,"
--
Do you mean that there's no included code snippet below the example in the rendered docs?
--

--
Visual tests shouldn't be in our docs IMO. So I'd say let's add the code and ensure the example works correctly (that's another open issue I think, yeah?), or move it somewhere else.
--
",zhangchenglin,"
--
> Do you mean that there's no included code snippet below the example in the rendered docs?

Yes, I didn't see it.

--

--
> I don't think it makes sense to add the snippet here. We added this to visual test if an edge case was fixed. I guess we should either remove the example or make it a proper one.

Perhaps when adding, I want to tell people who read the document to support the use of svg images.
 I am afraid that only the person who added can explain the reason.

--
",XhmikosR,"
--
I don't think it makes sense to add the snippet here. We added this to visual test if an edge case was fixed. I guess we should either remove the example or make it a proper one.
--

--
For reference #30928
--

--
I'm going to move this to the visual tests.
--
",,,,,,
32672,OPEN,v5: Inputs and Selects are slightly misaligned in Floating Forms,css; v5,2021-03-07 04:31:14 +0000 UTC,TechOverflow,In progress,,"- macOS 10.15.7
- Safari 14.0.3
- https://codepen.io/Fyod/pen/OJRZgRL

There is a slight misalignment, probably due to `padding-top`. I have not tested in other browsers.

![](https://i.imgur.com/Vz2XeRD.png)
",,,TechOverflow,"
--
Temporary fix: 

```
.form-select {
  line-height: 1.25em;
}
```
--
",alecpl,"
--
I confirm this is related to line-height (and maybe appearance). In Chrome the letter ""g"" in select is cut.
--
",Shifrin,"
--
> Temporary fix:
> 
> ```
> .form-select {
>   line-height: 1.25em;
> }
> ```

I checked in Chrome by applying this fix, it doesn't work for me. But I can able to fix it by setting `padding-bottom: .425rem`. 

So is it really a line-height issue @alecpl?
--
",,,,,,
32668,OPEN,Docs: Don't load jQuery from 3rd party CDN for v4 Docs,docs; v4,2021-01-25 11:13:34 +0000 UTC,coliff,In progress,,"Suggestion: on the v4 docs jQuery is loaded from the jQuery CDN (https://code.jquery.com/jquery-3.5.1.slim.min.js), with a local fallback. It'd be less HTML code and likely always better for performance if it always loaded jQuery locally. It'll save the cost of opening a new TCP connection (DNS resolution, TCP handshake and TLS negotiation). Browsers don't have Cross-Domain caching so there's no advantage in using a 3rd party CDN anymore (as your site is served from a CDN anyway).
Good explainer here (with Bootstrap being used as the example):
https://csswizardry.com/2019/05/self-host-your-static-assets/",,,XhmikosR,"
--
Yeah, it's low priority for sure since we have moved to v5, but I guess we could look into it for the next 4.x version.
--

--
So, I don't think I'd like to make this change right now, and add back a 3rd-party file to track and update. If/when we manage to handle all of our 3rd-party assets through npm, we could definitely do it.

What we could do right now is switch to jsDelivr thus one less CDN.
--
",coliff,"
--
sounds good. 👍 
--
",,,,,,,,
32664,OPEN,Registering components in V5 as jQuery plugins prevents treeshaking,feature; help wanted,2021-01-05 20:23:56 +0000 UTC,Bobris,Opened,,"It is nice that V5 removes dependency on jQuery, but every component still try to register as jQuery pluging if jQuery is available. But that makes all components as used in every treeshaking or dead code elimination bundler.

It would be good to have bootstrap build version without this code making applicactions much smaller if they will use only some components.
",,,XhmikosR,"
--
PRs welcome.
--
",,,,,,,,,,
32658,OPEN,Row gutter classes also affect container gutters,css; v5,2021-03-11 15:39:29 +0000 UTC,martinbean,In progress,,"Operation system: all
Browser: all
Reduced test case: https://codepen.io/martinbean/pen/gOweLmQ?editors=1000

If you have a container within a row, and that row has gutters removed (`.row.g-0`), the gutters are _also_ removed from containers anywhere within that row (as it uses the `--bs-gutter-x` CSS variable, and the `.g-0` class sets the value of that variable to zero).

I would expect containers to still retain its padding. Is this intended or not?

Example:

```html
<div class=""row g-0"">
  <div class=""col-12"">
    <div class=""container"">
      <p>Container (now with no gutters)</p>
    </div>
  </div>
</div>
```",,,rohit2sharma95,"
--
You can use the container directly without wrapping it in a `.row` :thinking: 
```html
<div class=""container"">
  <p>Container (with padding)</p>
</div>
```
--
",martinbean,"
--
@rohit2sharma95 I’m aware I can, but that’s not what I require for my layout.
--

--
@ffoodd Well, the container acts differently whether it’s inside a row or not. Some times it has gutters, some times it doesn’t.

My example is, I’m using a gutter-less row for an admin panel layout:

```html
<body>
  <div class=""row g-0"">
    <div class=""col col-sidebar"">
      <!-- Header -->
      <!-- Navigation -->
    </div>
    <div class=""col"">
      <div class=""container"">
        <!-- Content -->
      </div>
    </div>
  </div>
</body>
```

I have a fixed-width, left-hand column that holds a logo and navigation menu, and then a flexible right-hand column that holds the content. But because this row is the full width of the screen, I don’t want the content to just keep on expanding as well—I want it contained. So I wrapped it in a container.

The problem is on “medium”-sized screens (i.e. tablets) where the container has a max-width greater than the width of the right-hand column. The container is now butted up against the left-hand column and the right-hand side of the screen, instead of having spacing either side like I would expect, and like it would have in the previous four major versions of Bootstrap.
--

--
@mdo It works in that it’ll re-add padding, but isn’t going to match if I’ve set my column gutters to be something other than `1rem`.
--
",mdo,"
--
Hmm I'm not 100% sure honestly, and I think we can go either way on it. Updated the CodePen to show a default `.container` along side Martin's example. https://codepen.io/emdeoh/pen/XWjyrOO?editors=1100

Any thoughts from @twbs/css-review?
--

--
I _think_ this is fine as-is? If you need the container's padding when nested, I'd assume you could add another `.g-*` class to it like so:

```html
<div class=""row g-0"">
  <div class=""col"">
    <div class=""container g-3"">
      <p>Container (now with no gutters)</p>
    </div>
  </div>
</div>
```

Would that suffice?
--
",ffoodd,"
--
Well, I guess I don't get it. Containers are meant to, well, contain, by defining widths mostly. IMHO, they have nothing to do inside a row (which defines its own widths automatically or through cols).

What am I missing?
--
",,,,
32649,OPEN,Change default behaviour of carousels to make autoplay opt-in,accessibility; feature; v6,2021-01-15 03:42:44 +0000 UTC,patrickhlauke,In progress,,"After much head-scratching, I grokked that the carousel component currently:

- autoplays by default after the first interaction (which seems rather pointless/nonsensical)
- allows authors to make the autoplay start right on page load through the `data-bs-ride=""carousel""` option
- lets authors optionally pause the carousel autplay when hovering over it
- lets authors suppress autoplay altogether (opt-out) by explicitly adding `data-bs-interval=""false""`

I would argue that this component's behaviour is the exact opposite of what authors would expect (certainly coming from other frameworks, like AMP). The usual approach that, as an author, I'd expect is:

- carousel is static by default
- authors can explicitly opt into autoplaying at page load somehow (e.g. adding some sort of autoplay toggle, like `data-bs-autoplay`, defaulted to `false`, but authors can set it explicitly to `true` to opt-in)
- for autoplaying carousels, stop the autoplay after an interaction (i.e. the user has explicitly clicked somewhere, moved focus into the carousel, is hovering over it) by default (this respects the user's intent by default)
- allow authors to explicitly ignore users hovering over the carousel with the mouse (but don't do it for keyboard) - with added warning that the option should not be used for any kind of interactive slide content, as that will otherwise move the content from under the users' mouse pointer/feet. for this reason, don't offer this option for keyboard/focus, as there it would be even more annoying and potentially lead to focus being lost/reset to the start of the page. maybe call it `data-bs-hoverstop`, which defaults to `true`, but can be suppressed with `false`

admittedly this would now be a breaking change, but i think a change for the better.
",,,mdo,"
--
Hmm unsure about making the breaking change, but I think I agree with your take. Carousels in general irk me, and things automatically happening without my interaction with them isn't the best. If we're concerned at all about the breaking change, I'm thinking it's a `v6` thing instead of a breaking change in `v5`.
--
",patrickhlauke,"
--
fair enough, let's aim for v6. maybe for v5 it's worth adding a fairly explicit note somewhere up high in the documentation explaining that the current default behaviour is autoplaying after the first interaction (though it's completely silly for anything other than, don't know, image slideshows?), and highlighting very clearly that if this behaviour is not desired (as it's both illogical, and - since there's no explicit stop button - causes accessibility issues), authors should really add `data-bs-interval=""false""`
--

--
and regarding accessibility: once a carousel starts and can't be paused/stopped (other than leaving your mouse over it, or keyboard focus on it) it essentially violates https://www.w3.org/TR/WCAG/#pause-stop-hide
--
",ffoodd,"
--
@patrickhlauke couldn't we add a play/pause button as an optionnal element, like we do for controls and indicators? This is what I had in mind in #31908. Since it'd be an enhancement, this wouldn't be a BC. That won't help with the default behaviour, but at least we'd provide an easier way for users to disable sliding.
--
",,,,,,
32642,OPEN,"import bootstrap from 'bootstrap' - ""export default was not found""",how-to; v5,2021-01-13 18:07:48 +0000 UTC,demiavaliani,Opened,,"I have Angular 11 & Bootstrap 5 project.

Following the documentation from here: [Package managers > NPM](https://getbootstrap.com/docs/5.0/getting-started/download/)

1. ""import bootstrap from 'bootstrap'"" to expose the plugins. 

2. Now having ""bootstrap"" object, I go ahead and try to get instance of Modal for example:
`bootstrap.Modal.getInstance(myModal);`

Received following error:
**""export 'default' (imported as 'bootstrap') was not found in 'bootstrap'**

Looks like there is no default export in bootstrap library. Instead **import * as bootstrap from 'bootstrap'** fixed the issue.

Also, it would be good to have a mention of how to import properly the plugins inside the website Components section itself.
For example, [Components > Modal > getInstance](https://getbootstrap.com/docs/5.0/components/modal/#getinstance) just mentions that we can get instance of a Modal. But it does not say how to properly import the plugins first. ",,,,,,,,,,,,,,
32636,OPEN,Floating labels and select positioned with different padding on Firefox,browser bug; css; v5,2021-01-15 13:07:39 +0000 UTC,ddneat,In progress,,"
While reading the documentation with the v5 examples, I noticed that the floating labels and select value are off. The following screenshot was taken from the documentation: https://getbootstrap.com/docs/5.0/forms/floating-labels/#selects

<img width=""767"" alt=""Bildschirmfoto 2020-12-28 um 13 07 45"" src=""https://user-images.githubusercontent.com/4222309/103213494-1b38a900-490e-11eb-986c-476cdaa5c5a6.png"">

- macOS 11.0.1
- Firefox 84.0.1

I could not reproduce this issue on Safari nor Chrome. My first investigation using the devtools and playing around with different paddings and font-sizes was unsuccessful.

Would you have any hints on resolving this issue? I would be happy to provide a PR.
",,,XhmikosR,"
--
padding left/right of .5rem fixes the issue for me on Firefox but then it breaks on Chromium.

Not sure if it's a browser issue, but it looks like it.
--

--
The issue is with horizontal alignment, and that Firefox has that extra padding compared to Chromium. IMHO we should add the hack if possible. 
--
",linhub15,"
--
Material-UI also had this [issue](https://github.com/mui-org/material-ui/issues/8946).
Looks like Firefox is rendering `<select>` differently than other browsers.

This is also present in the normal `<select class=""form-select"">`

> ![image](https://user-images.githubusercontent.com/10420994/103464294-ca4ef900-4cef-11eb-968b-dff07d7bc005.png)


## Temporary Workaround
Add negative `text-indent` for Firefox.

```css
@-moz-document url-prefix() {
  .form-select {
    text-indent: -.13rem;
  }
}
```
Example: https://codepen.io/linhub15/pen/RwGMogY
--
",ddneat,"
--
Thanks for your investigation and answers!

I would suggest to enhance the bootstrap reboot to resolve this issue? Probably the reboot should unify text-indent of all browsers by a fixed value.

What's your opinion? May I provide a PR?

--

--
It seems like Safari has a similar issue with line-height https://github.com/twbs/bootstrap/issues/32672
--
",mdo,"
--
Edit: I'm a dummy and missed the fix was already enabled in the CodePen, sorry!
--

--
Looks like this might be documented as a Firefox bug already: https://bugzilla.mozilla.org/show_bug.cgi?id=1582545. Unsure if we implement the hack, or go with mentioning the bug? Thoughts @twbs/css-review?
--

--
I don't think so @ffoodd? At least I don't see anything for that in our CSS—might be missing something. I thought the issue was with vertical alignment and sizing, not horizontal.
--
",ffoodd,"
--
Isn't this related to a fix @MartijnCuppens had for our new file input? I recall talking about a `-moz-` proprty related to left padding…

I’d be in favor of implementing the hack, however I'd change `padding` instead of an arbitrary `text-indent` (to make it obvious) with a link to the related bug.
--

--
I confirm this is unrelated (found the comment tackling it ATT: https://github.com/twbs/bootstrap/pull/31955#issuecomment-716147361). 

However [`select > option` have `padding-inline-start: 3px`](https://searchfox.org/mozilla-central/rev/0b7007a23bc16c857f894140e12f307bfeef2fdd/layout/style/res/forms.css#364)  which might cause this? 

After a few tries, `padding` doesn't work, so I'd stick to `text-indent` as suggested. I'd go with `2px` as a value, since it perfectly matches and I deduced this from comments in linked source file: they add `3px`, taking a `2px` border into account; we set a `1px` border.

Turning this around, I didn't find a better way.
--
",alecpl,"
--
`padding-inline-start: 0.5rem` on the select fixes it for Firefox, but breaks for Chrome. But `-moz-padding-start: 0.5rem` does the trick. This would have to be applied to both `.form-select` as well as `.form-floating > .form-select` because both cases are broken.
--
"
32596,OPEN,Inconsistent carousel .pause() bahaviour,js,2020-12-23 15:10:30 +0000 UTC,mozi-h,Opened,,"Whem pausing a carousel using `.pause()`, I see inconsistent behaviour.

I expect what happens on Desktop Firefox:
- Auto-sliding off.
- Manual sliding works
- Manual sliding **does not resume auto-sliding**

Under some conditions, **manual sliding does resume auto-sliding**. So far this happens with one of these conditions:
- Touch device (even Firefox simulated or Firefox on Android)
- Chromium (Edge and Chrome tested)
- Even weirder: jsfiddle on Firefox (even though Firefox Desktop usually is the only ""normal"" one).

So here are my questions:
- What is the intended behaviour?
- If manual sliding should always resume auto-sliding, it's a Firefox problem. But how could this be achieved? Or perhaps a ""heavier"" option to `.pause()` which disables the manual sliding options too might be handy (`.dispose()` seems to be very ""light"")?

When calling `.pause()` on a Carousel object, mobile users will still unpause after an interaction.


Here's a jsfiddle: https://jsfiddle.net/4nqr1od2/
As mentioned above, I see inconsistencies on jsfiddle vs local server.
Note that the carousel starts as auto-sliding and has a 1s interval. The Button indicates which action *should* be expected to be performed on click; the actual performed action based on `carousel._isPaused` is logged and highlighted.",,,XhmikosR,"
--
The default behavior is to pause on `'hover focus'`. Are you sure you don't want to use `'click'` here?
--
",mozi,"
--
Pause on hover or focus for mobile users is what I need, coincidentally. Even if not, I would expect the auto-pause to not interfere with a manually triggered pause.
In fact, a hover doesn't interfere with it; only a touch-focus or (touch- / click-) navigation using indicators or the button arrows.

I feel the behaviour is not as expected and inconsistent.
It should either be clarified in the documentation (if this was intended); or adjusted.

Sorry for the weird label btw
--
",,,,,,,,
32555,OPEN,card example promotes DOM order with accessibility issues,accessibility; v5,2021-01-11 08:50:30 +0000 UTC,masi,In progress,,"The first element in a widget should always be it's title. If you want to make the image on top I see a simple solution.

Use CSS-order to modify the visual appearance (card is already a flex element):

```
<div class=""card"">
  <div class=""card-body"">
    <h5 class=""card-title"">Card title</h5>
  </div>
  <img src=""..."" class=""card-img-top"" alt=""..."">
  <div class=""card-body"">
    <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
  </div>
</div>

```

The required CSS:

```
.card-img-top {
  order: -1
}

.card-img-top + .card-body {
  padding-top: 0;
}
```",,,hvsh,"
--
Use aria-labelledby=""#title-Id"" on the .card 
--

--
Aria-label perhaps may end up with the title being read twice. Aria-labelledby will not. 

https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-labelledby_attribute#Examples
--

--
I believe you are right, Jaws apparently completely ignores aria-label and aria-labelledby on all static content except td and th and div with certain roles. 

MDN link was just to show recommended use cases not how often it will be read. 
--
",masi,"
--
aria-labelledby will end in the title being read twice.
And you have to create ids within the markup. The CSS-Solution works without any additional code.
--

--
> Aria-label perhaps may end up with the title being read twice. Aria-labelledby will not.

You are right, but you suggestion does not bring usable results in screen readers (testes with Jaws and NVDA on Chrome):

```
<section aria-labelledby=""foo"">
   <img alt=""Fire raging in a wood""/>
   <h2 id=""foo"">Wild fires spread across the San Diego Hills</h2>
   Strong winds expand fires ignited by high temperatures ...
</section>
```
Both screen readers actually know that the region is labelled ""Wild fires ..."", but Jaws reads the alt-attribut and the h2 element when entering the region. NVDA reads only the alt-attribute (also when using keyboard commands to navigate to the region, only in the elements browser the h2 is presented as title). Sidenote: depending on the verbosity settings of the screen reader a region (defined by explict or implicit role) may or may be not announced.

Arial-labelledby works well for form fields, but for regions it seems the current versions of popular screen readers have a preference to use the first child element as title. Too bad, but such oddities are only too common.

With proper HTML and CSS it's easy enough to move the image to the top or to the left. Just make sure that the header is the first element (it's ok when it is contained in one ore more DIVs).

BTW, I don't understand the reference to MDN. What have you been trying to prove? The article says nothing about how often a label will be read.

PS: There is another error in the docs. You are using a h6 for the subtitle. Don't do that! A Hx introduces a **new** level.
--

--
@hvsh Ad) MDN, I see. I use MDN often myself. And the examples look good, they should also sound good when spoken :)

It's sad that the specs and the implementations show a wide gap. It makes it much harder for a well-meaning dev to do actual good.
--

--
Maybe you could just add an additional example to the docs, but don't change the actual CSS of v5. Just to raise awareness.

Another solution is to create a variant class for .card-img-top that implementgs my suggestion.

@XhmikosR You wrote do not find the suggestion right. Do you feel the CSS reordering will create troubles and confusion? What's wrong with it? How can I improve it?
--

--
My ticket is concerned about the docs, not the code.
IMHO the important guidance is that the heading is either first in DOM or the card has an accessible name.
To make the accessible name working the tag needs to have at least a role of ""group"".
--

--
No, you need to change the HTML and the CSS for my proposal.

The suggestion using accessible names doesn't change the order of elements, but adds the burden of maintaining an id.
--
",XhmikosR,"
--
@patrickhlauke your call
--

--
Probably but we really need to try not to.

As for this issue itself, I don't find the suggestion right. I would pass
on this personally.

On Sun, Dec 27, 2020, 17:06 Patrick H. Lauke <notifications@github.com>
wrote:

> I assume this would end up being a breaking change...are we still ok to
> add something for this to v5? @XhmikosR <https://github.com/XhmikosR>
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/twbs/bootstrap/issues/32555#issuecomment-751478070>,
> or unsubscribe
> <https://github.com/notifications/unsubscribe-auth/AACVLNIV57LIJQZ4TWTM5HDSW5EPHANCNFSM4VDC5RYQ>
> .
>

--
",patrickhlauke,"
--
In principle I agree with the thread starter here. Logically, the image comes ""under"" the hierarchy of the heading. A situation where this is irrelevant is if the image is purely decorative / has empty `alt=""""`. Otherwise yes, from a purist's point of view, it should come after the heading.
--

--
I assume this would end up being a breaking change...are we still ok to add something for this to v5? @XhmikosR 
--

--
@mdo @MartijnCuppens @ffoodd et al, thoughts on this?
--

--
is the CSS change/addition a breaking change? I've not tested it, but that's the crux around the breaking change. If the current structure still works with the proposed CSS change, then I'd be in favour of it.
--

--
> No, you need to change the HTML and the CSS for my proposal.

If the new CSS doesn't work with the old/current markup, then yes it'll count as a breaking change, and we missed the window of opportunity for those at this stage of v5. we can revisit this for v6.
--
",mdo,"
--
Giving some guidance in the docs seems doable, but I don't know about making breaking changes for this (if that's what's being asked) after having it for a few years without major issues.
--
",ffoodd,"
--
My two cents: the suggested fix could be implemented using **utilities**, using `.order-first` on `.card-img-top` and `.pt-0` on `.card-body`.

We're only missing `.order-first` in v4, but it could be added (adding utilities would not be a BC, obviously).

Given that, we might update our docs examples to use those utilities in v4 (or at least document a new example) — and either do the same in v5 or make it our new card pattern. We're still in time to add some BCs I guess?
--
"
32550,OPEN,Use display: flow-root instead of the clearfix hack,css; feature; help wanted,2021-01-14 00:30:19 +0000 UTC,MichaelRushton,Opened,,"https://caniuse.com/flow-root

Supported by the latest version of the major browsers. It's a much cleaner solution.",,,ffoodd,"
--
I like the idea, however [changing `display` on semantic elements might remove their semantics (content by Adrian Roselli)](https://adrianroselli.com/2020/10/a11yto-conf-css-display-properties-versus-html-semantics.html). I'd say it needs some deep thinking before using this as a basis, and at least deep testing of various behaviours using this value.


--
",mdo,"
--
Getting some help testing this out to verify @ffoodd's comment would be nice. We can go from there and perhaps add something as another utility and offer up alternatives depending on needs/situation.
--
",,,,,,,,
32496,OPEN,Scrollspy: highlights wrong navigation item when a page is reloaded.,js,2021-03-30 10:31:33 +0000 UTC,DeboBuiz,In progress,,"- Operating system and version : Windows 10
- Browser and version: Chrome latest

https://codepen.io/debobuiz/pen/ZEpempL

**Issue:** Please refer the screenshot. I have scrolled the page to Item 1. But in the navbar, ""Item 3"" is highlighted.

![image](https://user-images.githubusercontent.com/9299145/102262196-bc038d80-3f38-11eb-9750-d6f9785af196.png)

**How to reproduce the issue:**
When the page is opened initially, things will be fine. Scroll the page to item 3 or item 4. Then right-click and ""reload frame"" in the codepen.io preview section. Now, when you scroll the page through various items, the correct item will not be highlighted in the navbar.
",,,Neelam,"
--
I refreshed 2-3 times and its working fine
--

--
yes I understand the problem now
--

--
> You may copy the code in a local html file too and recreate the issue by scrolling to a different section and reloading the page.

I copied the code in my local, and its really working fine there , even after reloads. may be the problem is with codepen.io.

--
",DeboBuiz,"
--
Did you reload the whole page 3 times? You need to right click on the html
output in the codepen.io and select the ""reload frame "" option. Before
reloading scroll the page to a different section, say item 3 or 4

On Wed, Dec 16, 2020, 1:31 AM Neelam-Nishad <notifications@github.com>
wrote:

> I refreshed 2-3 times and its working fine
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/twbs/bootstrap/issues/32496#issuecomment-745533328>,
> or unsubscribe
> <https://github.com/notifications/unsubscribe-auth/ACG6JSK2MHTZMKDJPV6336LSU66CPANCNFSM4U43JHHA>
> .
>

--

--
You may copy the code in a local html file too and recreate the issue by scrolling to a different section and reloading the page.
--

--
PLEASE REMEMBER TO paste the code within the following blocks

'''
<!doctype html>
<html lang=""en"">

</html>
'''
I found the issue while working on a project. In order to report the bug, I
created the demo in codepen. In fact, I copied the codepen code in the
local file and tested the issue locally too. I don't know how you tested
it. As I said, you need to scroll the page to a different section. Then
click on the browser refresh button. Now, you would observe that incorrect
navigation items are highlighted, when you scroll the page through
different sections.
--

--
@Neelam-Nishad  I have pasted the complete demo code here. you may copy this to you local file and test it out.

```<!doctype html>
<html lang=""en"">
<head>
    <!-- Required meta tags -->
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">

    <!-- Bootstrap CSS -->
    <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1"" crossorigin=""anonymous"">

    <title>Hello, world!</title>
  </head>

  <body data-bs-spy=""scroll"" data-bs-target=""#navbarResponsive"" data-bs-offset=""100"" style=""padding-top: 100px;"">
    <nav class=""navbar navbar-light navbar-expand-lg fixed-top bg-light"">
      <div class=""container-fluid"">
        <a class=""navbar-brand"" href=""#page-top"">
          DEMO
        </a>
        <button class=""navbar-toggler"" type=""button"" data-bs-toggle=""collapse"" data-bs-target=""#navbarResponsive"" aria-controls=""navbarResponsive"" aria-expanded=""false"" aria-label=""Toggle navigation"">
          <span class=""navbar-toggler-icon""></span>
        </button>
        <div class=""collapse navbar-collapse"" id=""navbarResponsive"">
          <ul class=""navbar-nav ms-auto me-2"">
            <li class=""nav-item""><a class=""nav-link "" href=""#item1"">Item 1</a></li>
            <li class=""nav-item""><a class=""nav-link "" href=""#item2"">Item 2</a></li>
            <li class=""nav-item""><a class=""nav-link "" href=""#item3"">Item 3</a></li>
            <li class=""nav-item""><a class=""nav-link "" href=""#item4"">Item 4</a></li>
            <li class=""nav-item""><a class=""nav-link "" href=""#item5"">Item 5</a></li>
          </ul>

        </div>
      </div>
    </nav>
    
    <section class=""border border-5 bg-warning w-100 text-center display-1"" id=""item1"" style=""height: 500px;"">Item 1</section>
    <section class=""border border-5 bg-info  w-100 text-center display-1"" id=""item2"" style=""height: 500px;"">Item 2</section>
     <section class=""border border-5 bg-warning w-100 text-center display-1"" id=""item3"" style=""height: 500px;"">Item 3</section>
     <section class=""border border-5 bg-info w-100 text-center display-1"" id=""item4"" style=""height: 500px;"">Item 4</section>
     <section class=""border border-5 bg-warning w-100 text-center display-1"" id=""item5"" style=""height: 200vh;"">Item 5</section>

    <!-- Optional JavaScript; choose one of the two! -->

    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"" integrity=""sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW"" crossorigin=""anonymous""></script>
  </body>
  </html>```
--
",NightZan999,"
--
Same thing happens with me!
--

--
> This is not isolated. Scrollspy is extremely buggy.

Exactly! Scrollspy has like 170 issues currently which have not been resolved. Normal scrollspy (not using bs4 to do them) might be a better option. Only that when working with BS you can't use normal scrollspy because of overrides! 

**If you migrate your project to v5 it may not happen, although I am not sure of this**
--

--
I am pretty sure this is actually a problem with the javascript of bootsrap scrollspy check #32600 about the same. Shows in depth details about the javascript and source code. **I might legit fork this and correct and make some changes.**
--

--
So basically, the last refreshed item when reloaded gets highlighted. This is because bootstrap logs the last scroll and puts a certain item in the navbar (class: nav-item) with it! Then sees last scroll made and highlights the nav-item which is paired with it. 

The javascript has to be reworked on because, scrollspy is very glitchy. 
--
",aribudin,"
--
Same problem
if you scroll down (content 3 and navlink 3) and reload the page, after reloading the page scroll again to top. You will get the problem ( content 1 in navlink 3 )
--

--
I hope this problem will fixed in stable release version
--
",harnishdesign,"
--
I am working on my project for migration v4 to v5. This is same happens with me in v5 after reloading the page scroll again. It was working fine in v4. 
--

--
 Issue is still in **bootstrap-5-beta-3**. have you finally any fixed by officially ? @mdo 
--
",sormiston,"
--
This is not isolated.  Scrollspy is extremely buggy.
--
"
32333,OPEN,File input styling issue with high DPI,css; v5,2020-12-04 10:15:09 +0000 UTC,XhmikosR,Opened,,"* Firefox 83
* Windows 10
* 175% DPI

<img src=""https://user-images.githubusercontent.com/349621/101151048-c6b14f00-3629-11eb-87fc-9ef29a90c054.png"" alt=""image"" width=""400"">

Chromium Edge doesn't have the exact issue; there's still a white background but it's smaller.

Noticed it while viewing the [Cheatcheet](https://twbs-bootstrap.netlify.app/docs/5.0/examples/cheatsheet/#sizing). I'm not sure if there's something we can do as it seems a browser issue with high DPI and rounding.",,,,,,,,,,,,,,
32330,OPEN,RTL: remaining tasks,docs; feature; help wanted; needs tests; rtl; v5,2021-02-23 20:01:17 +0000 UTC,ffoodd,In progress,,"Mostly around cheatsheet automation.

## Questions

- [ ] Move cheatsheet from examples to main docs?
  - [ ] Allow main docs to be passed a `direction` in the front matter and have that automatically toggle LTR to RTL CSS inclusion
  - [ ] _The above items should resolve most of this, but..._ De-dupe the RTL CSS once moved
  - [ ] Convert page content to Markdown
  - [ ] And https://github.com/twbs/bootstrap/pull/30980#issuecomment-737096962 :
    - Does our doc layout need to be converted to RTL too?
    - Or do we only embed RTL content in our current LTR doc layout?
    - What about translations, if we manage to automate cheatsheet content?
- [ ] consider to show utilities in the cheatsheet?

## Need help

- [ ] check and update Arabic translations in [RTL cheatsheet](https://getbootstrap.com/docs/5.0/examples/cheatsheet-rtl/) and [RTL examples](https://getbootstrap.com/docs/5.0/examples/#rtl) → in progress in #33097
- [ ] new example showing bidi content, as [asked by @arafalov (comment)](https://github.com/twbs/bootstrap/issues/32330#issuecomment-743319982)
  - That's a valid use case for `<bdi>` and `<bdo>`, I guess:  [HTML5Doctor.com content](http://html5doctor.com/element-index/#bdi) and [MDN docs for `bdi`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdi) and [`bdo`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdo)
- [ ] Allow JS components to work in both directions in the same page? See #33076 #32446 #32913 

## Docs improvements

- [x] maybe mention specific how-tos? → #32771
  - [x] wrapping outputs with `.ltr` / `.rtl`: https://github.com/twbs/bootstrap/issues/32666#issuecomment-753880015
  - [x] rename / alias utilities: https://github.com/twbs/bootstrap/discussions/32402#discussioncomment-194697 (probably in our ""Customize / Sass"" or ""Utilities / API"" page?)
- [x] mention in our migration that if you had a RTL page styled using v4, you'd need to rename `.ml-*` to `.me-*` and `.mr-*` to `.ms-*`—basically the opposite of LTR. → #32771
- [ ] Maybe explain more explicitly the single Sass souce and the need to run RTLCSS, in a custom build? See #32816 for example.
  - [ ]  Also need to make it obvious that RTL and LTR are separate files that cannot be used at the same time, maybe in our ""Approach"" section?
- [ ] RTL content in LTR docs require a `<bdi dir=""rtl"">` wrapper? See [@AqeelAT's comment above](https://github.com/twbs/bootstrap/issues/32330#issuecomment-783534308).

## Chore

- [ ]  Add/enhance RTL JS tests: ping @twbs/js-review for help on this <3
- [x] for carousel directions → Done in #32436
- [x] for dropdowns / tooltips / popovers position, and for modals padding → Done in #30980

Personal note, as I'm getting exhausted by all those naming/aliasing/restoring utilities discussions:

- [ ] fork v5 personally and simply add some `$utilities` override to provide a solid and oldish v5 using v4 utilities (and dropping RTL support).
",,,FaridAghili,"
--
#32327

Great job, noticed this issues so far.
--

--
It's still not much work as a couple of find/replace commands will do the work.

It's a huge step forward to support RTL languages since many modern UI frameworks have support for it, it worth the effort.
--
",pau1phi11ips,"
--
Is there a discussion somewhere for the huge amount of work it's going to add to migrations changing l/r to s/e?
--

--
I've checked out the migration guide. Moving from 4 to 5 didn't look like it's be that much work until the left/right to start/end bombshell. I was just surprised I couldn't find any existing discussions on the change.
--

--
Thanks for the links @ffoodd, that's what I was after in the first place. Sorry I missed the news about this before.

I appreciate having RTL support is good for Bootstrap. Just not sure it's method is the best for what must be over 95% of current Bootstrap 4 users. Maybe memories of updating all our frontend pages from Bootstrap 3 to 4 is making me react more severely to breaking changes in 4 to 5 though 😏 Migrating Bootstrap 3 to 4 took frickin' ages to complete.
--
",ffoodd,"
--
@pau1phi11ips You may [open a discussion](https://github.com/twbs/bootstrap/discussions/new) if you need; regarding migration, I'd suggest you [have a look at our migration guide](https://getbootstrap.com/docs/5.0/migration/#rtl).
--

--
Well @pau1phi11ips, the [PR itself](https://github.com/twbs/bootstrap/pull/30980) is probably the biggest discussed PR in Bootstrap history, and its description links to dozens of previous discussions—with the latest one #30918 helping to choose the way we wanted to implement RTL. It's been announced several times on Twitter and on our blog (in our alpha releases announcements). 

I don't know what more we could've done, but any suggestion is welcome since we can improve our docs and communication before we hit stable release, to prevent anyone from being surprised like you were.

This is a major release because of those breaking changes. And as @FaridAghili said, changes are 1:1 for class names, so it's really straightforward.
--

--
@arafalov You're right, our approach (currently) is to have two separate files: one for LTR and one for RTL—meaning you can't use both at the same time. And it seems legit since your document has a main language.

However everything still works, so regarding mixed contents you'd do like you did before: using our utilities to layout things (and `dir` & `lang` attributes, obviously). We may add a dedicated example with mixed contents, that could help?

My hope is that logical properties will eventually be supported enough when we'll start v6, so that we drop RTLCSS and separate files. That would solve the mixed content case :) 

BTW, are you aware of any tool or framework that handles mixed languages contents in another way? Every source and inspiration is good to know.


--

--
@omoridi What issue are you solving? Please open a pull request if you have any patch to submit.
--

--
@omoridi And this is exactly what it does: ensure `direction` is `ltr` even in RTL file. Could you please read our docs, RTLCSS' one and check our RTL cheatsheet example? That way you'll see what's the real result.
--

--
@omoridi If I understand correctly, you'd need bidi stylesheets, not simply RTL and LTR side-by-side. This is not what we've done currently—and it's explained [in another issue's comment](https://github.com/twbs/bootstrap/issues/32666#issuecomment-753880015). You're the one who opened the said issue, I answered with a precise code sample and solution.

I even added to the current tasks list an item to document this solution—so please consider answering in your previous issue because for now we're only polluting this one.
--

--
@omoridi Please open a dedicated issue for bugs, thanks — and please provide a reduced test case with at least some explanations.
--

--
@AqeelAT We discussed this possibility while implementing RTL. Logical properties cannot be used throughout our codebase as of now ([everything isn't supported yet, e.g. `inset` property, `float` logical values, etc.](https://elad.medium.com/why-css-logical-properties-arent-ready-for-use-c102925a5cba)). And we don't want to use them in some places and not others, to keep consistency.

Moreover since we only target RTL support for now, only horizontal direction related properties are considered: there's definetely a nonsense in changing our paradigm for horizontal direction and not the vertical one.

In the renaming part of our RTL implementation (in #31210) we considered logical names too, but we came to the conclusion that it'd make too much breaking changes that aren't mandatory to provide RTL support.

IMHO, v6 (in a few years) will drop RTLCSS and rely on logical properties only. But that's not ready yet for Bootstrap.
--

--
@AqeelAT There's an RTL directive to ignore this rule — don't remember why. But it's as simple as dropping this `ignore` rule, so here it is: #33154.

--

--
@AqeelAT I'm not sure to understand your last comment, would you have an example where surrounding would be mandatory?
--

--
Wow @AqeelAT thanks for finding this, I had no idea! Need to check if Hugo allows some tweaks for such cases, but I'll add this to the to-do list.

Thanks again for your contributions, I'm learning a lot :heart:
--
",arafalov,"
--
Is it fair to say that the RTL approach chosen is all or nothing? Is it possible to have a website (e.g. CMS-generated) where an article or slideshow content in English is mixed with another in Arabic? 
I did not dig into this super deep, but the initial documentation seems to indicate that. And, in cheatsheet, I did not see things like **bdi** element and I did see related issues with elements like ""...browse"" because of neutral nature of ""."" character in native input elements.

This may be quite important limitation to help people understand what is actually possible. Mixed content is a messy reality for multilingual organizations, so if you have position (or workarounds or even just thoughts), it would be great to know.
--

--
@ffoodd  Thank you for the clarification. Yes, I think a dedicated example with mixed content would really help. The bidi is a hard topic, so extra level of clarification early on and demo examples would really simply developers' life and understanding the level of built-in/additional support/effort required.

I am not aware of any other framework doing this better, unfortunately. Drupal does try to support mixed languages content, but that probably does not qualify as framework. 
--
",omoridi,"
--
Hi, why this block is remarked in rtl file?

/* rtl:raw:
[type=""tel""],
[type=""url""],
[type=""email""],
[type=""number""] {
  direction: ltr;
}
*/

always these must be ltr
--

--
> @omoridi And this is exactly what it does: ensure `direction` is `ltr` even in RTL file. Could you please read our docs, RTLCSS' one and check our RTL cheatsheet example? That way you'll see what's the real result.

Hi, excuse me for late answering,
I write a simple application with .net core, that's convert bootstrap.rtl.css to another file.
why? because!
1- You can have rtl and ltr bootstrap objects at same time on the one page!
2- The rtl file too simple and small.
`.rtl dd {
    margin-right: 0;
}` 
3- every where if you like you can use rtl class as class='rtl' in body, in div or anywhere else.

I test it, it's okay but, some class must be changed in main bootstrap, 
where? like you set margin-left and rtlcss changed to marign-right and my simpler application only used marign-right and div have to class margin-left:some value and margin-right:same value.
if main bootstrap we must set both value or add some fixer class to fixed that issue.

so what we can? i try to fixed on bootstrap or add helper class for rtl?
if you want the rtl sample css, let me say or wait to completed.
--

--
> @omoridi If I understand correctly, you'd need bidi stylesheets, not simply RTL and LTR side-by-side. This is not what we've done currently—and it's explained [in another issue's comment](https://github.com/twbs/bootstrap/issues/32666#issuecomment-753880015). You're the one who opened the said issue, I answered with a precise code sample and solution.
> 
> I even added to the current tasks list an item to document this solution—so please consider answering in your previous issue because for now we're only polluting this one.

Hi, Another problem.
.card-link + .card-link {
    margin-left: 1rem /* rtl:ignore */;
}

do not ignore it, let changed to margin-right.
--

--
> @omoridi Please open a dedicated issue for bugs, thanks — and please provide a reduced test case with at least some explanations.

Let me time, i will be send a test page with .rtl class 😊.
--

--
> @omoridi What issue are you solving? Please open a pull request if you have any patch to submit.

Hi, Please check
https://github.com/twbs/bootstrap/pull/32807/commits

If you used this method, do not need change any document for rtl! 
--

--
Dir is not good idea!
if you want to support right direction use start end properties not left and right.
but this is have an issue chrome version 89 and above support it firefox version 66 and above other browser do not support.
https://developer.mozilla.org/en-US/docs/Web/CSS/border-end-end-radius

but I like this and I will use it.
--
",AqeelAT,"
--
What do you guys think about changing all margins to:
- margin-left -> margin-inline-start
- margin-right -> margin-inline-end
- margin-top -> margin-block-start
- margin-bottom -> margin-block-end
(same thing with padding)

Even though it's a [draft](https://drafts.csswg.org/css-logical/#propdef-margin-block-start), it has good [browser support](https://caniuse.com/?search=margin-block-start)
--

--
@ffoodd I mentioned this because in scss/_card.scss:72, the margin does not make sense for rtl. I tried to replace it with margin-inline-start and it worked well. see the itemized card here: https://getbootstrap.com/docs/5.0/examples/cheatsheet-rtl/#card
What's another solution for this? I searched for `.card-link` and it was only in that one file.

--

--
Converting Markdown to HTML should surround rtl text with a `<bdi dir=""rtl"">` tag
--

--
@ffoodd  For some weird reason, RTL text is arranged from left to right, and then displayed as such. Imagine it this way:
the sentence: ""hello world"" becomes ""dlrow olleh"" and then written in cursive in this order.

This explains it.
[link to the page](https://getbootstrap.com/docs/5.0/getting-started/rtl/).
![https://imgur.com/0yNj9n6.png](https://imgur.com/0yNj9n6.png)
--
"
32236,OPEN,Bootstrap should have a color pallet like implemented in Tailwind CSS out of the box,docs; feature; has-pr,2021-01-14 02:12:11 +0000 UTC,rx5700xt,In progress,,"For changing the color we should have classes like

red-100, red-200 till red-900 each class increasing the color strength .100 being the lightest red and 900 being the brightest

Similar color pallet must be developed for most colors included in bootstrap template out of the box and without any kind of sass or scss compilation. 
https://v5.getbootstrap.com/docs/5.0/customize/color/
",,,patrickhlauke,"
--
personally no, not a fan of copying all this tailwind approach to ""a class for every possible property and every possible value of that property""
--
",rx5700xt,"
--
Its not copying but Bootstrap already has a color palette which should come implemented out of the box..:)
https://v5.getbootstrap.com/docs/5.0/customize/color/
--
",rexarvind,"
--
just create on your own, like this

```
.bg-grey-100{background-color:#F3F4F6}
.bg-grey-200{background-color:#E5E7EB}
.bg-blue-50{background-color:#EFF6FF}
.bg-teal-50{background-color:#F0FDFA}
.bg-teal-700{background-color:#0F766E}
.bg-teal-800{background-color:#115E59}
```
--
",mdo,"
--
I mean, we could definitely do this, and encourage folks to use PurgeCSS on top of Bootstrap, but I feel like most folks wouldn't take that step. I've opened #32319 to document some kind of approach here.
--
",,,,
32230,OPEN,Bootstrap v5 - Animation Directives,css; feature; help wanted,2021-02-04 14:50:41 +0000 UTC,tim-montague,Opened,,"Please expose animations for Bootstrap v5. There is an enormous wow-factor missing, because developers can't leverage standardized `animate-*` directives.

## Animation libraries with Bootstrap are sub-optimal

- TailwindCSS  [https://tailwindcss.com/docs/animation](https://tailwindcss.com/docs/animation) is offering - `animate-ping`, `animate-pulse`, `animate-spin`, and `animate-bounce`
- Animate.css [https://animate.style](https://animate.style) has had animations for a few years - `animate-bounce`, `animate-flash`, `animate-pulse`, `animate-rubberBand`, `animate-shakeX`, `animate-shakeY`, `animate-headShake`, etc
- React-Spring [https://www.react-spring.io/docs/hooks/examples](https://animate.style) provides animation chains. And Bootstrap components (and sub-components) could have animation chains (see [https://codesandbox.io/embed/2v716k56pr](https://codesandbox.io/embed/2v716k56pr))

Some might question ""Why not just use these libraries with Bootstrap?"", but for anyone that has spent time with these libraries - they aren't made for Bootstrap components - and getting these to work cleanly with Bootstrap requires a lot of customization. Essentially any work is an unofficial hack, because it can introduce glitches, and can become obsolete when the Bootstrap framework moves to the next version.

## Bootstrap animations should be standardized

I think that by default, all components should be given `animate-toggle` (or `a-toggle` for short), which is a simple show-hide animation. Currently, components use a mix of animations without standardization.

For example:
- Alerts with `alert-dismissible` should by default use `a-toggle` (not `a-fade`)
- Carousel slides behave correctly, the default is `a-toggle` and the `a-slide` is needed for the slide animation. However, the controls should not be animated on hover without `a-hover-light`.
- Collapse and Accordian should by default be `a-toggle` (not `a-slide-down`)
- Checkboxes should be `a-toggle` (not `a-fade`)
- List groups (tabbable panes), behave as expected (use `a-toggle` by default), but the buttons should use `a-hover-darken`
- Models should not have fade or backdrop by default, unless given `a-fade-down`, `a-fade-up`, and the backdrop `a-fade`
- Navs tabs behave as expected (use `a-toggle` by default)
- Popover should be `a-toggle` (not `a-fade`)
- Progress bar that is animated should be `a-bg-slide-left` (not `progress-bar-animated`)
- Spinners should be `a-spin-right`, and `a-pulse`
- Toasts, and Tooltips should be `a-toggle` (not `a-fade`)

More trivial examples:
- Buttons and links should not change on hover without `a-hover-dark`, and `a-hover-underline`
- Dropdown buttons and Inputs, should not outline without `a-outline`
- Checkbox, Range, and Radio should not darken on click-down, unless given `a-darken` class

## Also consider animation chains
```html
<span class=""first-element a-fade-in"">Good</span>
<!-- this animation runs after the previous animation stops -->
<span class=""a-fade-in"" data-animate-after=""first-element"">Morning</span>
```",,,3n1k0,"
--
Hello, can I work on this issue?
--
",,,,,,,,,,
32130,OPEN,Floating labels: label and sizing,css; feature; v5,2020-11-12 18:20:04 +0000 UTC,2acode,Opened,,"Floating labels are really useful, thanks.

But I think they really take up a lot of space.
A behavior similar to Material Design 2.0 would be preferable with the label going over the edge:
https://mdbootstrap.com/docs/jquery/forms/inputs/#outline-inputs

Also it would be useful to have the ability to change the size (form-floating-sm).

Thanks again
Alessandro",,,mdo,"
--
No plans to put labels over the borders. Sizes maybe, so we'll leave this open for that.
--
",,,,,,,,,,
32096,OPEN,docs: lint JS snippets in Markdown and HTML files too,build; help wanted,2020-11-21 12:33:42 +0000 UTC,XhmikosR,In progress,,,,,rohit2sharma95,"
--
There is an eslint plugin for markdown files though:
https://github.com/eslint/eslint-plugin-markdown

But it only lints fenced code blocks in markdown files.
--
",XhmikosR,"
--
That's what I had in mind too :)

Feel free to make a PR if you get it to work; linting md files is better than nothing and now we do use fenced code blocks for most of the things apart from examples.
--
",,,,,,,,
32082,OPEN,docs: Review necessarity of warning about customizing values form-valiation-state mixin,,2020-11-25 09:26:19 +0000 UTC,ydmitry,Opened,,"Wanted to ask about phrase in the docs in `/site/content/docs/5.0/forms/validation.md`:

```
Please note that we do not recommend customizing these values without also modifying the `form-validation-state` mixin.
```

Should we keep this? Why need to modify a mixin? Seems should be OK now without modifying. What do you think?

_Originally posted by @ydmitry in https://github.com/twbs/bootstrap/pull/31757#discussion_r499489191_",,,ffoodd,"
--
I guess it's related to the pseudo-classes, which used to be generated even when it wasn't `valid` or `invalid` (resulting in invalid selectors). It's been fixed in #28447 1.5 years ago — and now outputs `.is-#{$state}` instead of ``:#{$state}`.

So the sentence you're pointing can be safely removed IMHO.
--
",,,,,,,,,,
32070,OPEN,Passive event listeners,feature; help wanted; js; performance,2020-12-03 16:53:58 +0000 UTC,Masner,Opened,,"Bootstrap v5-alpha2 uses only non-passive event listeners. But there are use-cases, where passive event listeners would be prefered. For example scroll-spy, which seems to be laggy right now.",,,,,,,,,,,,,,
32044,OPEN,Add Chromium Edge launcher in karma,feature; help wanted; js; tests; v4; v5,2020-11-20 09:06:35 +0000 UTC,XhmikosR,In progress,,https://github.com/ChiragRupani/karma-chromiumedge-launcher,,,XhmikosR,"
--
I had a quick look and it seems https://github.com/litixsoft/karma-detect-browsers doesn't support Chromium Edge. Not sure if there's a way to bypass this and use the above package @Johann-S?
--

--
Chromium Edge != Chromium :)

But feel free to try; it didn't work for me when I tried it.
--

--
Yeah, I mean the new Edge Chromium which is preinstalled on Windows nowadays :)
--
",Johann,"
--
it seems https://github.com/karma-runner/karma-chrome-launcher handle Chromium, so I don't understand what's the issue here 🤔 
--

--
Oh ok I understand you mean Edge working with Chromium under the hood
--
",,,,,,,,
32034,OPEN,Stack space for flow elements,css; feature,2020-12-03 05:47:31 +0000 UTC,thewebartisan7,In progress,,"This feature is best explained here:
https://every-layout.dev/layouts/stack/

And an example can be found here:
https://jsfiddle.net/c2fbo0u3/1/

In the example I have just added two different space size, 1.5rem and large 3rem, but could be also added more.

As explained in every-layout.dev this is useful when we need to add space between elements, and in addition I added space X and Y, something like already bootstrap m-* utilities offer.

So instead of writing:

```html
<div>
<div></div>
<div class=""mt-3""></div>
<div class=""mt-3""></div>
</div>
```

Can be:

```html
<div class=""stack-y"">
<div></div>
<div></div>
<div></div>
</div>
```

Or instead of:


```html
<div class=""d-flex"">
<div></div>
<div class=""ml-3""></div>
<div class=""ml-3""></div>
</div>
```

Can be:

```html
<div class=""d-flex stack-x"">
<div></div>
<div></div>
<div></div>
</div>
```

Here https://jsfiddle.net/c2fbo0u3/1/ there are all examples, also creating a reverse space for space-x, and nested.

Nested could be also created without using space-nested but just adding for each nested element the same space-x/y classes. Example:

```html
<div class=""stack-x stack-nested d-flex"">
  <div>Stack nested X One</div>
  <div>Stack nested X Two</div>
  <div class=""d-flex"">
    <div>Stack nested X One</div>
    <div>Stack nested X Two</div>
    <div>Stack nested X Three</div>
  </div>
</div>
```

Can be:


```html
<div class=""stack-x d-flex"">
  <div>Stack nested X One</div>
  <div>Stack nested X Two</div>
  <div class=""stack-x d-flex"">
    <div>Stack nested X One</div>
    <div>Stack nested X Two</div>
    <div>Stack nested X Three</div>
  </div>
</div>
```",,,mdo,"
--
This is very familiar to [Pylon's hstack/vstack approach](https://almonk.github.io/pylon/). Very intriguing to me also considering #31995 and not wanting to have a single component-based layout option. I'd go further than here and suggest that it be `display: flex` by default and offer inline-spacers via CSS customer properties. Example: https://codepen.io/emdeoh/pen/Bazxbrq.
--

--
Our new `.d-grid` and `.gap` utilities make this a lot easier for vstack variations. hstack would still theoretically require more code, but a `.d-grid-row` helper class could provide that. https://codepen.io/emdeoh/pen/VwjEgog
--

--
Check out #32320.
--
",thewebartisan7,"
--
Yes I agree to be already display flex, that is how I setup mine custom at the moment. 
I didn't mention but using already display flex, for `.hstack` (btw I like so much this name `.vstack` / `.hstack` that you use), then can be possible to create also reversed order. At the moment I have a `.stack-x-reverse` (or better `.hstack-reverse`)

```css
.stack-x-reverse {
    display: flex;
    flex-direction: row-reverse;
    justify-content: flex-start;
    > * { margin-left: 0; margin-right: 0; }
    > * + * { margin-right: 1.5rem; }
    &.stack-lg > * + * { margin-right: 3rem; }
    &.stack-nested {
        * { margin-left: 0; margin-right: 0; }
        * + * { margin-right: 1.5rem; }
        &.stack-lg * + * { margin-right: 3rem; }
    }
}
```

I like also idea of css custom properties inline, so we don't need another set of margins. But anyway, most of time I use only 2spaces, small and large.
--
",,,,,,,,
31980,OPEN,Link old Bootstrap docs to latest release,docs,2021-01-27 14:18:05 +0000 UTC,mdo,Opened,,"This likely is going to be a pain in the ass, but I wanted to capture some thoughts regardless of where we land on it. My hope is that we can put some time into our old v4.x docs and update them with new outdated release banners and links to the latest versions of each page in our versions pickers. I'd like help brainstorming our approach to this, because right now all I can think of is manually doing it one by one.

Two things are on my mind for it.

## Updated new release banner

First is updating the release banner, and adding it to all previous v4.x releases.

![bootstrap-newer-version-banner](https://user-images.githubusercontent.com/98681/97257860-59adcc80-17d4-11eb-9c38-4072d567c152.png)

Right now there's a thin banner on the 4.0, 4.1, and 4.2 docs. We don't have them on 4.3 or 4.4, and soon 4.5 (after we ship our next v4.6.0 release). At a minimum, we need to:

- [ ] Add banner 4.3
- [ ] Add banner to 4.4

And for the stretch goal, we take it 1-2 steps further:

- [ ] Change the links of each banner to be page-specific (as in, don't link to `https://getbootstrap.com` on every banner)
- [ ] Redesign the banner to be larger and more noticeable

## Updated versions dropdown

Beyond the new version banners, I'd like us to do something more with our versions dropdowns in the navbar. Each version of our docs (4.0–4.5) is different, which leads to unfortunate experiences of viewing outdated docs and not being able to easily jump to the latest version of the page.

Question is, do we include every version like so?

- **4.0:** 4.1, 4.2, 4.3, 4.4, 4.5
- **4.1:** 4.2, 4.3, 4.4, 4.5
- **4.2:** 4.3, 4.4, 4.5
- **4.3:** 4.4, 4.5
- **4.4:** 4.5
- Bootstrap v5.x

Or, do we do the version you're reading, the latest v4.x, and the latest v5.x like so?

- 4.0: 4.5
- 4.1: 4.5
- 4.2: 4.5
- 4.3: 4.5
- 4.4: 4.5
- Bootstrap v5.x

And, lastly, for all v4 and v5 versions dropdowns, do we include links to v3 and v2? Thinking we can drop those with these changes, and keep the `All versions` link.

## v3?

Beyond v4's docs, I'm wondering if we need to update v3.4's docs to modify the new release banner and versions dropdown. Thinking we modify the text in the banner to mention v4 and v5. With the dropdown, I'm thinking we remove the v4 alpha 6 release finally, update `Latest (4.x)` to `Bootstrap v4.x`, and add `Bootstrap v5.x`. Both the v4 and v5 could point to their latest releases instead of all the releases.

## Screenshots of dropdowns

Just for quick comparison...

<img width=""585"" alt=""Screen Shot 2020-10-26 at 11 13 41 AM"" src=""https://user-images.githubusercontent.com/98681/97257930-7fd36c80-17d4-11eb-8612-abed4cd179be.png"">
<img width=""619"" alt=""Screen Shot 2020-10-26 at 11 13 53 AM"" src=""https://user-images.githubusercontent.com/98681/97257931-806c0300-17d4-11eb-9c14-eac2c4f5cbed.png"">
<img width=""620"" alt=""Screen Shot 2020-10-26 at 11 14 01 AM"" src=""https://user-images.githubusercontent.com/98681/97257933-81049980-17d4-11eb-85fc-ca701bca0025.png"">
<img width=""589"" alt=""Screen Shot 2020-10-26 at 11 14 13 AM"" src=""https://user-images.githubusercontent.com/98681/97257935-81049980-17d4-11eb-9d93-41279b9346f1.png"">
<img width=""579"" alt=""Screen Shot 2020-10-26 at 11 13 08 AM"" src=""https://user-images.githubusercontent.com/98681/97257923-7d711280-17d4-11eb-9eee-9b6f52db41c2.png"">
<img width=""622"" alt=""Screen Shot 2020-10-26 at 11 13 22 AM"" src=""https://user-images.githubusercontent.com/98681/97257925-7ea23f80-17d4-11eb-89c4-c5810a94bb4a.png"">


---

What do you think @twbs/team?
",,,hashnimmo,"
--
> I'd like help brainstorming our approach to this,

You can also take a dynamic approach:

1. Build one dynamic page design that can be applied to every version.
2. Remove the version number from the URL.
3. Make the version dropdown default to the latest.
4. Make the user selection as the default if the user selects an older version and keep it in a `cookie` so it will stay like that even on a full page refresh until the user selects another version or cleared the `cookie`.
5. Dynamically fetch the documentation information from each version to fill/remove each section of the above one dynamic page.

The fetch documentation database for each version can even be just plain `.txt` files (with or without `html` codes), so you can keep each section/part of the documentation for each version as separate `.txt` files, easily editable for the team when required. The common documentation for all the versions stays as a single file for each common section, edit once and it will be shown for all the versions.

Search engines will see the common links as there's no version number in the URL anymore, which is great for both the people who want the latest version and those who still using the older versions. The dropdown version value can be passed using a `cookie`, I'm not sure about a way for `cookie` disabled browsers, maybe using a URL parameter, but again keep an eye on SEO. For JavaScript disabled browsers, handle the fetch using PHP, both scenarios can be handled by this one dynamic page `index.php`, which means the website is already handled by PHP as the foundation and it doesn't matter if the user has disabled JavaScript or not, [Progressive Enhancement](https://google.com/search?q=progressive+enhancement) methods can be used for this. Overall, I'm not so sure about this or an expert in this, but just an idea.
--
",Lausselloic,"
--
as documentation is static, maybe store a file with versions value in json format, and load that file in Javascript
- need to update application.js for all actual version
- define the json format
--
",Johann,"
--
A dynamic way would be to find if Github provide an API, which allow us to fetch our tags and use our tags to select a version (+ a bit of JavaScript)
--
",ffoodd,"
--
What about only linking to latest (for each major) only, using a simple redirection? We may use `/4/` to redirect to (currently) `/4.6/` and so on. 

This would help with maintenance a lot since we'd only have links to majors—and replacing those dropdowns everywhere would be done once (and updated for each major, which isn't that frequent).
--
",XhmikosR,"
--
That doable for sure, and easy to maintain. We'd still need to change the old live docs to read `4.x` etc.

A more flexible approach would be to have a placeholder HTML, then use JS to fetch our docs and create the toggler client-side. That would probably have a speed penalty, though. Plus if we host the version file on GitHub, their API limits might apply.
--
",,
31966,OPEN,Add context menu dropdown support,feature; help wanted; js,2021-01-14 05:58:58 +0000 UTC,techboyg5,In progress,,"[This code](https://codepen.io/techboyg5/pen/dyXvVeY?editors=1000)

Gives you a context menu dropdown. How about adding support for this into Bootstrap?",,,Deckluhm,"
--
You should provide a demo (CodePen, JSFiddle or equivalent) instead of just providing the code, it's way easier for people to test.
--
",patrickhlauke,"
--
proper context menus also need to handle focus - they act like a modal, so when opened, move focus to the first menu item, keep focus contained inside the modal menu, on closing return focus to where it was before the menu was invoked, etc.
--

--
conceptually it's closer to a modal, with its focus moving/trapping/resetting behaviour
--
",techboyg5,"
--
> proper context menus also need to handle focus - they act like a modal, so when opened, move focus to the first menu item, keep focus contained inside the modal menu, on closing return focus to where it was before the menu was invoked, etc.

Yeah. I'm just giving a rough example of what I want.
--

--
> proper context menus also need to handle focus - they act like a modal, so when opened, move focus to the first menu item, keep focus contained inside the modal menu, on closing return focus to where it was before the menu was invoked, etc.

https://codepen.io/techboyg5/pen/dyXvVeY?editors=1000
--
",mdo,"
--
Could be interesting to extend the Dropdown plugin to support something like this.
--
",,,,
31949,OPEN,<button> and <a> dropdown-items appear differently on focus in Chromium,css,2020-11-11 16:53:16 +0000 UTC,bbugh,Opened,,"I originally [reported this in the bootstrap-vue repository](https://github.com/bootstrap-vue/bootstrap-vue/issues/5943) but it appears to be an upstream issue, so I'm copying most of that bug report over to here with some tweaks for context.

### Describe the bug

In Chromium, `dropdown-item` on a `button` shows a border when `:focus`ed, but `dropdown-item` on a `a` tag does not.

<img width=""421"" alt=""image"" src=""https://user-images.githubusercontent.com/438465/96776425-a34e7f80-13ae-11eb-8d57-3da77700e39b.png"">

(Backgrounds are lightened to show the border effect)

`dropdown-item` on a `button` seems to be picking up the `button` `outline: -webkit-focus-ring-color` effect from Reboot. 

https://github.com/twbs/bootstrap/blob/ebd9eb105ab094af747c09082ced1df71aaec123/scss/_reboot.scss#L419-L422

Firefox does not support `-webkit-focus-ring-color` so it show the single dotted outline on both `a` elements and `button` elements.

This issue arose when we started using a dropdown that includes both `button` and `a` tag `dropdown-item`s, so a user clicking and/or using the keyboard will see two different focus behaviors in the same menu.

### Steps to reproduce the bug

1. Create a dropdown
2. Add a button `dropdown-item`
3. Add a link `dropdown-item`
4. Observe that their focus behavior is different

[demo](https://codesandbox.io/s/b-dropdown-item-button-styling-1ier8?file=/App.vue)

### Expected behavior

I would expect the designs of these to behave consistently on all browsers, either both with or both without the `outline`.

### Versions

**Libraries:**

- Bootstrap: 4.5.3

**Environment:**

- Device: Mac
- OS: Mojave
- Browser: Firefox (consistent), Chromium (this issue)
- Version: 81.02, 86.0.4240.99

### Demo link

https://codesandbox.io/s/b-dropdown-item-button-styling-1ier8?file=/App.vue",,,patrickhlauke,"
--
to clarify that when navigating with keyboard, both the link and the button have the same appearance when focused. when clicking with the mouse, though, the browser will apply heuristics to determine if focus outline should be shown or not for the link, but for button the explicit `:focus` always applies even if clicked with mouse rather than focused via keyboard navigation.

this is one of those cases where `:focus-visible` would be useful, if it were supported properly ... which sadly it currently isn't
--
",spahno,"
--
As a part of an university project, me and my team are trying to resolve the issue. 😄
@spahno
@LtHustensaft
@lewe98
--
",,,,,,,,
31944,OPEN,Support native ES6 module loading,help wanted; js,2020-12-19 05:18:00 +0000 UTC,kubaszostak,Opened,,"According to v5.0 documentation *Bootstrap provides a version of Bootstrap built as ESM (bootstrap.esm.js and bootstrap.esm.min.js) which allows you to use Bootstrap as a module in your browser*. It's not true if you want to imort *bootstrap.esm.js* module in vanilla Javascript (tested in 5.0.0-alpha2). In documentation we have [example](https://v5.getbootstrap.com/docs/5.0/getting-started/javascript/#using-bootstrap-as-a-module) with such module import:
```js 
import { Toast } from 'bootstrap.esm.min.js'
```
It wouldn't work in pure Javascript because so-called “bare” module specifiers are currently not supported in ECMAScript modules specification. Module specifiers must be full URLs, or relative URLs starting with `/`, `./`, or `../`. It's not a problem to set proper URL:

```js 
import { Toast } from './js/bootstrap.esm.min.js'
```

Unfortunately such import raises browser exception *Uncaught TypeError: Failed to resolve module specifier ""popper.js"". Relative references must start with either ""/"", ""./"", or ""../"".*.
![image](https://user-images.githubusercontent.com/4609437/96650146-9be99080-1332-11eb-8fc0-7887bafb1f9f.png)

Changing `import Popper from 'popper.js'` in to `import Popper from './popper.js'` doesn't help. Such import raises another browser exception  *Uncaught SyntaxError: The requested module './popper.js' does not provide an export named 'default'*.
![image](https://user-images.githubusercontent.com/4609437/96649672-dc94da00-1331-11eb-8a91-9dea4c0c78a2.png)

As far I find out Propper 1.16 doesn't provide native ES6 module. So for testing I commented out Propper import from *bootstrap.esm.js* source code:
```js
// import Popper from 'popper.js';
```
And now native ES6 import system is working!

```html
    <script type=""module"">
        import { Toast } from './js/bootstrap.esm.js'

        let toastElement = document.getElementById(""toast"");
        let toast = new Toast(toastElement);

        let buttonElement = document.getElementById(""button"");
        buttonElement.addEventListener(""click"", ()=> {
            toast.show();
        });        
    </script>
```

Demo page: http://localhost:5500/bootstrap-v5/bootstrap-v5.0.0-alpha2-esm-test/

I know removing Popper causes Dropdowns and Tooltips not working but for me it's not a problem. I think it would be great to have each component (Toast, Alert, Button, ...) in separate ESM module. Folks loving vanilla Javascript like me would be able to import classes that don't depend on Propper without modifying Bootstrap's source code. 

I also think that writing in documentation that *Bootstrap provides a version of Bootstrap built as ESM* is misleading. It's rather UMD module.

---

- Operating system and version: Windows 10
- Browser and version: Opera 71
- Working example using pure ES6 module system: https://qsites.github.io/bootstrap-v5/bootstrap-v5.0.0-alpha2-esm-test/

---

Se also #28386 and #27119
",,,FezVrasta,"
--
Popper 1.6 does support ES modules

https://unpkg.com/browse/popper.js@1.16.1/dist/esm/
--
",XhmikosR,"
--
Any PRs to improve things are welcome. It's been a while since we set up ESM in v5 and things have progressed since then.
--
",septatrix,"
--
I do not see this working with popper in the near future. The best move preventing any confusion would be to adjust the docs to explain that this only works when using a bundler like webpack or similar.

The problem is that popper (even though it supports es modules) is not able to be resolved by the browser. The spec currently only covers relative references like `/script.js` and `./script.js` but not specifiers like `@popperjs/core` which is used in the code. This leads to the aforementioned errors and the module becomes unusable.

The only way I know to fix this would be to use a module bundler which correctly resolves these modules, generate code which uses a relative reference (and therefore locks the location of the dependency in place) or just creating a module with all components except Popper. The first is what I propose we mention in the docs while the last one might be something we could consider for v5.1 or similar although I do not see a big benefit as bundler should solve this IIRC. 
--
",ShivPandey,"
--
How to use Bootstrap as a module in Angular Project?
--
",,,,
31908,OPEN,Carousel accessibility improvements,accessibility; feature; v5,2021-01-03 17:27:51 +0000 UTC,ffoodd,Opened,,"Carousels might be improved, or at least it worths the try: 
  - [WAI ARIA carousel best practices](https://www.w3.org/TR/wai-aria-practices-1.1/#carousel)
  - [WAI Carousel Tutorial](https://www.w3.org/WAI/tutorials/carousels/)

## Required
- [ ] Add a play/pause button
- [ ] Focus the selected item
- [ ] Disable prev/next controls when `data-bs-wrap=""false""` and stopped at one end

## Nice to have
- [ ] Progressive enhancement: adding prev/next buttons and indicators through JS
  - maybe at least drop them when JS is disabled? 
- [ ] Announce the current item using live region: that seems a bit too much IMHO, but hey, suggesting
- [x] Pause on hover/focus
- [ ] Hide transitioning elements from ATs: not quite sure of the current behaviour though, might already be the case.

Docs:
- [ ] Add link to WAI Tutorial, maybe? https://www.w3.org/WAI/tutorials/carousels/

Relates to #22549",,,patrickhlauke,"
--
note that autoplaying carousels already pause/stop on hover (and, to an extent, when tapped on a touchscreen, though i seem to remember there they restart again after a long period of inactivity)

> hide transitioning elements from ATs

non-visible slides are `display:none`, so hidden. do you mean hiding them in the few microseconds where they're transitioning?

i'd also add better/more visible focus indication on prev/next (ideally just for keyboard users - that'd require something like whatinput, which we decided against ages ago - or using the `:focus-visible` stuff at least for future compatibility, and/or with polyfill)
--

--
xref https://github.com/twbs/bootstrap/issues/29494 https://github.com/twbs/bootstrap/issues/22549
--

--
see also https://github.com/twbs/bootstrap/pull/32661
--
",,,,,,,,,,
31907,OPEN,Use Git pre-commit hook?,feature; meta,2020-12-08 20:33:23 +0000 UTC,ffoodd,In progress,,"Requires a new dev dependencies:
- [git-precommit-checks on NPM](https://www.npmjs.com/package/git-precommit-checks) and [Husky](https://www.npmjs.com/package/husky)
- [Trick shared by Maxime Bréhin on Twitter](https://twitter.com/mbrehin/status/1248155892333383680)

This might help us and our contributors to:
- not commit `dist/` files
- not commit unresolved conflicts,
- etc.

This might help to reinforce our contributing guidelines. Only nice-to-have, though—but wanted to share and get some opinions :)",,,mdo,"
--
I'm very down to see this explored!
--
",XhmikosR,"
--
I personally dislike hooks because they slow me down. Assuming this can be implemented in a way that doesn't cause any slowdown, I'd be in favor of this, otherwise against it.
--

--
I had a quick look and I couldn't find any existent action to block a PR. But maybe I missed something.

https://github.com/sdras/awesome-actions
--

--
I don't mind blocking the PR if it includes dist file modifications :) Ping me if you find an action and we'll see about setting it up.
--

--
It's a tricky thing. Basically, we don't want people to commit any `dist/*` files, but we as team members should be able to bypass this. Ideally, the action should listen to a comment from another team member apart from the person who made the PR and allow us to bypass the check, otherwise should fail the build and block the PR.
--
",MartijnCuppens,"
--
Following @XhmikosR here. I used to be a fan of this, but it slows us down more than we'll gain from it. Concerning the dist files, we could add an GH action which checks this I guess?
--
",ffoodd,"
--
Nice idea, we might do something like a bot auto-responding to the PR if dist files are commited.
Thanks for sharing experiences with hooks, what looks like a good idea might not be :D
--

--
Making the action required would block the PR in case of failure. But that may be too much?
--
",rohit2sharma95,"
--
I think it can be done by creating a workflow file that runs tests (Maybe shell script) to check if dist files are modified and you can then mark this test as required in branch protection rules 🤔
And whenever you want to change dist files intentionally, you can use your admin privilege 😄 
--
",,
31885,OPEN,Using .sr-only inside a responsive table creates white space outside of body,css; v4,2020-12-20 00:58:42 +0000 UTC,mrlife,In progress,,"### Description

Giving an element descended from `.table-responsive` the `.sr-only` class will cause the browser window to scroll horizontally due to `.sr-only`'s `position: absolute`.

I checked the docs and don't see any limitations of using `.sr-only` listed. https://getbootstrap.com/docs/4.5/utilities/screen-readers/

Is there a workaround or can something be added to the docs?

### Reduced test case

Reduce the browser width to its smallest and notice that the browser window scrolls, revealing white space to the right of the table. If you remove the `.sr-only` class from the top-right table cell, things behave normally.

https://www.codeply.com/v/0xzRkENQaH

### Config

- Bootstrap 4.5.2
- macOS 10.15.7
- Safari 14.0


",,,mdo,"
--
Anything that's `position: absolute` will be positioned relative to the nearest parent with another `position` or block formatting context. In this case, it's the parent `.table-responsive`. Not sure how to account for this if at all in Bootstrap core, but you can fix it by adding `position: relative` to the `<td>` I believe.

/cc @twbs/css-review for thoughts
--
",mrlife,"
--
@mdo Thanks, I can confirm that is a working solution. Just curious, is @twbs/css-review an internal group mention?

For anyone else who may have this issue, here is the CSS for that:

```
.table-responsive td {
    position: relative;
}
```
--
",patrickhlauke,"
--
coming back to this a bit late, but: would adding the `position: relative` in bootstrap's core CSS cause any other unforeseen problems? if not, we could probably add it directly.

are there any other situations where the `.sr-only` / `.visually-hidden` class would cause similar problems, do we know?
--
",,,,,,
31832,OPEN,[V4 + V5] Add Separator For Same-Colored Button Groups,css; feature; v4; v5,2020-11-21 14:38:34 +0000 UTC,einfallstoll,In progress,,"I think it's incredibly hard to visually distinguish between regular buttons with a caret (which open a dropdown) and buttons in a button group with a separate button for the dropdown.

Regular buttons with a caret that opens a dropdown:
<img width=""641"" alt=""image"" src=""https://user-images.githubusercontent.com/619048/95012491-45453c80-0639-11eb-93fd-f47049735282.png"">

Button groups with a separate caret button that opens a dropdown:
<img width=""717"" alt=""image"" src=""https://user-images.githubusercontent.com/619048/95012479-31013f80-0639-11eb-8249-8f71e6ffbbaf.png"">

To see the difference between the buttons, you either have to get a feeling for margins so you can guess the bigger margin means a separate button, or you have to hover the button:
<img width=""145"" alt=""image"" src=""https://user-images.githubusercontent.com/619048/95012528-98b78a80-0639-11eb-9998-1792efd7fc13.png"">

I think this not only applies to button groups for dropdowns but also to regular button groups. I also got critical responses for not visually separate buttons:
<img width=""243"" alt=""image"" src=""https://user-images.githubusercontent.com/619048/95012555-d7e5db80-0639-11eb-8db5-0654ec419fea.png"">

The same applies to V5 as well.

I'm quite sure there was a separator in the past, which got removed at some point. So I request to re-add the separator again, as it makes it easier to distinguish between same-colored button groups as well as making it more accessible for visually impaired people.",,,zokizuan,"
--
yeah...I need those
--
",FarkasJanos,"
--
Hi guys! I would work on it
--
",einfallstoll,"
--
This is how I solved it for the moment:
```
.btn-group {
  @each $color, $value in $theme-colors {
    .btn-#{$color} + .btn-#{$color} {
      border-left: $btn-border-width solid darken($value, 10%);
    }
  }
}
```

This will add a border between all buttons of the same color within a button group, but none if they have a different color.
--
",,,,,,
31747,OPEN,“Sticky” content overlaps dropdown menus,css,2020-09-26 15:46:09 +0000 UTC,martinbean,In progress,,"“Sticky” content (using the `.sticky-top` class for example) overlap dropdown menus. This doesn’t make sense, has been raised before (#28569, #28590, #28926) without any explanation, other than a shoot-down about not rearranging the z-index scale because it’s been like that for however long.

Sorry, but having “sticky” content slide over dropdown menus doesn’t make any sense, _whatsoever_. So what is the _actual_ rationale for leaving it like this and not even considering fixing it?",,,mdo,"
--
The z-index scale is indeed designed with a particular layering system in mind. Some of this is mentioned at https://v5.getbootstrap.com/docs/5.0/layout/z-index/. And I'm including it here for context.

```scss
$zindex-dropdown:                   1000 !default;
$zindex-sticky:                     1020 !default;
$zindex-fixed:                      1030 !default;
$zindex-modal-backdrop:             1040 !default;
$zindex-modal:                      1050 !default;
$zindex-popover:                    1060 !default;
$zindex-tooltip:                    1070 !default;
```

Reiterating it here, early on for Bootstrap, we created a set of layers in which our UI operates.

- `-1` through `3` is for in-component layering (e.g., button groups and input groups).
- We chose the `1000`s as a starting point to give folks plenty of room to wiggle around in before Bootstrap kicked in.
- Given dropdowns are (typically) triggered by a button or link, they exist at the lowest plane. Dropdowns within the `<body>` also shouldn't overlap any navigation...
- ... which is why sticky and fixed are the next two layers.
- Sticky _could_ be the same layer as fixed, but generally this supports the pattern we see of a fixed top navbar and a sticky subnav below it for longer in-page links (in sites and apps).
- Modals come next, and since a modal is designed to overtake everything and focus you entirely on that dialog, we layer those on top of everything, including the nav. By design, you cannot proceed until the modal is addressed.
- And lastly, popovers and tooltips come in above modals given they need to be able to appear _in_ modals. A popover and tooltip that appeared before the modal did would most likely be dismissed (either on next click, or after focus/hover is shifted), so there's no need to layer it below modals.

So, which of those layers aren't right or are causing the most issues? A demo could help us look at things a bit differently, but if memory serves, to date this layering system has worked quite well overall.
--

--
That's more than fair, I get that issue. I think sticky _content_ wasn't on our minds because we were look at is like sticky _navigation_ in the form of navbars and what not. This is definitely a use case we should account for and would require a z-index update in v5. Not sure what we could do about v4 though.
--
",martinbean,"
--
@mdo So where I’ve ran into this issue is with a “sticky” sidebar content card on a page that also has dropdown menus. I’d expect the dropdown menus to be on top of any sticky content; I don’t see why sticky content should be in front of a dropdown menu a user’s triggered? It just looks… bizarre and not at all what I‘d expect.

![Screenshot 2020-09-25 at 21 46 17](https://user-images.githubusercontent.com/167312/94314625-c9802b80-ff78-11ea-9556-f0cfc10e4c17.png)
--

--
@mdo Cool 🙂

I’m currently overriding the z-indexes in my own project to work around this, but wanted to raise it as it does seem to go against expectations. But I can understand it might get complicated with sticky navbars with dropdowns (where the dropdown needs a higher z-index than the sticky navbar) but then sticky content (like in the example above) that should sit underneath. Maybe the z-index hierarchy should go like this (highest to lowest):

1. Dropdowns (always on top of “sticky” elements, be them navbars or content as per my example).
2. Sticky navbars (so they are always above sticky content).
3. Sticky content, such as the sticky sidebar content example.
--
",,,,,,,,
31733,OPEN,Clearly document whether a component (or example) is dependent on other SCSS files,feature,2020-09-24 22:30:33 +0000 UTC,celestehorgan,In progress,,"Clearly document whether a component is dependent on other Bootstrap SCSS files in Bootstrap 4.x.

Some components are dependent on other SCSS Bootstrap classes for full or partial functionality. Document these clearly for each component, so that new users to Bootstrap 4.x can use this clearly.

The documentation on on [importing SCSS classes](https://getbootstrap.com/docs/4.5/getting-started/theming/#importing) is thin, and making many of the examples on the documentation website work involves troubleshooting imports.  

**Example use case:**

When using the [Navbar](https://getbootstrap.com/docs/4.5/components/navbar/) component in Bootstrap 4.x, the documentation on [importing SCSS classes](https://getbootstrap.com/docs/4.5/getting-started/theming/#importing) is woefully thin. Based purely on the instruction to look at `bootstrap.scss`'s import order, one might assume based on filename alone that you would only need to import `navbar` in your custom SCSS file like so:

```
@import ""bootstrap/scss/navbar"";
```

The reality is that the Navbar class depends on a minimum of the following:

```
//Required
@import ""bootstrap/scss/functions"";
@import ""bootstrap/scss/variables"";
@import ""bootstrap/scss/mixins"";

@import ""bootstrap/scss/transitions"";
```

In most use cases, it also requires the following:

```
//If using dropdowns for submenus
@import ""bootstrap/scss/dropdown"";

// If right-aligning anything
@import ""bootstrap/scss/utilities"";
```

To make [the first example on the docs page](https://getbootstrap.com/docs/4.5/components/navbar/#supported-content) work with a copy-and-paste, you also need the following:

```
// Styles the searchbox 

@import ""bootstrap/scss/forms"";
@import ""bootstrap/scss/buttons"";
```",,,mdo,"
--
Should we document this in the hosted docs, in the Sass files (comment at the top?), both, or something else?
--

--
We'll get over to Dart Sass, but I'm not sure about the module system yet. That looked like it's be a bigger lift than we can take right now.
--

--
WIP of doing something small in our Sass files to get started: https://github.com/twbs/bootstrap/pull/31744.

As a bonus, as previous comments mentioned, getting this going will help us all out for that Dart Sass move if/when we migrate into the new module system.
--
",ydmitry,"
--
In docs certainly, and what about supress `@warn` if I don't have specific imports ? or maybe Sass module system is capable to handle this https://github.com/twbs/bootstrap/issues/29853 ? 
--
",celestehorgan,"
--
👋 

Hi, I logged this because I'm actually a technical writer with the Cloud Native Computing Foundation :) 

My suggestion for you, from a documentation/writing standpoint is to document it on each component's page: For example, for [Navbar](https://getbootstrap.com/docs/4.5/components/navbar/), I'd include a section called ""Prerequisites"" or ""Dependencies"", directly before or after ""How it works"" or after.

Something like this: 

----

## Dependencies 

If you are importing Bootstrap modularly, you must import the following for Navbar to render correctly: (or smth along these lines)

```
@import blah
@import blah
@import navbar
```


# How it works 

.... //etc

--
",,,,,,
31707,OPEN,Vertical responsive table,feature; help wanted,2021-01-13 01:42:42 +0000 UTC,2acode,Opened,,"Hi,

I would love to see a better solution for resposive tables on mobile when need to show all columns.
I'm using a variant of this (with mobile labels created from data attribute):
https://css-tricks.com/responsive-data-tables/

Thanks

",,,Hyp3rionM4x,"
--
This is actually a pretty good idea! +1 from me - or at least add it as a ""option"" so ppl can still use the other one / old one, if wanted :D
--
",,,,,,,,,,
31665,OPEN,Skeleton loading screens,feature; has-pr,2020-12-26 17:50:46 +0000 UTC,StanMenten99,In progress,,"Hi,

I would love to see something like a skeleton loading screen for specific elements (paragraphs, buttons, images, headings etc).
The reason why I want this is because its very handy to show the user that there is something loading, without placing spinners.

I'm aware of other solutions, but it would be nice to see it included in Bootstrap.

Examples:
[Example CSS tricks](https://css-tricks.com/building-skeleton-screens-css-custom-properties/)
[Example Youtube](https://miro.medium.com/max/700/0*ABjKedHjIe8El9RJ.png)

Hope my request is clearly and understandable.


Anyway, thanks in advance!
Stan.",,,TheDevJulian,"
--
Oh I would love that feature! Good thinking!
--
",juhas96,"
--
Hey, I want to contribute on this issue. 
--
",jaumesala,"
--
I've created a pull request, share your thoughts #31859 
--

--
> Is there any update about this, will this be a feature in near releases?

Take a look at #31859 
--
",StanMenten99,"
--
Is there any update about this, will this be a feature in near releases?
--
",,,,
31603,OPEN,[reboot] button: border-radius: 0; destroys native styling,css,2021-01-14 03:06:26 +0000 UTC,leeoniya,In progress,,"https://github.com/twbs/bootstrap/blob/d79ffeceeaef6c829dee1bd4bc87bd8febae243a/scss/_reboot.scss#L401-L407

messing with `border*` (and sometimes `background*`) properties of form controls usually causes them to become un-styled. the above code which fixes a minor annoyance in macOS causes far bigger problems in at least Firefox and Chrome on Windows and Chrome on Android. i've had to work around this by adding `button {border-radius: revert}` to undo the damage, but obviously this is not an ideal situation.

still scratching my head how this made it past QA ¯\\_(ツ)_/¯

repro: https://jsfiddle.net/hLuj1xp4/

Windows 10, Firefox:

![button-border-radius-firefox](https://user-images.githubusercontent.com/43234/92293619-8e935680-eeea-11ea-8719-f212d1171e55.png)


Windows 10, Chrome:

![button-border-radius-chrome](https://user-images.githubusercontent.com/43234/92293620-8e935680-eeea-11ea-8a20-f8bc73463d16.png)

Android 7.1, Chrome:

![Screenshot_20200904-201256_1](https://user-images.githubusercontent.com/43234/92293712-40cb1e00-eeeb-11ea-9b69-c8b98ef4dd49.png)
",,,neralex,"
--
With Bootstrap 4 you can use the btn and rounded classes, which works on all supported browsers:

```<button class=""btn btn-primary rounded-0"">Button</button>```

https://getbootstrap.com/docs/4.5/utilities/borders/#border-radius
--
",leeoniya,"
--
the only part of bootstrap which i use is reboot (as a css reset), so that's not gonna work. i have no issues with adding the `revert` rule in my code. my point is that `border-radius: 0` needs to move out of `reboot` and into perhaps the base `.btn` class.
--

--
another option is to set some minimal additional border and background properties that are at least less windows 95 and also *more* normalized than simply allowing the non-uniform uncontrolled uglification to take place.
--
",mdo,"
--
Reboot intentionally resets many elements to a preferred styling ahead of Bootstrap's components, layout, and more. I don't see a reason to remove this at this time.
--

--
Thoughts @twbs/css-review?
--

--
Does adding `border: 1px solid` (without a color) solve the issue enough? I’d prefer not to add too many extra properties since we have our `.btn` styles.
--
",ffoodd,"
--
Might we only drop it when `$enable-rounded` is `false`—like we do for `text-decoration` on links?
--
",patrickhlauke,"
--
i'm split on this. can see the rationale that reset should not change too much of the stuff outside of bootstrap-specific classes. but then again, it is more a normalisation than a simple reset. would also say that it's rare that designers actually *want* the platform/browser specific styles, unless they're very specifically aiming to blend in/make it look pseudo-native (though browsers themselves don't always adhere to platform conventions themselves, so they get weird results either way).

i'd say since reset has always done more than merely reset/paper over some very odd quirks, and instead sets a baseline level of (idiosyncratic in their own right) styles, we should probably leave it as is now. and not switch it based on `$enable-rounded` either, as the jump from ""yes i want round corners"" to ""now the corners are not round, and OMG what's that windows 95 looking chunky button with giant 3D bevel?"" is a bit too big.
--
",,
31573,OPEN,Modal behind backdrop when parent is position:sticky,,2020-09-07 13:55:25 +0000 UTC,mrlife,In progress,,"I have a menu with `.position-sticky` and a few menu buttons. One of them opens a `.modal` -- a sibling element due to the nature of my development environment. The modal's `.modal-backdrop` is appended to the `body` and covers the modal.

Here is a similar issue and PR punted from v3 to v4 but never used. The PR simply appended the backdrop to the modal's parent instead of the `body`. https://github.com/twbs/bootstrap/issues/16148 -- fixed by https://github.com/twbs/bootstrap/pull/16432

Proposal to fix in v4 and v5.

Current `modal.js` line 355
```
document.body.appendChild(this._backdrop)
```

Proposed `modal.js` line 355
```
this._element.parentNode.appendChild(this._backdrop)
```

- Operating system and version (Windows, macOS, Android, iOS): macOS 10.15.6
- Browser and version (Chrome, Firefox, Safari, Microsoft Edge, Opera, Android Browser): Safari 13.1.2",,,mdo,"
--
I feel like this isn't something we'd change. Thoughts @Johann-S?
--
",mrlife,"
--
Are there pros for appending `.modal-backdrop` to `body` and/or cons for appending to parent?
--
",,,,,,,,
31554,OPEN,"Collapse animation is not smooth when toggled via a button within the ""collapse"" element",js; v5,2020-12-18 12:46:22 +0000 UTC,alexpls,In progress,,"Bootstrap Version: 5.0.0-alpha1
Operating system: Windows 10
Browser: Firefox 80, Chrome 84

---

Hello,

I've noticed a case where the close animation for collapsible elements does not display smoothly:

### Repro

1. Visit this JSBin https://jsbin.com/xihawedasa/edit?html,output
2. Click the ""Outer toggle"" button to open the collapsible element
3. Click the ""Inner toggle"" button to close it

### Expected

1. The animation for closing the element displays smoothly

### Actual

1. It doesn't

### Notes

- This appears to be a regression since Bootstrap 4 ([discussion](https://github.com/twbs/bootstrap/issues/31554#issuecomment-688053415)).

---

If you consider this a bug, I'm happy to investigate what its cause is and open a PR to fix it.

Thanks for your awesome work on Bootstrap 😄 ",,,ashishrathod95,"
--
@alexpls hey have you tried changing the speed value or tried using external jQuery??
--
",alexpls,"
--
Hi @ashishrathod95 - Boostrap 5 doesn't use jQuery, so I don't think adding it would help with anything. What do you mean by changing the speed value? It's [not an option for collapse](https://v5.getbootstrap.com/docs/5.0/components/collapse/) as far as I can see? 
--

--
Hi @marcomaiermm @patrickhlauke - I don't think it's a case of `prefers-reduced-motion` kicking in, since the animation that plays when the element is expanded is smooth, as is the animation that plays when the element is collapsed by using a button _outside_ itself. It's only when the element is collapsed via a button contained within itself that the animation gets stuttery.

[Here's a video of the issue](https://streamable.com/kppwe9) - unfortunately video was only captured at about 30fps so the stuttery animation isn't as obvious as it is when you see it on a computer screen.
--

--
@mznet that's interesting - you're right - the issue does not appear on Bootstrap 4!

I verified this by keeping the HTML in my repro exactly the same but switching out Bootstrap 5 to Bootstrap 4, and it works as expected, link here: https://jsbin.com/xihawedasa/1/edit?html,output

I'll update the issue description to highlight that it's a regression.
--
",marcomaiermm,"
--
hi @alexpls i had the same ""issue"". The Bootstrap 5 documentation says that Bootstrap supports the  [prefers-reduced-motion media feature](https://drafts.csswg.org/mediaqueries-5/#prefers-reduced-motion). 
[https://v5.getbootstrap.com/docs/5.0/getting-started/accessibility/#reduced-motion](https://v5.getbootstrap.com/docs/5.0/getting-started/accessibility/#reduced-motion)

I simply added 

```css
@media (prefers-reduced-motion: reduce) {
    .collapsing {
        transition-property: height, visibility;
        transition-duration: .35s;
    }
}
```

to an additionally loaded css file.
--
",patrickhlauke,"
--
ah, so when you say that it ""doesn't display smoothly"", do you mean it doesn't animate at all and just opens/closes in one go? if so then yes, it'll be the `prefers-reduced-motion` kicking in on your page. If a user has set that preference, I'd advise against just brazenly ignoring it and reenabling animations regardless though...

incidentally, if it is this, it's likely you changed your settings on your machine, maybe without realising it? https://developer.paciellogroup.com/blog/2019/05/short-note-on-prefers-reduced-motion-and-puzzled-windows-users/
--

--
ah, thanks for the video @alexpls (i have my system set up with reduced motion, hadn't turned it off to check the original jsbin)
--
",mznet,"
--
@alexpls i've confirm the case was occured to even my chrome and firefox on mac. So, i changed bootstrap version to v4 to check that this issue was a known issue but suprisingly, it worked well on v4. I keep digging into the issue.
--
",mdo,"
--
Checking the demo out from @alexpls, this looks smooth on my end in Safari, but does appear choppy in Firefox and Chrome. Anything significant change in v5's collapse, @Johann-S?
--
"
31538,OPEN,v5: Improve customization by allowing manually setting calculated variables in styles,css; feature; v5,2021-01-13 14:10:44 +0000 UTC,ydmitry,In progress,,"Hello!

We can have cases when we need to change specific style property, but we can't do this because this property value set up in Bootstrap library as calculated formula. The idea is to create separate variables for these cases and precalculate it in default values of these variables.

The same was done in this issue and PR, but only for button component:
https://github.com/twbs/bootstrap/issues/28899
https://github.com/twbs/bootstrap/pull/29444

The idea is to follow this practice in all components.

### Example

Before:

```
@mixin list-group-item-variant($state, $background, $color) {
  .list-group-item-#{$state} {
    // ...
    background-color: darken($background, 5%);
    // ...
  }
}
```

After:

```
@mixin list-group-item-variant($state, $background, $color, $background-hover: darken($background, 5%)) {
  .list-group-item-#{$state} {
    // ...
    background-color: $background-hover;
    // ...
  }
}
```

The same can be done not only for colors, but for calculated unit values:

Before:
```
.card-subtitle {
  margin-top: -$card-spacer-y / 2;
}
```

After:
```
// In variables:
$card-subtitle-spacer: -$card-spacer-y / 2 !default;

// In styles:
.card-subtitle {
  margin-top: $card-subtitle-spacer;
}
```

### Benefits

- Allows to customize more properties and if you don't need - just keep default calculation of the value
- Allows to transform it to CSS variable usage by setting e.g. `$background-hover: var(--bs-background-hover);` (if we have `background-color: darken($background, 5%);` we can't do this)

### Drawbacks

- More variables to support
- Longer migration guide (probably) 


What do you thik about this? Should I do a PR?",,,MauricioHernanCabrera,"
--
I can do that!
--

--
> Thank you :) . What about to do it as a rule for all scss styles? The original feature request to have this as styleguide rule and apply it everywhere, not only for list group and card subtitle

if you want, I can work on that
--
",ydmitry,"
--
Thank you :) . What about to do it as a rule for all scss styles? The original feature request to have this as styleguide rule and apply it everywhere, not only for list group and card subtitle
--

--
@mdo  thank you for your feedback! Actually created more pull requests to have better preview and stress test the idea and get more feedback

> Take popovers (#31756) for instance—you've added variables for different arrow sizes for the four sides, but why would you ever have a popover-right be different than a popover-left?

I see two use cases for customization on product side:
1. I want to switch to CSS variables mode for popover sizing in different places or for theme switching. Currently I can't do this because there are SCSS formulas. 
2. I want to `null` not needed ""arrows"" to decrease CSS bundle size. E.g. I'm creating banner and want only styles I use.
We can actually try to avoid SCSS formula and keep ""right"" and ""left"" with one variable.

> It could be nice to at least add variable/map reassignment from $theme-colors to ${component}-variants instead of global toggles. This way you could modify, extend, or disable all of a component's variants.

For this case sometimes you have a mockup with exact colors for simple state, for hover, active, etc. And this can't be matched with formulas, so if we use just `$alert-variants` as e.g. `""info"", ""light"", ""dark""` we will be constrained with these formulas e.g. `scale-color($value, $alert-bg-scale)`

Regarding this https://github.com/twbs/bootstrap/pull/31708 - it is more about CSS variables handling, actually SCSS variables too, could you please check discussion there and in  https://github.com/twbs/bootstrap/issues/26596#issuecomment-694214372 ?
--

--
Personally, I'm still interested in these changes, I think better not to do this for sizes, only for colors and do small PRs as you said

If I'm only one contributor for this issue I need to know target dates for beta to check if I can contribute
--
",ffoodd,"
--
@ydmitry That sounds great indeed, feel free to open a PR that covers your full suggestion. 

It may require to think our variables organization again—and probably to document each components' variables too, as already requested several times.

Any thoughts, @mdo?
--
",mdo,"
--
Been trying to find the best way to review these PRs, and I think overall most of the changes feel over-engineered.

Take popovers (#31756) for instance—you've added variables for different arrow sizes for the four sides, but why would you ever have a popover-right be different than a popover-left?

In other situations like alerts (#31753), you've added new global feature flags (with a different syntax and place in our `_variables.scss` file) for things that don't need to be an option. We're moving to CSS custom properties slowly but surely—we shouldn't enable flipping between them, but bridging Sass and custom properties. I can understand improving the mixin parameters, though.

https://github.com/twbs/bootstrap/blob/a6156ede326efe682935fa148d96d6e5772027e1/scss/_alert.scss#L43-L51

The parameters there could easily seem random and not so well formatted.

Form validation (#31757) seems like a straightforward enough improvement to the mixin. I don't think the focus styles need a parameter, but otherwise I think this is a helpful iteration. Needs a rebase and some docs improvements, though.

With list groups (#31758), the improvements to the mixin itself are helpful, but I feel like we should drop the changes you've made to the `_variables.scss` and `_list-group.scss`. No need to change how we generate our variants IMO.

Similarly, your altnerate alerts PR (#31789) over complicates the improvements to the mixin and added customization docs with an added global option for the variants and unnecessary map-merge.

---

Long story short, this needs to be rethought. I can see a few things potentially coming out of this in smaller PRs:

- Improved mixins with additional parameters for all states. Maybe start with the alerts mixin for now?

- It could be nice to at least add variable/map reassignment from `$theme-colors` to `${component}-variants` instead of global toggles. This way you could modify, extend, or disable all of a component's variants.

  For example (and I'm not 100% if this would work):

  ```scss
  // Bootstrap default
  $alert-variants: $theme-colors !default;

  // Remove some variants
  $alert-variants: map-remove($alert-variants, ""info"", ""light"", ""dark"");

  // Remove all variants
  $alert-variants: null;
  ```

- When adding new variables, don't over complicate. With stuff like popover arrows, all arrows should be the same size, so we only need one variable. In many cases, the abstraction and reassignment is honestly probably a better experience because it reduces overhead.

Hope that helps! Happy to keep discussing here to not further waste any time or effort—I appreciate the contributions so regardless of their status :).
--

--
Revisiting this, what's our next steps with our beta status and beyond?
--
",septatrix,"
--
I really like this idea though I think it will be most useful for colors (and therefore theming).
The majority of people is unlikely to tinker with margins.
Instead there is an abundance of people wanting to tweak and adjust colors.

Introducing this for parameters unrelated to colors is certainly nice however it needs to be carefully evaluated what properties are of relevance and as @mdo pointed out where some distinctions are over-engineered and superfluous.

Where I cannot wait for this feature however are colors.
Bundled with css custom properties this allows many great new opportunities while still being backwards compatible.
Many components calculate colors based on the SCSS color map and this map also gets exported as css variables.
However as lightening and darkening of these colors is necessary the components do not use the css variables themself.
Changing them therefore has no effect but they only grant the ability to match one's own css to the bootstrap colors.

Most variables are however already defined inside `variables.scss`.
Some of these are already exposed as css variables and actually used by components (tables, some gutters, breadcrumb divider).
Expanding the usage of this pattern seems to be a goal of the bootstrap authors and I expect more components to adopt this behaviour for v5.1 (as I do not expect any substantial features for the next beta(s)) as it is backwards compatible.
What I am really excited for however would the adoption of this pattern for colors.
This would enable many possibilities of changing things during the runtime (e.g. dark and light theme).
--
",,
31521,OPEN,Text Truncate Not Inline in Card,browser bug; css; docs; help wanted; v4,2020-12-13 01:27:52 +0000 UTC,hashnimmo,In progress,,"I'm trying to truncate the strong text within this card and it doesn't want to get inline. Here's a screenshot;
![not-inline](https://user-images.githubusercontent.com/24617729/90959448-dcef3100-e4b8-11ea-9e31-2bc1626d7a3e.png)

Here's the code;

```html
<div class=""card mx-3 mt-3"">
<div class=""card-body"">
<p>Your search <span class=""d-inline-block text-truncate"" style=""max-width: 150px;""><strong>very very very long text</strong></span> did not match any topics.</p>
<p>Suggestions:</p>
<ul>
<li>Make sure that all words are spelled correctly.</li>
<li>Try different keywords.</li>
<li>Try more general keywords.</li>
</ul>
</div>
</div>
```

I'm using;
Bootstrap: Version 4.4.1
Operating system: Microsoft Windows 10 Version 2004 (OS Build 19041.450) 64-bit
Browser: Microsoft Edge Version 84.0.522.63 64-bit",,,neralex,"
--
The class text-truncate is using overflow:hidden and this changes the baseline position of an inline-block element. Add **vertical-align: top;** to your span:
```
<div class=""card mx-3 mt-3"">
  <div class=""card-body"">
    <p>Your search <span class=""d-inline-block text-truncate"" style=""max-width: 150px; vertical-align: top;""><strong>very very very long text</strong></span> did not match any topics.</p>
    <p>Suggestions:</p>
    <ul>
      <li>Make sure that all words are spelled correctly.</li>
      <li>Try different keywords.</li>
      <li>Try more general keywords.</li>
    </ul>
  </div>
</div>
```
--

--
You did it as it is stated in the docs. I have the same issue with Firefox. I guess this behavior is based on the fact, that a inline-block element respects padding and margin values like a block-element. This is not really a bootstrap-issue, its more based on the browser renderings because you can reproduce it also without bootstrap but maybe one of the devs can tell us more. 

https://jsfiddle.net/6ryxgsj8/
--
",hashnimmo,"
--
> The class `text-truncate` is using `overflow: hidden;` and this changes the baseline position of an inline-block element. Add `vertical-align: top;` to your span:

Thank you so much for this, that obviously worked and made it inline. I'm still curious why it didn't want to be inline before, is this how `d-inline-block` + `text-truncate` were supposed to be or was I using it incorrectly?
--

--
> This is not really a bootstrap-issue, its more based on the browser renderings because you can reproduce it also without bootstrap but maybe one of the devs can tell us more.

As this doesn't seem to be a Bootstrap issue, should I close this issue or leave it like this?
--

--
> Just wanted to note that you can use the utility class `align-top` to apply `vertical-align: top` to your element.

Finally, thank you. Will leave this issue open for the developers to decide.
--
",Hiws,"
--
Just wanted to note that you can use the utility class `align-top` to apply `vertical-align: top` to your element.

<https://getbootstrap.com/docs/4.5/utilities/vertical-align/>
--
",ffoodd,"
--
The diagnostic looks good, as well as @Hiws suggestion to work around this. I [made a CodePen](https://codepen.io/ffoodd/pen/abNJpBX?editors=1100) to both reproduce and  document this behaviour. @shadeed [mentions this in his ""Overflow in CSS"" post](https://www.ishadeed.com/article/overflow-css/#inline-block-elements).

@mdo @MartijnCuppens Should we apply `vertical-align: top;` to `.text-truncate`, or would it have side-effects?
--
",mdo,"
--
> would it have side-effects?

Most likely it'd have side effects. Best solution would be the utility being added manually as needed, and adding a note to the docs. Anyone want to take on a PR for adding a mention to the truncate docs in `v4-dev`?
--
",AjitsinghKamal,"
--
@mdo I can raise a PR for that
--
"
31509,OPEN,Target for .modal-open,feature; has-pr; help wanted; js,2021-03-06 05:52:13 +0000 UTC,bkbillma,In progress,,"I am building a vue web component that uses bootstrap.  All of my css/js is contained inside the web component.  When i use the component and open a modal, the .modal-open is added to the body and because my css/js is contained to the web component some css doesn't work and the closing of the modal by clicking on modal background doesn't work.

If i could tell my modals to open with a target of the root of my web component (or if it could somehow detect it is inside of a web component) that should fix the issues.

The same functionality is needed for toasts.",,,bkbillma,"
--
Perhaps it could check for a shadowRoot and if there is one attach to first block element or even require us to add a property to the element we want to attach to.

--
",rohit2sharma95,"
--
@bkbillma As per my understanding, you want to open a modal within a container 🤔
But the modal plugin actually works globally in DOM, so where is the markup placed for modal, does not matter too much
It would be good if you could create a demo on [stackblitz](https://stackblitz.com/) with the issue (Or if you could provide a sample code) 😄 

_I am not much familiar with web components_
--
",spicalous,"
--
This would also be awesome for Ember developers as tests run the app in a container. It would also be awesome if we are able to also specify animation duration.
--
",,,,,,
31472,OPEN,Inconsistent checkbox placement when a hidden element is between a legend and .form-check,confirmed; css; v5,2020-09-18 22:10:35 +0000 UTC,tegandbiscuits,Opened,,"* Operating system: macOS 10.15.6
* Browser: Chrome 84.0.4147.105

In the alpha for 5.0.0 when a `legend` is followed by a hidden element (tested with `.d-none` and `input[type=""hidden""]`) and `div.form-check`, then the checkbox will be on the same line as the `legend` but not the `label`, and also makes the checkbox not clickable (though it's possible to check by focusing on it). This seems to be the case with normal checkboxes and switches.

Example problematic markup:

```html
<form>
  <fieldset>
    <legend>Unexpected</legend>

    <p class=""d-none"">Hello</p>
    <div class=""form-check"">
      <input class=""form-check-input"" type=""checkbox"" id=""foo"">
      <label class=""form-check-label"" for=""foo"">Foo</label>
    </div>
  </fieldset>
</form>
```

Produces this

<img width=""700"" alt=""Screen Shot 2020-08-12 at 3 34 40 PM"" src=""https://user-images.githubusercontent.com/3896310/90065197-88c2a080-dcb1-11ea-9743-1a7f27c2582e.png"">

I would expect it to lay out like this (and also be clickable)

<img width=""150"" alt=""Screen Shot 2020-08-12 at 3 35 33 PM"" src=""https://user-images.githubusercontent.com/3896310/90065299-aee84080-dcb1-11ea-8330-7906a609cf56.png"">

Code Pen
https://codepen.io/tegandbiscuits/pen/poygjPE

The current behavior is also not what happens with checkboxes in Bootstrap 4.

Also this seems to be able to be resolved by wrapping both the hidden element and `.form-check` in a `div`.
",,,ffoodd,"
--
We're basically using an uncontained `float` for checkboxes and radio buttons, which may cause troubles as you spotted :+1: 
--

--
@mdo you're right, been too qucik on this. We're trying to clear the float with `legend + * { clear: left; }`, which has no effect on a hidden element…

Not sure about a potential fix here: 
1. our clearfix won't work either, 
2. we do not have any `clear` utilities,
3. avoiding this case with CSS would result in a bloated selector, eg:

```css
legend + *:not(.d-none):not([hidden]):not([type=""hidden""]), 
legend + .d-none + *, 
legend + [hidden] + *,
legend + [type=""hidden""] + * {
  clear: left;
}
```

Maybe adding `clear` utility would be a better fix, to allow user to manually clear their floats in edge cases?
--

--
[Tried something using `display: contents`](https://codepen.io/ffoodd/pen/zYqKedM?editors=1100) but then realized [support is pretty bad and buggy](https://caniuse.com/#feat=css-display-contents)…

There might be a better way using `grid` or something, not sure yet.

TBH, I'd be in favor of dropping `float: left` here, since our standard build does not need it —no borders on `fieldset`— and it can be easily managed using `.float-left` utility (which would then be opt-in).

The better way around IMHO would be to add `clear` utilities.
--

--
Please do @mdo, I won't be able to do it until next week or so — or simply wait for a week. ;)
--
",mdo,"
--
@ffoodd I think this is more likely caused by the `float` on the `<legend>` than the checkbox.
--

--
I think we might need to look at changing the `<legend>` changes we made. I feel like that was done relatively recently. Won't have time to play with it more for a little bit.
--

--
Let's drop that float and that should fix it. Wanna open a PR @ffoodd or should I?
--

--
Thinking about this specific example again, you might just want to add a good ol' fashioned `<div class=""clearfix""></div>` before the hidden element. That'll fix the issue.
--
",,,,,,,,
31458,OPEN,Sticky table column,css; feature; help wanted,2021-01-14 04:02:12 +0000 UTC,RichardNeill,In progress,,"In a responsive table, with lots of columns, it's often desirable to make the left-most column sticky, so it doesn't scroll off the page. I think this should be an option within bootstrap, in the same way that we can make the <thead> sticky. Sometimes, both the top row and left-col need to be sticky.

Here is how we do it at the moment: note that it seems to work ""perfectly"" in Chrome, but is broken in Firefox. 

/* Sticky first column. NB Firefox Bug #1658119 means that we lose the td-borders! */
table.sticky-x tr td:nth-child(1){
   position: sticky; left: 0; z-index: 10;
   background-color: #fff;  /* Must set a color explicitly, else it is transparent to the text that scrolls by underneath */
}
table.sticky-x tr th:nth-child(1){
	position: sticky; left: 0; z-index: 10;
}
table.sticky-x thead tr th:nth-child(1) {  /* top-left corner never moves - and we don't override the existing th-color either. */
	position: sticky; left: 0; top: 0; z-index: 12;
}
table.sticky-x.table-striped tr:nth-of-type(odd) td:nth-child(1) {
	background-color: #f2f2f2;   /* restore table-striped */
}

Thanks.",,,mznet,"
--
@RichardNeill Your code is not broken on even Firefox, I've tested it on Firefox 79.0. On even Safari and Chrome, It still works nicely. 
--
",RichardNeill,"
--
Hi and thanks. 

The problem in firefox is not that the ""sticky column"" doesn't work, rather it is that the borders within the sticky first column disappear. https://bugzilla.mozilla.org/show_bug.cgi?id=1658119  includes a test-case and a workaround.

More generally, a good solution for tables (and which I'd love to see in Bootstrap) would be to allow any combinations 

table-sticky-header:   sticky header  (when scrolling vertically)
table-sticky-left:   sticky 1st column (when scrolling horizontally)
table-responsive-sticky:   table-responsive working with sticky-header.

The major challenges here are:

* Table borders don't always go with the sticky cell, but seem to be part of the layer beneath. It's necessary to bodge it with box-shadow instead.

* If the table is responsive horizontally, then it cannot be sticky vertically (this is a limit from CSS, though it should be doable). 
Therefore, some JS is probably needed.

* It would be helpful if, when sticky behaviour is actually happening, a ""stuck"" class could be dynamically added.

As an update, below is my current best CSS. But it hardcodes the box-shadow colours, and it doesn't solve the sticky-responsive problem.

/* Sticky tables. Use "".sticky"" and ensure we have <thead> section (recommended: "".thead-dark""). */
table.sticky thead tr:nth-child(1) th{
   position: sticky; top: 0; z-index: 10;
    box-shadow: 0 0 0 1px #ddd;
}

/* Sticky first column.  NB Firefox Bug #1658119 means that we lose the td-borders! Fudge it with box-shadow; this isn't perfect. See: https://stackoverflow.com/questions/40760241/sticky-row-and-column-header-in-table */
table.sticky-x tr td:nth-child(1){
   position: sticky; left: 0; z-index: 10;
   background-color: #fff;  /* Must set a color explicitly, else it is transparent to the text that scrolls by underneath. c.f. ""wholly"" */
   box-shadow: 0px 0px 0px 1px #ddd, 2px 0px 0px 0px #444;     /*Or:  box-shadow: 0 0 0 1px #ddd; */
}
table.sticky-x tr th:nth-child(1){
  position: sticky; left: 0; z-index: 10;
  box-shadow: 0px 0px 0px 1px #ddd, 2px 0px 0px 0px #444;
}
table.sticky-x thead tr th:nth-child(1) {  /* top-left corner never moves - and we don't override the existing th-color either. */
  position: sticky; left: 0; top: 0; z-index: 12;
  box-shadow: 0 0 0 1px #ddd;
}
table.sticky-x.table-striped tr:nth-of-type(odd) td:nth-child(1) {
  background-color: #f2f2f2;   /* restore table-striped */
}

/* Vertical striped tables */
table.table-striped-columns {
  tbody td:nth-of-type(odd), thead th:nth-of-type(odd){ background:#f2f2f2; }
}



--

--
I hope this helps.
https://codepen.io/RichardNeill/pen/bGePxpO
This test case works well enough that I use it on production, but it is very ugly in how it does so.,

What I would like to propose is that bootstrap simply offer 3 more table classes:
-  ""table-sticky"" (which makes the top-row sticky) - and should also not conflict with div.table-responsive if this can be managed.
-  ""table-sticky-x"" (which makes the left col sticky)
- ""table-striped-columns"" (which does vertical striping)

--
",XhmikosR,"
--
Bug reports must include a **live demo** of the issue. Per our [contributing guidelines](https://github.com/twbs/bootstrap/blob/main/.github/CONTRIBUTING.md), please create a reduced test case via [CodePen](https://codepen.io/) or [JS Bin](https://jsbin.com/) and report back with your link, Bootstrap version, and specific browser and Operating System details.

*This is an automated reply*
--
",,,,,,
31457,OPEN,Striped table columns,feature; help wanted,2021-01-13 01:42:41 +0000 UTC,RichardNeill,Opened,,"Sometimes, it is desirable to have a table with striped columns (rather than rows).
Here's what we do:

table.table-striped-cols {
  tbody td:nth-of-type(odd), thead th:nth-of-type(odd){ background:#f2f2f2; }
}

I propose that this should be an option within bootstrap-core.",,,,,,,,,,,,,,
31427,OPEN,[Accessibility] nav pills tabs : The focus on active link is not visible,accessibility; help wanted; v4; v5,2020-12-09 00:05:29 +0000 UTC,cfagno,Opened,,"On tabs with pills the focus on an **active link is not visible** (see https://v5.getbootstrap.com/docs/5.0/components/navs/) : 
![TabsActiveLinkFocused](https://user-images.githubusercontent.com/67265152/89298125-2d673180-d665-11ea-82b8-8649a050db09.gif)

But on **link button** the **focus is visible** (see https://v5.getbootstrap.com/docs/5.0/components/buttons/) : 

![activeLinkFocused](https://user-images.githubusercontent.com/67265152/89298215-47087900-d665-11ea-9d6c-e5589de2286a.gif)

There is no focus style visible on **Firefox** browser for this active link, so we don't see the focus (we lose where we are).

To be accessible the **focus on an active link must be visible** (see success criterion 2.4.7 : https://www.w3.org/TR/WCAG21/#focus-visible).

",,,tobiasberge,"
--
Hi @cfagno @XhmikosR, 

I would be interested in making a PR for this. I'm just asking because the [contribution guidelines](https://github.com/twbs/bootstrap/blob/main/.github/CONTRIBUTING.md) say it's better to ask first before spending time.
--
",mayralgr,"
--
@XhmikosR is this issue still open? and this is to be corrected in the v5?
Thank you!
--

--
thanks @XhmikosR I will take a look at it and open a pr with the proposal

--
",XhmikosR,"
--
![image](https://user-images.githubusercontent.com/349621/101259684-f8620d00-3732-11eb-9927-4cfef35c7f8f.png)

So, yeah it's open 😛

There's no more info to give, and I'm not sure how to tackle this, but the approach should be not asking us, but instead propose your PRs and someone from the team will have a look when they have time.
--
",,,,,,
31402,OPEN,Include jQuery examples as well,docs; feature; help wanted; v5,2020-11-19 07:32:27 +0000 UTC,igll,Opened,,"It would be great to have all examples of plain JavaScript code with **their jQuery equivalent**. E.g. at https://v5.getbootstrap.com/docs/5.0/components/navs/#via-javascript

At least at https://v5.getbootstrap.com/docs/5.0/getting-started/javascript/#still-want-to-use-jquery-its-possible
showing in parallel the jQuery code with the equivalent plain JavaScript code.

JFYI: I was not able to get `$('[data-toggle=""tooltip""]').tooltip()""` working because I don't see its connection with the code at https://v5.getbootstrap.com/docs/5.0/components/tooltips/#example-enable-tooltips-everywhere",,,divya661,"
--
@XhmikosR  @igll I would like to work on it. Can I be assigned to this task?
--
",juniorRubyist,"
--
I have an example for the instance in question at https://v5.getbootstrap.com/docs/5.0/components/navs/#via-javascript, so I'll make a PR. I want to use it as part of my Hacktoberfest, so I will open it in October.
--
",XhmikosR,"
--
After discussing this with @mdo on Slack, we'd prefer to have a separate section in docs with a couple of examples and link to it from each component. We believe it's cleaner this way than adding a jQuery example in each component.

So, perhaps a new partial linking to the javascript examples.
--
",,,,,,
31401,OPEN,"Popovers: separate out ""focus"" trigger and ""dismiss on next click"" functionality",breaking-change; v5,2020-08-02 19:06:38 +0000 UTC,patrickhlauke,Opened,,"It feels inappropriate that the use of `focus` trigger is touted as being the solution to close the popover on next click. If anything, that is basically a side effect of the fact that the popover is set to react to focus/blur.

https://v5.getbootstrap.com/docs/5.0/components/popovers/#dismiss-on-next-click

Making the popover actually open on `focus` for keyboard users is...unexpected for some, and not really ideal (imagine tabbing through a page with lots of these, and having popovers fired at you all the time when all you want to do is progress past the trigger elements to reach some other part of the page). It shouldn't be pushed as the solution for dismissing on next click.

It would probably make sense to provide a new option for popovers to explicitly say ""close this on next click"" (and probably, more specifically, next click outside of the popover itself, to be more specific). then, for `focus` trigger, mention that a *side-effect* of using that is that popovers close on `blur`/when the trigger loses focus, and that THIS also happens when clicking somewhere else on the page.

while this has been this way in v4 as well, v5 would give us the option of introducing a bit more separation here.",,,,,,,,,,,,,,
31392,OPEN,v5 - tabs required classes,has-pr; js; v5,2021-01-13 06:24:41 +0000 UTC,zhangchenglin,In progress,,"https://v5.getbootstrap.com/docs/5.0/components/list-group/
https://v5.getbootstrap.com/docs/5.0/components/navs/

https://github.com/twbs/bootstrap/blob/main/js/src/tab.js#L45

Why must the parent of the HTML element of the tab contain'.nav, .list-group'? If the parent of the HTML format does not contain one of these two classes, an error will be reported.

Moreover, in the document description, there is no key description, and one of these two categories must be included.
",,,Johann,"
--
It's the same in v4 too: https://github.com/twbs/bootstrap/blob/v4.5.0/js/src/tab.js#L37

But yes our docs lack of explanation about required classes 
--

--
in that case @zhangchenglin please provide two reduce test cases, one in v4.5.0 and one with v5 please which show that behavior, because the code is the same
--

--
Thanks @zhangchenglin and good catch 👍 
--
",zhangchenglin,"
--
@Johann-S 
I was before 5.0. When using tab, the parent that did not trigger the button must have these two classes.
--

--
Before 5.0, these two categories are not required.
--

--
[bootstrap@4.5.0/tab](https://codepen.io/zhangchenglin/pen/BaKBdaG?editors=1000)

[bootstrap@5.0.0-alpha1/tab](https://codepen.io/zhangchenglin/pen/qBZWXEm?editors=1000)


For the v5 version, the console will report an error. Green is primitive and red is an example of other structures.




--

--
> It is not the js issue in my opinion and `.nav, .list-group` are required even in v4 :) @Johann-S
> If you see in [your codepen (for v4)](https://codepen.io/zhangchenglin/pen/BaKBdaG?editors=1000) @zhangchenglin, the next tab is getting active that you want to do but the previously selected tab is still active. That's because the parent of the element is not `.nav, .list-group`. It is throwing error in v5 because the [`listElement`](https://github.com/twbs/bootstrap/blob/e8566e10c74e05c232a0d6da801198bd9cd55b09/js/src/tab.js#L83) is null. In v4 you are not getting the error because the code is written with jQuery and jQuery does not return null directly instead it returns a jQuery object. So you are not getting the error in the console but the purpose is not being fully achieved and the previously selected tab is not getting inactive :)

So if you want tabs to support structures in other formats, is it the only way to do this? They should have a common and must have class name to put in the parent element.
 Have you considered making the tab function independent?
--

--
> > So if you want tabs to support structures in other formats, is it the only way to do this?
> 
> Yes @zhangchenglin, you must use `.nav` or `.list-group` class on the parent of the element. See in #31166, they are using different structure but parent element contains `.nav` class.

Well, his needs are the same as mine. I didn't dare to put forward this requirement, that is, the trigger button is not in the same element (the relationship of the trigger button is the relationship of sibling elements).
--
",rohit2sharma95,"
--
It is not the js issue in my opinion and `.nav, .list-group` are required even in v4 :) @Johann-S 
If you see in [your codepen (for v4)](https://codepen.io/zhangchenglin/pen/BaKBdaG?editors=1000) @zhangchenglin, the next tab is getting active that you want to do but the previously selected tab is still active. That's because the parent of the element is not `.nav, .list-group`. It is throwing error in v5 because the [`listElement`](https://github.com/twbs/bootstrap/blob/e8566e10c74e05c232a0d6da801198bd9cd55b09/js/src/tab.js#L83) is null. In v4 you are not getting the error because the code is written with jQuery and jQuery does not return null directly instead it returns a jQuery object. So you are not getting the error in the console but the purpose is not being fully achieved and the previously selected tab is not getting inactive :)
--

--
> So if you want tabs to support structures in other formats, is it the only way to do this?

Yes @zhangchenglin, you must use `.nav` or `.list-group` class on the parent of the element. See in #31166, they are using different structure but parent element contains `.nav` class.


--
",,,,,,
31345,OPEN,[Accessibility] nav tabs : tabpanel focus issues,accessibility,2020-08-02 12:35:03 +0000 UTC,cfagno,Opened,,"When you select a tab the current `tabpanel` is not focusable (bootstrap v5).
With some screen readers (like NVDA, ORCA) you can't read the `tabpanel` content selected like WAI ARIA practices.
See https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html : 
> When the `tab` list contains the focus, moves focus to the next element in the `tab` sequence, which is the `tabpanel` element.",,,mdo,"
--
Feel like it's focused for me? /cc @patrickhlauke 
--
",patrickhlauke,"
--
to clarify, the issue here is two-fold:

> When the tab list contains the focus, moves focus to the next element in the tab sequence, which is the tabpanel element.

bootstrap's tab list does not ""contain the focus"". the tab list is not a single tab stop, each individual tab is a separate tab stop.

however, NVDA and the like suppress regular reading keys (cursor keys) when you're focused on an element with `role=""tab""`, under the assumption that it's part of a tab list that processes cursor keys to change tabs. they arguably shouldn't, but they do.

so, while bootstrap's tab list does not contain focus, and does not use cursor keys to focus (for tabs that follow the manual activation pattern) or switch (for tabs that follow the automatic activation pattern) tabs - and therefore shouldn't need tab panels themselves to be focusable - NVDA and co. probably require it as otherwise they become non-functional  unless users realise they have to jump explicitly back into reading mode (NVDA key + SPACE).

authors can work around this currently by explicitly adding `tabindex=""0""` to each tab panel container ... but that makes them cumbersome for non-AT keyboard users. it's an annoying conundrum.

note that the bootstrap dynamic tabs / ARIA tabs approach is also currently only ... half-hearted. there's some work I started a while ago to remedy this, but time and lack of JS skills got in the way ... https://github.com/twbs/bootstrap/pull/28927
--
",,,,,,,,
31330,OPEN,Docs: live examples of alerts and toasts,backport-to-v4; docs; help wanted; v4; v5,2021-01-18 14:02:32 +0000 UTC,patrickhlauke,In progress,,"Not sure how easy/difficult it would be, since they require initialisation, but...would be nice to have actual working examples for https://v5.getbootstrap.com/docs/5.0/components/alerts/ and https://v5.getbootstrap.com/docs/5.0/components/toasts/",,,techboyg5,"
--
They already exist, you just linked to them :)
--
",patrickhlauke,"
--
they're already present and visible on the page when it loads. need live examples where you'd trigger something and THEN they show up. smartypants.
--
",StarTrooper08,"
--
@patrickhlauke Ya great idea that would be nice and beginner will easily understand the use of the bootstrap component .
But do the example should be in gif image form or exact coded form ?
--
",XhmikosR,"
--
Not sure how to proceed with the Alert live example. The moment it's closed, the element is removed from the DOM.

I think we need to recreate the element through JS so that we have a button which says `Show Alert` and manually hide/show it when the close button is clicked.
--
",,,,
31326,OPEN,Dropdown should consider iOS safe area for opening upwards,js,2021-01-13 20:51:13 +0000 UTC,mohsen1,Opened,,"Currently it uses window edge which cause tapping the item on the edge bring up the safari bottom bar 


https://gfycat.com/beautifulpeskycamel",,,,,,,,,,,,,,
31322,OPEN,Inconsistent Emoji when sans-serif is Noto Sans CJK/Source Han Sans,css; help wanted,2021-01-14 09:13:33 +0000 UTC,Small-Ku,Opened,,"Bug report:

- Operating system and version: All system in concept, especially Linux distros that with Chinese support
- Browser and version: All browsers that can set font for sans-serif
- Reduced test case: https://jsbin.com/gobared/

Steps:
1. Set browser default sans-serif to Noto Sans CJK/Source Han Sans, which is commonly used as Chinese/Japanese/Korean font in Linux distros.
2. Open a site with Emoji that built with Bootstrap

Screenshot:
![圖片](https://user-images.githubusercontent.com/16464896/87849696-0c8ca580-c91d-11ea-981f-b440c7ebd3ff.png)

Suggested fix:
Put Emoji fonts in front of text fonts like
```
$font-family-sans-serif:
  // Safari for OS X and iOS (San Francisco)
  -apple-system,
  // Chrome < 56 for OS X (San Francisco)
  BlinkMacSystemFont,
  // Emoji fonts
  ""Apple Color Emoji"", ""Segoe UI Emoji"", ""Segoe UI Symbol"", ""Noto Color Emoji"",
  // Windows
  ""Segoe UI"",
  // Android
  ""Roboto"",
  // Basic web fallback
  ""Helvetica Neue"", Arial, ""Noto Sans""
  , sans-serif !default;
```
",,,XhmikosR,"
--
@ffoodd @patrickhlauke can we close this since #31960 has landed?
--
",patrickhlauke,"
--
@XhmikosR i think this is slightly different aspect. #31960 warns about unicode chars being replaced by emoji that then can't be styled colour-wise, while this issue highlights that in some cases the emoji fonts are not kicking in, if i understand it correctly ... i.e. the opposite issue of what #31960 describes.

would reshuffling the order in which the fonts are called have any other adverse effects? if not, i'd say go for the suggested fix here (though to clarify, i assume this is just about moving the emoji fonts and not duplicating it like in the above code block?)
--

--
yes I believe that's, roughly, the request here in the thread starter. I think the only situation where this would have an adverse effect is where/if we/an author rely on a unicode char to kick in rather than an emoji char - but I believe that *we*'ve now consistenly moved to using SVGs rather than unicodes for things like ""x"" close controls, so can't think of situations where our components would be affected in any way.
--
",mdo,"
--
Hesitant to merge this without a thorough test. Would someone want to jump in and explore?
--
",ffoodd,"
--
If I understand what's going on, those kick in as `sans-serif` keyword value. So that makes me wonder: what if we simply move `sans-serif` keyword after the emoji fonts? Would it work?
--

--
Agreed, and even in that case it'd only need some `font-family` love for this specific situation. I'd say: let's try simply moving `sans-serif` after emoji fonts.
--
",,,,
31289,OPEN,Feature Request - New Width Classes,css; feature,2020-10-29 12:53:41 +0000 UTC,mrlife,In progress,,"`width: fit-content` -> `w-fit` would be great

Other options:

`width: min-content` -> `w-min`
`width: max-content` -> `w-max`

Could add the same for height, but not sure it's as useful.",,,ffoodd,"
--
Could you provide any use cases for those—and also, would there be any sense to add those values to `min-width` and `max-width` too?
--

--
Indeed, it helps :) 

I just came across another use case for `min-content` and `max-content`: [a codepen by Sven Wolfermann](https://codepen.io/maddesigns/pen/YNXvMz), [shared by Stefan Judis in a dedicated TIL post](https://www.stefanjudis.com/today-i-learned/a-use-case-for-css-min-content-and-max-content/).
--
",mrlife,"
--
@ffoodd I have a small sticky menu that I use `width: fit-content` to shrink to fit the size of the contents so that it is not the default width of 100%.

Does that help?
--
",juhas96,"
--
Hey I want to contribute on this issue 
--
",,,,,,
31266,OPEN,Ability to add listeners directly to objects like Modals/Collapse/etc,feature; js; v5,2020-11-17 23:13:04 +0000 UTC,arcanedev-maroc,Opened,,"How about a public method to add listener(s) to an object, something like:

```js
class Modal {
    //...

    on(event, callback) {
        this._element.addEventListener(`${event}${EVENT_KEY}`, callback);

        return this;
    }

    //...
}
```

This will allows us to do something like:

```js
var myModal = new bootstrap.Modal(document.getElementById('myModal'));

myModal
    .on('shown', function (e) {
        // do something...
    })
    .on('hidden', function (e) {
        // do something...
    });
```

Instead of:

```js
var myModal = new bootstrap.Modal(document.getElementById('myModal'));

myModal._element.addEventListener('shown.bs.modal', function (e) {
    // do something...
});
myModal._element.addEventListener('hidden.bs.modal', function (e) {
    // do something...
});
```",,,Johann,"
--
Hi @arcanedev-maroc,

Thanks I think it's a good idea, it'll be easier to listen to our events 👍 

Any other thoughts @twbs/js-review ?
--
",bardiharborow,"
--
I think this would make a prudent addition.
--
",XhmikosR,"
--
PRs welcome, but the sooner the better before v5 hits stable :)
--
",arcanedev,"
--
Hi @XhmikosR, i've created a PR: #32184
--
",,,,
31241,OPEN,"Thumb is difficult to drag using touch input with custom <input type=""range""> controls",feature,2020-09-18 08:34:56 +0000 UTC,polarstoat,In progress,,"When using custom `<input type=""range"">` controls with `.custom-range`, the thumb is difficult to drag using touch input (mobile and tablet). This occurs on iOS and Android, across browsers.

I recently observed some users interacting with the Bootstrap range sliders in my own project, and almost unanimously they had difficulties with tapping the thumb to drag it. Of course, anywhere in the track can be tapped to 'jump' the thumb to that position, but that doesn't seem to be the primary way users try to interact with it.

Could the hitbox for the thumb be increased in size? Perhaps with the `::before` / `::after` pseudo elements. It looks like material-ui does something like this, and in my own testing their slider thumb is far easier to drag.

The current effective hitbox is a `1.4rem` square (marked in transparent green):
![current](https://user-images.githubusercontent.com/20626621/86532180-b8ff6e00-bebf-11ea-94aa-d61f24564f45.png)

Could this be increased to twice the value of `$custom-range-thumb-width` — so by default a `2rem` diameter circle? (marked in transparent green):
![proposed](https://user-images.githubusercontent.com/20626621/86532207-f5cb6500-bebf-11ea-853c-090b1a097973.png)
",,,polarstoat,"
--
I've done some more research and it seems like `::before` / `::after` can't be used on `<input>` elements (see [this Stack Overflow answer](https://stackoverflow.com/a/4660434) and [this blog post](https://www.scottohara.me/blog/2014/06/24/pseudo-element-input.html)), so that wouldn't work as a solution.
--

--
I've found some success with the below code: ([which is also on CodePen here](https://codepen.io/polarstoat/pen/XWXZzyx))

```scss
.custom-range {
  &::-webkit-slider-thumb {
    background-clip: padding-box;
    border: 0.4rem solid rgba(0, 255, 0, 0.5); // translucent green used to aid development, set to 'transparent' in production
    transform: scale(4);
  }
}
```

It seems promising, but the box-shadow on `:focus` will need fixing.

<img width=""757"" alt=""new"" src=""https://user-images.githubusercontent.com/20626621/86535483-9299fc80-bed8-11ea-9921-86c0fb8625f6.png"">

--

--
Actually I've got it working in Firefox just fine ([see updated CodePen](https://codepen.io/polarstoat/pen/XWXZzyx)):
```scss
.custom-range {
  &::-webkit-slider-thumb {
    background-clip: padding-box;
    border: 0.4rem solid rgba(0, 255, 0, 0.5);
    transform: scale(4);
  }
  &::-moz-range-thumb {
    background-clip: padding-box;
    border: 0.4rem solid rgba(0, 255, 0, 0.5);
    box-sizing: border-box;
    transform: scale(4);
  }
}
```

I'm not sure why it becomes necessary to explicitly set `box-sizing: border-box;` for Firefox, but with it it seems to look/work exactly as Safari/Chrome.

It seems unlikely we'll see better browser support for touch controls like this anytime soon, and currently the usability of them is quite poor. I don't think this solution (once the `:focus` outline if figured out/fixed) is a particularly hacky one.
--
",patrickhlauke,"
--
note that material-UI and similar frameworks end up ""faking"" the sliders with extra spans/divs etc, wihch in the end break them for users of touch+assistive technologies (i've filed issues with some of them about this).

currently, the bootstrap slider simply adds a bit of style/finesse to the native `<input type=""range"">`, so the problem is fundamentally one of the browsers not making these controls touch-friendly enough. not sure if there's a clean solution to this at this point, i'm afraid.
--

--
though potentially there are some more hacky CSS-based approaches that could be gleaned from https://css-tricks.com/sliding-nightmare-understanding-range-input/
--

--
unfortunately doesn't work in Firefox though. that's the problem generally, cross-platform support for some of these form styling hacks is not great.
--
",XhmikosR,"
--
Yeah, seems to work fine on Firefox. I wonder if autoprefixer supports this.
--

--
I think our best bet is to ask for autoprefixer to prefix these properties. In the meantime, we could land  a patch with the needed vendor prefixes. PRs welcome.
--
",,,,,,
31226,OPEN,Vertical timeline component,css; feature; help wanted,2021-01-13 20:33:15 +0000 UTC,webdev3301,In progress,,How about a vertical timeline component with a header and a paragraph? Many frameworks already have it and it would be nice to have it in Bootstrap.,,,mdo,"
--
Like a split-column with timeline down the middle? Or a left aligned timeline with content on the right? What about a horizontal timeline variant? Any other details or behaviors?
--
",webdev3301,"
--
Here is the CodePen reference [Simple Responsive Timeline](https://codepen.io/brady_wright/pen/NNOvrW). Out of the 65 examples I have tested, this one really cares about being responsive.

Three examples all shrinking to one universal look yet all starting in different positions from a bigger view port.

Hopefully this provides good inspiration.
--
",alanmehio,"
--
It would be nice  if the title reflects a more generic approach like time line component. 
--
",subrayamallya,"
--
Would it make sense to have this timeline component (vertical) and a multi-step process (horizontal) the same, by having an Orientation attribute?
--

--
There is also another issue for this #31014 - Duplicate?
--
",MauricioHernanCabrera,"
--
Wooow it is a great feature
--

--
I can do that feature, if you are interested @suchislife801 
--
",,
31189,OPEN,Be consistent with API tables,docs; v5,2020-06-27 11:28:41 +0000 UTC,XhmikosR,Opened,,"It seems we are also inconsistent with tables in some components. For example, https://deploy-preview-31130--twbs-bootstrap.netlify.app/docs/5.0/components/tooltips/#methods is using a table but https://deploy-preview-31130--twbs-bootstrap.netlify.app/docs/5.0/components/carousel/#methods doesn't.

The no table approach has the advantage that one can link directly to a method. Either way, we should streamline this.

_Originally posted by @XhmikosR in https://github.com/twbs/bootstrap/pull/31130#issuecomment-647108644_",,,,,,,,,,,,,,
31166,OPEN,[BS4.5] Button toolbar not working with Navs,feature; has-pr; js; v4; v5,2021-01-13 01:41:49 +0000 UTC,marceloverdijk,Opened,,"Maybe this is not a real bug report but a feature request.

I'm trying to use [Bootstrap Navs with JavaScript behaviour](https://getbootstrap.com/docs/4.5/components/navs/#javascript-behavior) but instead of the tabs and pill I would like to have button toolbar.

Now with a simple toolbar this works:

```
  <div class=""nav btn-toolbar"" role=""tablist"">
    <a class=""nav-link btn btn-secondary active"" role=""button"" data-toggle=""tab"" href=""#home-tab"">Home</a>
    <a class=""nav-link btn btn-secondary"" role=""button"" data-toggle=""tab"" href=""#profile-tab"">Profile</a>
    <a class=""nav-link btn btn-secondary"" role=""button"" data-toggle=""tab"" href=""#contact-tab"">Contact</a>
  </div>
  
  <div class=""tab-content"">
    <div class=""tab-pane fade show active"" id=""home-tab"" role=""tabpanel"">
      Home...
    </div>
    <div class=""tab-pane fade"" id=""profile-tab"" role=""tabpanel"">
      Profile...
    </div>
    <div class=""tab-pane fade"" id=""contact-tab"" role=""tabpanel"">
      Contact...
    </div>
  </div>
```

I'm applying the `nav` and `nav-link` classes and the tab behaviour kicks in.


Now I wanted to go a but further with a grouped button toolbar like:

```
  <div class=""nav btn-toolbar mb-3"" role=""tablist"">
    <div class=""btn-group mr-2"" role=""group"">
      <a class=""nav-link btn btn-secondary active"" role=""button"" data-toggle=""tab"" href=""#home-tab"">Home</a>
      <a class=""nav-link btn btn-secondary"" role=""button"" data-toggle=""tab"" href=""#profile-tab"">Profile</a>
    </div>
    <div class=""btn-group"" role=""group"">
      <a class=""nav-link btn btn-secondary"" role=""button"" data-toggle=""tab"" href=""#contact-tab"">Contact</a>
    </div>
  </div>
```

The first time I navigate to each tab (using the toolbar buttons) works, but as soon as I want to navigate to a tab the second time it doesn't work.

The reason it does show the tab again is that the navlink anchor in the toolbar was still `.active`.  The `.active` class was never removed as it is only looking for children under the `.nav` div:

https://github.com/twbs/bootstrap/blob/v4-dev/js/src/tab.js#L137-L140

```
  _activate(element, container, callback) {
    const activeElements = container && (container.nodeName === 'UL' || container.nodeName === 'OL')
      ? $(container).find(SELECTOR_ACTIVE_UL)
      : $(container).children(SELECTOR_ACTIVE)

    ..

    if (active && isTransitioning) {
      const transitionDuration = Util.getTransitionDurationFromElement(active)

      $(active)
        .removeClass(CLASS_NAME_SHOW)
        .one(Util.TRANSITION_END, complete)
        .emulateTransitionEnd(transitionDuration)
    } else {
      complete()
    }

```

Now I wonder if it would as simple to change:

`$(container).children(SELECTOR_ACTIVE)`

to:

`$(container).find(SELECTOR_ACTIVE)`


I think it would be nice to be able to navigate tabbed tabbed content with other Bootstrap controls like this.


Bug reports must include:

- Operating system and version: macOS 10.15.5
- Browser and version: Chrome 83.0.4103.116
- Test case: https://jsfiddle.net/marceloverdijk/5eznyvua/
",,,RobustProgram,"
--
Hi @marcelkorpel I had a look and changing `$(container).children(SELECTOR_ACTIVE)` to `$(container).find(SELECTOR_ACTIVE)` does indeed fix the bug (adds the feature).
--

--
I apologise haha. @marceloverdijk, I was meant to mention you.
--
",marcelkorpel,"
--
Thank you, @RobustProgram, but I did nothing: you mentioned the wrong Marcel. :)
--
",zhangchenglin,"
--
This seems to be a reasonable requirement for tabs to support trigger buttons and not sibling elements.
--
",,,,,,
31149,OPEN,Outline checkbox toggle button state indistinguishable when hovered,css; v5,2020-06-24 19:52:32 +0000 UTC,patrickhlauke,In progress,,"https://v5.getbootstrap.com/docs/5.0/forms/checks/#outlined-styles has the exact same visual style for a checked and unchecked button when hovered. This makes it unintuitive to use, and a pain to debug when needed as you constantly have to move your mouse back away from the control you just clicked to see what its actual state is.

Sequence of what currently happens (from left to right): 1) unchecked, not hovered; 2) unchecked, hovered; 3) checked, hovered, focused; 4) unchecked, hovered, focused. (for ease of seeing what's happening, I forced the underlying checkbox to remain visible)

> ![outline-toggle](https://user-images.githubusercontent.com/895831/85342613-f852b580-b4e2-11ea-8bc6-22058ab6cc90.png)

Note that the focus itself is not at fault here either: 1) unchecked, not hovered; 2) checked (and then moved focus away again), hovered.

> ![outline-style-hovered](https://user-images.githubusercontent.com/895831/85342834-5b444c80-b4e3-11ea-80fb-0e812127856d.png)",,,patrickhlauke,"
--
Mulling this over, perhaps the simplest change would be *not* to have the change to ""solid background with white text"" on hover at all on unchecked+hovered case...just leave the style the same as unchecked non-hovered outline button
--

--
oh i hadn't seen #28999 - yes, that would certainly disambiguate the whole thing. kind of a halfway between the current situation and my more radical ""*not* have the change on hover at all"" mulling above.
--
",mdo,"
--
Thinking #28999 would address this if we go that route. I think I've changed my tune on the outline buttons for this very reason. Thoughts?
--
",,,,,,,,
31136,OPEN,Add the option to change the default gutter-y between columns.,feature,2020-06-21 12:29:21 +0000 UTC,eMtlk,Opened,,"v5: There is no variable to change default y-gutter between columns.

```scss
@mixin make-row($gutter: $grid-gutter-width) {
  --bs-gutter-x: #{$gutter};
  --bs-gutter-y: 0;
  // ...
}
```

**--bs-gutter-y** is hardcoded. It would be great to have a variable to change it.

",,,,,,,,,,,,,,
31099,OPEN,Dynamic Tabs; where href starts with number; not working,help wanted,2021-03-09 16:13:51 +0000 UTC,PackeTsar,In progress,,"Example: https://jsfiddle.net/wcq4L2fr/1/

When the nav-link href starts with a number, or is only a number (`<a class=""nav-link"" data-toggle=""tab"" href=""#1"">`), it will not expose the referenced contents (`<div class=""tab-pane fade"" id=""1"">`).

If the nav-link href is simply alpha, or begins with an alpha character, it works fine.",,,PackeTsar,"
--
This may be a duplicate of #1956, but it doesn't seem the issue was resolved there
--
",patrickhlauke,"
--
this falls under the same umbrella as this https://github.com/twbs/bootstrap/issues/31005

short version: HTML5 now allows ids to start with a number. but then when you use them in your CSS, or in JS when using things like `querySelector` (which under the hood BS uses), you'd need to do extra work to escape these id references first. BS currently doesn't do that (and hints at this with https://getbootstrap.com/docs/4.5/getting-started/javascript/#selectors), but admittedly this could be made clearer / BS could try and auto-escape references in its functions.

the workaround for now is to stick to `id`s that follow https://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
--

--
but the point is the HTML specs now allow things like `id=""1""`. it's the CSS spec that hasn't caught up with it properly. (edit: see https://mathiasbynens.be/notes/html5-id-class)

in terms of how, one approach would be to run any selector passed to BS' own functions (that expect a CSS selector) through an encode step (to encode the problematic characters - see https://mathiasbynens.be/notes/css-escapes) before passing the cleaned/encoded selector to things like `querySelector`
--
",XhmikosR,"
--
I'm not sure what we can do in the JS side to allow this? Personally, I always follow the specs in all my projects so I never had the need for such thing.
--

--
You are welcome to look into it. As long as we follow the specs, and we can fix this on our side without lots of code, I don't see why not adding support for this.
--

--
I guess this is one of the reasons we should consider regarding dropping Legacy Edge support.
--

--
Now with Legacy Edge dropped, any PRs to switch to CSS.escape are welcome!
--
",Johann,"
--
Being able to use the native: `CSS.escape` would be the best option, but not really supported currently
--
",ffoodd,"
--
@Johann-S Just checked [on MDN](https://developer.mozilla.org/fr/docs/Web/API/CSS/escape) and [CanIUse](https://caniuse.com/mdn-api_css_escape), support is pretty good. Only missing Legacy Edge, for v5…

Also [Mathias Bynens wrote a lightweight polyfill](https://github.com/mathiasbynens/cssesc) (only 3.43kb unminified): might it be used?
--
",mdo,"
--
Let's drop it then :). We've been teetering on the decision for awhile now, I think Alpha 3 is the time to do it.
--
"
31088,OPEN,popovers: do not dismiss on next click inside,feature; js,2020-06-18 08:55:57 +0000 UTC,inwardmovement,Opened,,"I think [popovers dismissed on next click](https://getbootstrap.com/docs/4.5/components/popovers/#dismiss-on-next-click) should not dismiss when the click is inside the popover, to allow selecting text, etc.",,,patrickhlauke,"
--
I'd agree with this, yes (though it will make the coding likely a bit less straightforward than what it does currently)
--
",,,,,,,,,,
31057,OPEN,Beta/Stable v5 tasks,docs; v5,2020-12-07 14:19:38 +0000 UTC,mdo,In progress,,"Tracking for before we go stable with v5—we'll need to update `robots.txt`.

TODO:

- [ ] Redirect `v5.getbootstrap.com` pages or add a callout at the top of each page
- [ ] Make sure there are no page overrides on v4-dev docs; we should be careful after we move v5 docs to the main site and when we release the next 4.x version
- [ ] Unmark RTL as experimental?

Beta 1:

- [x] ~~Revert 723cd8d12bdd48f389234b5fc40c3b1789807b4d (not blindly)~~ - Done in #32255
- [x] ~~Revert #32099~~ - Done in #32255
- [ ] Remove unneeded docs redirects? We may skip this

Stable:

- [ ] Revert fc74a0d91589c120bf8b9a3913fbceb016733c61 (when we switch to the `latest` npm tag)
- [ ] Revert #32194
",,,mdo,"
--
Adding to both v5-stable and v5-beta in case we do what we did with v4 and put the beta docs on the main site.
--
",XhmikosR,"
--
For reference https://github.com/twbs/bootstrap/commit/723cd8d12bdd48f389234b5fc40c3b1789807b4d#diff-d7f6c1ca03bd330a561f8e674d577ee8

We'll need to revert all those changes when we are ready to move the v5 docs to the main repo.
--
",,,,,,,,
31054,OPEN,Add z-index class,css; feature; has-pr; v5,2020-09-04 06:05:53 +0000 UTC,DavidOlawale,Opened,,"It would be nice to include utility classes for css z-index, classes like:
```
.z-index-1{
    z-index: 1;
}
.z-index-2{
    z-index: 2;
}
```",,,,,,,,,,,,,,
31033,OPEN,Add chips,css; feature; help wanted,2021-02-04 05:41:00 +0000 UTC,davidm49090,In progress,,"I know this has been nixed a few times, but the time is right to add chips to the UI toolbox. Would make life a lot easier for forms development.

https://material.io/components/chips",,,mdo,"
--
Just the HTML and CSS, or JS to go with it for specific implementations?
--
",davidm49090,"
--
Thank you for the fast reply.

HTML and CSS would be great, but as long as it plays nicely with jQuery I would be happy.

An ideal solution would be one that would store an ID, so that you could have a contact chip that displays the person's name while holding their email address.
--

--
You could make this my birthday _and_ Christmas gift this year.
--

--
> Just the HTML and CSS, or JS to go with it for specific implementations?

I know you have a lot of other components to focus on right now, but I'd love to find this under the Christmas tree.
--

--
> So
> Chip Style
> Icon on the front
> Text label
> optional close button/icon
> optional checkbox state?

Yes! I think that's it.
--
",leandroruel,"
--
i believe the ""close"" button needs JS and looks like he works as a checkbox like buttons with toggle state
![chips](https://user-images.githubusercontent.com/2836002/84841899-17040880-b01a-11ea-8558-c7e71b2d9608.png)

--
",klutchdev,"
--
Is there anything I can do to help? Or is this all under control? 
Awesome idea!
--
",prikeshsavla,"
--
So
Chip Style
Icon on the front
Text label
optional close button/icon
optional checkbox state? 

--

--
I think I can work on that.
--
",,
31014,OPEN,Add a Steppper component,css; feature; help wanted; js,2021-01-13 00:07:17 +0000 UTC,Zerotask,In progress,,"I'd suggest to add a Stepper component, similar to the component of MDB.
Steppers provide a convenient way of breaking a complex form down to smaller steps.
Benefits:
- Smaller space required (since it uses a collapse-like style)
- Easier to read (since you always just see a part of the whole)

Example:
You have a registration which requires you to fill out a form of 16 input fields which can be overwhelming for a user.
With a stepper you could create 4 steps and group it logically, e. g. contact data, interests etc.

URL: https://mdbootstrap.com/docs/jquery/components/stepper/

**Example Screenshots taken from the MDB component page**
![grafik](https://user-images.githubusercontent.com/20150243/84431874-52729180-ac2c-11ea-8a63-09acc2c28ce3.png)

---

![grafik](https://user-images.githubusercontent.com/20150243/84431926-64543480-ac2c-11ea-82b5-b9cc57d4585d.png)

---

![grafik](https://user-images.githubusercontent.com/20150243/84431962-703ff680-ac2c-11ea-99a2-937138bffc80.png)

---

There is also a similar component in Semantic UI: https://semantic-ui.com/elements/step.html

![grafik](https://user-images.githubusercontent.com/20150243/84440693-bac86f80-ac3a-11ea-8922-836406241e71.png)

---

![grafik](https://user-images.githubusercontent.com/20150243/84440754-d3388a00-ac3a-11ea-8bda-f24b83ff93de.png)
",,,mdo,"
--
This seems more well suited for an example than a new full component.
--

--
> Are there any criteria to get counted as a ""full component""?
> For example the component [breadcrumb](https://getbootstrap.com/docs/4.5/components/breadcrumb/) has way less content to offer than this feature suggestion.

Very fair question. Don't have an answer just yet, but thanks for asking that. Maybe we can do more here. Thoughts @ffoodd on including this in the core? Or having an example with @Johann-S's project?
--
",Zerotask,"
--
Are there any criteria to get counted as a ""full component""?
For example the component [breadcrumb](https://getbootstrap.com/docs/4.5/components/breadcrumb/) has way less content to offer than this feature suggestion.

If you look at the MDB component page you see working examples with different variations.
--

--
@XhmikosR I think many people are like @leandroruel and rather than requesting it, they simply google for a plugin.
I also made the experience that my suggestions often get declined and I can understand, that people don't want to request new features.

Besides that I like the modular approach he suggested. So in the future there could be a ""core"" module which doesn't include components like a Stepper and if you want it, then you opt-in.
--
",herbalite,"
--
I've used a stepper with a simple jQuery plugin ( the pages were separated by a fieldset element )

Later as that particular website migrated, I had to make a Bootstrap 4 usable component. Besides the responsive issues (dropping the fieldset requirement amongst other things), there was the need for page by page validation, which required hooks. There was also the need for adding or removing steps dynamically, which required quite some messing with the core code plugin, and more hooks. Then there were async callbacks needed that required form validation too, and disabling and enabling components, which meant more hooks.

While still in use, I think that stepper component of my own has too many hooks to get hooked ( pardon the pun ).

Having just a barebone stepper, would be quite limiting in userland, as I found out, when the demand came to add more responsive stuff to my version.

So a stepper can be done, but I would not recommend it to include it as core component into Bootstrap, as it requires much more JS than we see for the average Bootstrap component.

Just my 2 cents.
--
",XhmikosR,"
--
@Johann-S has a stepper plugin you can use https://github.com/Johann-S/bs-stepper
--

--
After the recent changes and depending if we drop Legacy Edge support, I think we'll have room for new components. Remember we have the #29017 that should land at some point (I need to rebase it probably).
--

--
We don't plan to split the packages at this point. Maybe things will be better eventually and we'll get to do it. I'm in favor but I don't want to have to use yarn.

Back to the point, TBH you are the only one who expressed this request AFAICT. @Johann-S could look into it, assuming everyone agrees with adding said component, he has time and we check how much it adds to the project.
--

--
We could at least mention bs-stepper in our docs, assuming it works with v5.

@mdo: your call about adding bs-stepper in core. Not sure how much it will increase our size. I see some use cases for sure, but it seems this is the first time it was requested.
--
",ffoodd,"
--
I also made one in [Boosted](https://boosted.orange.com/docs/4.5/components/stepbar/) —[`scss` sources](https://github.com/Orange-OpenSource/Orange-Boosted-Bootstrap/blob/v4-dev/scss/_o-step-bar.scss)— however it's only horizontal ATM.
--

--
I guess @Johann-S stepper is closer from what's being asked. Maybe could we add an integration example, at least?

To add something to our core, I think it should be requested several times. This is the only way to not completely bloat the output, and ensure a component would be helpful.

Did we have other requests for this kind of things?
--
",leandroruel,"
--
to be honest, this component could be very useful for me, i just don't open issues requesting it because i'm always afraid of someone close it and say: 'no' lol

 BS is a CSS framework but, why not add more JS based components?

bootstrap can start making components as separate from the core and plugable through npm.

eg: @bootstrap/stepper, @bootstrap/carousel
--
"
31002,OPEN,Option for switch label to display on the left,css; feature,2020-06-15 23:38:51 +0000 UTC,mrlife,Opened,,"It would be really useful to have the label on the left of the toggle. If it's possible to update this so the order of the `label` and `input` determine the order they are displayed would one option.

When I have right-aligned switches, it looks a lot better when the text is on the left of the switch.",,,mdo,"
--
v5 adds the ability to have switches (plus checks and radios) without labels, so you can place them anywhere, but maybe there's more to be done so that positioning/placement can be easier.
--
",,,,,,,,,,
30977,OPEN,Use scrollspy on docs pages,docs; help wanted,2020-11-19 07:38:11 +0000 UTC,techboyg5,In progress,,"On the docs pages, the sidebar on the right side of the page should use scrollspy.",,,pcmourya,"
--
Hello sir,
I'm just a beginner and I want to resolve this issue. May I take this.

Thanks
--
",ffoodd,"
--
@pcmourya Sure, feel free to open a PR :)
--

--
@raina02 feel free to open a PR :)
--
",techboyg5,"
--
> Hello sir,
> I'm just a beginner and I want to resolve this issue. May I take this.
> 
> Thanks

For reference purposes, [here are the docs for the scrollspy component.](https://getbootstrap.com/docs/4.5/components/scrollspy/)
--

--
> 
> 
> Hi, so are PR's still welcome for this? If so, I'd gladly see what I can do!

Feel free to!
--
",raina02,"
--
I would like to work on it.
--
",RHSebregts,"
--
Hi, so are PR's still welcome for this? If so, I'd gladly see what I can do!
--
",XhmikosR,"
--
IIRC the problem is that we can't customize the ToC markup. Might be worth making an upstream FR in the Hugo repo.

I definitely think this would be a nice addition.
--
"
30976,OPEN,Collapse animation is jittery in Firefox Android (preview and live),css; help wanted; js; performance; v4; v5,2020-12-06 06:51:52 +0000 UTC,Noisycall,In progress,,"As the title suggests, the collapse animation is jittery on firefox mobile, both the preview and live builds.

I have tested this on two devices and both have the same issue.

Here is a link to the [JS Bin](https://jsbin.com/kezocoqaji/1/edit?html,output)

This code is taken straight from the Bootstrap Demos, along with some lorem ipsum to simulate page content.",,,XhmikosR,"
--
Firefox for Android is, unfortunately, so bad in performance. Even their latest Beta, which has improved performance, is still not as smooth as Chromium based browsers.

That being said, right now, we transition `height .35s ease`, which is known to not have the best performance because the GPU isn't used.

I'm not sure we can do anything, but patches are welcome.

CC @twbs/css-review  in case you have any ideas.
--

--
I don't want to use `will-change` TBH. I'd rather use one of the properties that work pretty well when transitioned.
--

--
> Maybe using transforms? https://medium.com/outsystems-experts/how-to-achieve-60-fps-animations-with-css3-db7b98610108

Well, yeah, that's what I mean with properties that work well when transitioned :)
--

--
Yeah, it's not so easy to make the change but we should definitely look into it.
--

--
This might help: https://css-tricks.com/performant-expandable-animations-building-keyframes-on-the-fly/
--
",ffoodd,"
--
Did anyone try to use `will-change` for collapses? It's supported by Firefox for Android: not quite sure it'd improve the result, but that may worth a try.

- [`will-change` on MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/will-change)
- [Can I Use `will-change`](https://caniuse.com/#search=will-change)

@Noisycall may you try the following pen, please: https://codepen.io/ffoodd/pen/NWxGEQQ ?
--
",N8n5h,"
--
> may you try the following pen, please: https://codepen.io/ffoodd/pen/NWxGEQQ ?

I'm not OP, but I have the same problem and the performance still is a bit jittery even with `will-change`

> I'm not sure we can do anything, but patches are welcome.

Maybe using transforms? https://medium.com/outsystems-experts/how-to-achieve-60-fps-animations-with-css3-db7b98610108
--
",Noisycall,"
--
Hello, sorry I haven't checked this thread in a while.

I have used transform and transition's before, but I'm not sure how I would apply that to the inbuilt bootstrap implemention.

> 
> 
> > Maybe using transforms? https://medium.com/outsystems-experts/how-to-achieve-60-fps-animations-with-css3-db7b98610108
> 
> Well, yeah, that's what I mean with properties that work well when transitioned :)


--
",,,,
30913,OPEN,Add docs about input-group and dropdowns,docs; v4,2021-01-12 18:56:05 +0000 UTC,XhmikosR,In progress,,"If you want to use a dropdown on the button that isn't at the last element of the input group, you can do it by using multiple `.input-group-append`s. I mentioned about this usage in #25075, but it isn't described in the documents.

Demo: https://codepen.io/anon/pen/wNJWeL

Why need multiple `.input-group-append`? A `.dropdown-menu` must be the last child of the wrapper (`.dropdown`, `.btn-group` or an element has `position: relative`). This mean the following code is incorrect:

```html
<div class=""input-group"">
  <input type=""text"" class=""form-control"">
  <div class=""input-group-append"">
    <button class=""btn btn-outline-secondary dropdown-toggle"" type=""button"" data-toggle=""dropdown"">Dropdown</button>
    <!-- dropdown-menu must be at the last of the container. -->
    <div class=""dropdown-menu"">
      <a class=""dropdown-item"" href=""#"">Action</a>
      <a class=""dropdown-item"" href=""#"">Another action</a>
      <a class=""dropdown-item"" href=""#"">Something else here</a>
    </div>
    <button class=""btn btn-outline-secondary"" type=""button"">Button</button>
  </div>
</div>
```

So, you should use multiple `.input-group-append`s:

```html
<div class=""input-group"">
  <input type=""text"" class=""form-control"">
  <div class=""input-group-append"">
    <button class=""btn btn-outline-secondary dropdown-toggle"" type=""button"" data-toggle=""dropdown"">Dropdown</button>
    <div class=""dropdown-menu"">
      <a class=""dropdown-item"" href=""#"">Action</a>
      <a class=""dropdown-item"" href=""#"">Another action</a>
      <a class=""dropdown-item"" href=""#"">Something else here</a>
    </div>
  </div>
  <div class=""input-group-append"">
    <button class=""btn btn-outline-secondary"" type=""button"">Button</button>
  </div>
</div>
```

_Originally posted by @ysds in https://github.com/twbs/bootstrap/issues/28150#issuecomment-459557777_",,,Ray,"
--
Hi, @XhmikosR,
This issue happen inside the .input-group-append class element only, and can't found this inside the .input-group-prepend class element. It is strange.
See #30698 (I have append some detail information)
At last, I add .rounded-0 for solve it.
--
",XhmikosR,"
--
@MartijnCuppens @ffoodd feel free to close this if it's not valid anymore
--

--
@MartijnCuppens does it still happen on v4? The issue is about v4.
--
",MartijnCuppens,"
--
Not valid anymore indeed: https://v5.getbootstrap.com/docs/5.0/forms/input-group/#segmented-buttons
--

--
Didn't check that indeed.
--
",mdo,"
--
Sometimes I hate our input group lol. Updated the demo from the opening comment and there are issues with both append and prepend. https://codepen.io/emdeoh/pen/gOwBxzN
--
",,,,
30911,OPEN,Carousel lazy loading,feature; help wanted; js,2021-03-04 22:35:13 +0000 UTC,marceloverdijk,Opened,,"It would be nice if the carousel would support lazy loading of images.
E.g. in case the 2nd or 3rd slide is a Google Maps Static image it would be useful ($$$) to only load it when the particular slide is being displayed.",,,XhmikosR,"
--
You could try with `loading=true` for images. Lazyloading is outside the scope of our plugin and it would require a lot of code to achieve that.
--

--
Not really, no.

Everyone's free to use whatever they want for lazyloading.

What we could do if someone submitted a PR, is use Intersection Observer
assuming it doesn't add a lot of code and it's handled gracefully.

On Thu, Jun 11, 2020, 22:51 Patrick Hintermayer <notifications@github.com>
wrote:

> @XhmikosR <https://github.com/XhmikosR> Could adding
> https://github.com/aFarkas/lazysizes a possible option to provide this
> feature?
> Personally I think lazy loading is mandatory for today's websites since
> they reduce traffic and performance very easy.
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/twbs/bootstrap/issues/30911#issuecomment-642894473>,
> or unsubscribe
> <https://github.com/notifications/unsubscribe-auth/AACVLNJLFH6HDRYK2JFIRULRWEYTDANCNFSM4NMEG34Q>
> .
>

--
",Zerotask,"
--
@XhmikosR Could adding https://github.com/aFarkas/lazysizes a possible option to provide this feature?
Personally I think lazy loading is mandatory for today's websites since they reduce traffic and increase performance very easy.
--
",epignosis567,"
--
Hi. Did this ever go anywhere? I've tried a variety of lazy loading tutorials to get it to work with a carousel inside of a modal but I'm unable to get anything to work. I assumed this was the default functionality, so I agree that it is basically a necessity these days. 
--
",,,,,,
30882,OPEN,Dropdowns don't close on click in shadow dom / custom element,js; v4; v5,2020-05-25 09:14:27 +0000 UTC,mohe2015,Opened,,"Dropdowns don't close on click in shadow dom / custom element.

- Operating system: ArchLinux
- Browser: Firefox Nightly 78.0a1, Chromium 83.0.4103.61
- https://codepen.io/mohe2015/pen/wvKOBNz
- affects latest version v4.5.0 and also master
- maybe because of https://developers.google.com/web/fundamentals/web-components/shadowdom#events but I don't have enough knowledge of bootstrap to fix this myself
- I know that this is not the intended way to use custom elements but it may be how you use them if you want to use bootstrap but still want to use custom elements for your own things.
- I hope I didn't mess anything up.
- Any help would be really appreciated.",,,,,,,,,,,,,,
30846,OPEN,Dropdown .show placement,js,2020-05-18 18:16:39 +0000 UTC,mdo,Opened,,"While working on #30831 I noticed that sometimes our `.show` is added to the parent `.nav-item` and sometimes it's added directly to the `.dropdown-toggle`. I could be missing a reason for why this is done, but maybe it's possible to address and make more consistent.",,,,,,,,,,,,,,
30843,OPEN,Atmosphere package for Bootstrap is no longer compatible with Meteor 1.10 release,meta; v4,2020-11-23 19:21:54 +0000 UTC,sarahmattar,In progress,,"Meteor 1.10.x has some breaking changes for the version of Bootstrap that is hosted on [www.atmospherejs.com](https://atmospherejs.com/twbs/bootstrap) - it will not allow the package to install because the version of Bootstrap in the package wants to downgrade the version of jQuery that Meteor 1.10 uses to 1.11.1 from 3.0.0. 

For those who are attempting to install Bootstrap for use with Meteor via the [package management system, it is no longer able to be installed. Here is the output from the console when trying to install:

```
 => Errors while adding packages:
While selecting package versions:
error: Potentially incompatible change required to top-level dependency: jquery 1.11.11, was 3.0.0.
Constraints on package ""jquery"":
* jquery@1.11.9 || 3.0.0 <- blaze 2.3.4 <- blaze-html-templates 1.1.2
* jquery@1.0.1 <- twbs:bootstrap 3.3.6
To allow potentially incompatible changes to top-level dependencies, you must pass --allow-incompatible-update on the command line.
```

This package is long overdue for an update, as it was last packaged with 3.3.7 in November of 2015, but as the official producers of the package, it would be nice to get it upgraded to the latest bootstrap version.",,,XhmikosR,"
--
Feel free to submit a PR to fix it. We don't use that package manager.

@mdo that's why I insist that we don't support package managers we don't control nor test... Something that isn't tested is bound to break.
--

--
@sarahmattar sorry for not responding sooner to your PR, I honestly still have it in my backlog :)

That being said, my main issue is that I have no knowledge of meteor.js nor how it works. Also, v4-dev requires jQuery, while the main branch doesn't. If you think you can make things work again let us know and I'll really try to respond faster next time.
--
",sarahmattar,"
--
Okay, I'll look into what needs to be done to package the most recent version of Bootstrap for Atmosphere's package management and then put it in. 

To be fair, this is likely more of a factor of Meteor being bought by Tiny and pushing out a few sizeable releases within the last 6 months after being pretty sparse with the releases in the late 2010's. Atmosphere also stagnated in use and adoption as most developers went to NPM, so it would have been easy to lose track of, even if someone else on the Bootstrap development team packaged it for Atmosphere back in 2015. 
--

--
I think there is a publishbot that is attached to twbs’s atmospherejs.com account that will vet anything that comes through once an updated package.js file is merged into the version release branch. I closed these pull requests because back in May, I really had no idea how to work with other devs collaboratively on PR’s (even though I knew how to fix the issue) and quite honestly for that reason, they were a bit of a mess. Now I have a dev job and review them daily so I could re-fork the repo, open a fresh PR and it’d be a much tidier one. 

Sent from my iPhone

> On Nov 23, 2020, at 6:13 AM, Gaël Poupard <notifications@github.com> wrote:
> 
> ﻿
> @XhmikosR Just to know, couldn't we add some action on release event or something to test some package managers installation?
> 
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub, or unsubscribe.

--

--
Ah okay. Here is some backstory on Meteor, as there is a concurrent evolution between Meteor and Node which explains the package system: 

Meteor is a fullstack platform built on Node. It integrates MongoDB and front-end rendering engines like React, Blaze, and Vue, and has some extra proprietary libraries. It's been around since about 2012. Initially, to accommodate these fullstack capabilities, Meteor developed it's own package management ecosystem. Developers could add packages to their projects by typing, for example,  `meteor add twbs:bootstrap` into the command line. This is how [atmospherejs.com](https://atmospherejs.com) was born - it is the user-facing website for Meteor's central package repository. Meteor keeps a record of all packages installed in a project inside a proprietary folder and compiles the specified versions at runtime.

In version 1.3 of Meteor, they began to allow NPM dependency installation alongside Meteor's native packages. Since Meteor's packages were not stored in `node_modules`, so there was no real risk of collision when installing NPM dependencies. NPM dependencies could be installed by prepending `meteor` to the usual `npm install` command (i.e - `meteor npm install bootstrap`). By 2015, Node was gaining in popularity and more NPM package dependencies were being produced, so Atmosphere packages began to fall out of favour. Atmosphere package development began to languish in 2016/2017... but at the same time, Meteor Developer Group was focusing most of it's attention on Apollo (GraphQL client) which had taken off, so Meteor itself got minimal attention and minimal updates were pushed out over the last years of the 2010's. This meant most outdated Atmosphere packages that simply relied on the latest version of a Meteor-published packages (like jquery) did not break until recently. 

Fast forward to 2020: Meteor has been acquired by a new company, and they suddenly begin pushing out updates to their own platform - they've had about 5 releases in the last 11 months. They also updated their Atmosphere package versions with the new releases (jquery went from version 1.11.11 to 3.0.0), and that broke many packages that relied on the old package version (like Bootstrap). 

TL;DR: To go forward and fix the package's dependency versioning, we would need the login details for twbs's Atmosphere [account](https://atmospherejs.com/twbs/) to upload the updated package.js file (unless the publishbot listed on the [package details page](https://atmospherejs.com/twbs/bootstrap) will detect the change and do it for us). There hasn't been anything pushed to Atmosphere in about 5 years, so the latest version on there is Bootstrap 3.3.6. Dan Dascalescu is listed as one of the people associated with the TWBS account: is he still around and contributing? 

Here is what I have done in another [PR](https://github.com/barbatus/stars-rating/pull/22) to update jquery's version dependency. It took a couple of tries to get it right, but it should be both backward and forward compatible with new and older versions of Meteor. What I would do in a fresh PR  is update the `package.js` file with the latest dependency versions for Bootstrap4 version against the `v4-dev` branch. (I realized after replying to your comment earlier via email that I meant to say `v4-dev` instead of main branch - it was early and I was just waking up!). Then we could push the update to `package.js` from `v4-dev` to Atmosphere's package server. 

If we can get full login access to the Atmosphere account, I would propose creating a legacy `bootstrap3` package, update the jquery version numbers, and push your v3-dev branch to it.  Reserve the `bootstrap` name for the latest stable release. When that is Bootstrap 5, we could create a legacy `bootstrap4` package to house Bootstrap 4's long term support release. What would you think of that? 
--
",ffoodd,"
--
@XhmikosR Just to know, couldn't we add some action on release event or something to test some package managers installation?
--
",,,,,,
30818,OPEN,docs v5: switch to ES6,docs; feature; has-pr; v5,2020-10-06 04:52:25 +0000 UTC,XhmikosR,Opened,,"[Hugo v0.70.0](https://github.com/gohugoio/hugo/releases/tag/v0.70.0) introduced the ability to use [Babel](https://gohugo.io/hugo-pipes/babel/), which means we can finally use ES6 everywhere in the codebase for v5.

There's still a bug that needs to be fixed, but should only affect Windows: <https://github.com/gohugoio/hugo/issues/7251>
",,,developerhb,"
--
Hello @XhmikosR I would like to start contributing to Bootstrap. I went through the Contributing Guidelines and found that for issues with label `help wanted` you would love to get help from community. 

I would like to contribute in this issue.

To better understand issue, I would like to have more insights of the issue. 
--
",Bam92,"
--
I was about to open such an issue, but I found this to be very similar to mine.

I've read the source code for `bootstrap.js` and I've noticed that you're still using an old fashioned JS style. So, I wish I helped to start the migration to  ES6+. I've seen that there's a  PR, but for the doc only. I wish I helped w/ `bootstrap.js`. Any comment?
--
",,,,,,,,
30704,OPEN,input group buttons should have their own $input-group-btn-border-radius variable set,css; v4; v5,2020-06-16 03:36:47 +0000 UTC,bbarry,Opened,,"If you are setting variables and importing the scss in a project:

    $btn-border-radius: 0;
    $btn-border-radius-lg: 0;
    $btn-border-radius-sm: 0;

    @import '~bootstrap/scss/bootstrap';

causes the `.btn` rule to not have border radius but it also kills the border radius on input group buttons which I would like to keep derived from the `$input-border-radius` 

at the moment I'm adding this after my import:


    .input-group .btn {
      @include border-radius($input-border-radius, 0);
    }",,,,,,,,,,,,,,
30590,OPEN,Tooltip gets an offset on a floated element,,2020-10-20 07:22:24 +0000 UTC,jonasbirkelof,In progress,,"Can't find a current working fix anywhere so I hope this isn't a duplicate post.

When a button with tooltip has a float-right class the tooltip gets a small offset to the left. Even if I place button (without float) in a wrapper div or span witht he float class this happens.

Code examples:

`<button class=""btn btn-primary float-right"" data-toggle=""tooltip"" title=""Hello"">Button</button>`

![example1](https://user-images.githubusercontent.com/61730892/79325100-dd772a00-7f10-11ea-89c6-7078ecc3649e.png)",,,mdo,"
--
Bug reports must include a **live demo** of the issue. Per our [contributing guidelines](https://github.com/twbs/bootstrap/blob/master/.github/CONTRIBUTING.md), please create a reduced test case via [CodePen](https://codepen.io/) or [JS Bin](https://jsbin.com/) and report back with your link, Bootstrap version, and specific browser and operating system details.

---

_This is a saved reply._
--

--
Wonder if Popper.js is looking for a scrollbar that doesn't exist perhaps? Would explain the behavior on the right only.
--
",jonasbirkelof,"
--
Sorry about that. 

I noticed something on my own site. Tooltips actually works, but not on the pages where I have _collapsed divs_ that, when expanded, are so high that they make a scrollbar in the browser window. Even if the divs are collapsed and no scrollbar is visible, the tooltip ""feels"" that there sholud be a scrollbar to the right and jumps a little to the left...

Here's a pen: https://codepen.io/jonasbirkelof/pen/OJyMdeL

Bootstrap 4.4.1 (cdn), Firefox 75.0 (same in Chrome), Win 10.
--

--
I have tried with the Bootstrap 5 alpha with Popper 1.16 and 2 but with the same result. Only with Popper 2 the tooltip doesn't show, but the scrollbar does...
No news on this issue?
--

--
> 
> 
> Only solution I could find is to add `overflow-y: scroll` to `body`.

Sadly that creates a visible scrollbar, though it might works for some applications. Maybe they fix this in version 5...? *hoping*
--
",alanmehio,"
--
Just to add more observation to the above issue. The float left works fine. It seems the float right which has the problem with offset. 
@jonasbirkelof eller Jonas kan du lägga nedan i ditt demo  för att reflektera  vänster flytande . Tack
<p><button class=""btn btn-danger float-left"" data-toggle=""tooltip"" data-placement=""bottom"" title=""Hello"">Offset tooltip</button>
</p>
     

--
",akinuri,"
--
I also have this issue and I issued it to popper: [Overflow (scrollbar) on viewport affects right aligned/docked element's tooltip position](https://github.com/popperjs/popper-core/issues/1093)

It seems Bootstrap is using an outdated version ([popper.js@1.16.0](https://getbootstrap.com/docs/4.4/getting-started/introduction/#js)) of Popper. I tried to use the new version ([https://unpkg.com/@popperjs/core@2](https://popper.js.org/)), but got the following error:

> Uncaught TypeError: u is not a constructor..........tooltip.js:294
        at i.t.show (tooltip.js:294)
    at i.t._enter (tooltip.js:608)
    at HTMLButtonElement.<anonymous> (tooltip.js:535)
    at HTMLButtonElement.handle (jquery-3.4.1.min.js:2)
    at HTMLButtonElement.dispatch (jquery-3.4.1.min.js:2)
    at HTMLButtonElement.v.handle (jquery-3.4.1.min.js:2)

So, simply switching to new version doesn't work. What do I do?
--
",velobarplus,"
--
I got this same problem, with 4.5.x (even latest 4.5.3).
Not just float right but also `justify-content: flex-end` also causes the same issue.
Any solution for this?
--

--
Only solution I could find is to add `overflow-y: scroll` to `body`.
--
",,
30510,OPEN,Dropdowns: key events are not propagated from inactive and disabled dropdowns,,2020-04-07 23:58:32 +0000 UTC,luktom,In progress,,"Hi,

key events are not propagated from dropdown when it is inactive or disabled.

Reduced test case on JS Bin: https://jsbin.com/hoharusisa there is ESC key handler attached to the document element.

1. Click on ESC - nothing happens.
2. Click on ESC - handler is invoked.

Event propagation is disabled in the https://github.com/twbs/bootstrap/blob/v4-dev/js/src/dropdown.js#L455 just after initial checks which are finishing the event handling, but in following lines there are further check which potentially could finish the handling. Propagation should be stopped after those checks.

Please see related PR with the fix.

Similar finding was created for v3: #15065 It was found as valid issue: https://github.com/twbs/bootstrap/issues/15065#issuecomment-77530943 however it was never fixed.

Thanks ans Regards,
Łukasz ",,,luktom,"
--
PR to master can be find here: #30529, please see https://github.com/twbs/bootstrap/pull/30529#issue-400557111 Backport of #28912 from v4 to v5 was needed.
--
",,,,,,,,,,
30439,OPEN,`form-check-inline` support for `.*-feedback`,css; feature,2021-01-13 06:21:51 +0000 UTC,zalog,In progress,,"This is what it looks like:

<img width=""616"" alt=""Screenshot 2020-03-21 at 21 05 06"" src=""https://user-images.githubusercontent.com/985838/77392455-a85d3900-6da3-11ea-9a3c-a1f91189ae26.png"">

This is the markup:

```
<div class=""form-check form-check-inline"">
  <input ... class=""form-check-input is-invalid"">
  <label>1</label>
  <div class=""invalid-feedback"">Example invalid feedback</div>
</div>
<div class=""form-check form-check-inline"">
  <input ... class=""form-check-input"">
  <label class=""form-check-label"">2</label>
</div>
<div class=""form-check form-check-inline"">
  <input ... class=""form-check-input"">
  <label class=""form-check-label"">3 (disabled)</label>
</div>
```

Perhaps we need to move `*-feedback` somewhere outside and under all `.form-check-inline`.",,,ffoodd,"
--
Do you have any real world use case for this?

I mean, in a fieldset containing a group of checkboxes (meaning options), I don't see how you could ever get an invalid value on a single checkbox. As a las resort, checking at least one option could be required, but it then should be carried by a containing fieldset, shouldn't it?

@patrickhlauke I'd love to have your thought about this case.
--
",zalog,"
--
The real world example would be to move that message (help text, valid / invalid feedback) under all `.form-check-inline`.
Move it as per group, outside, as I wrote in the description :)
What do you think?
--

--
Yep, I think it's fixed in a way.
With #30170, `.*-feedback` are not `display: none` by default anymore.
Perhaps it's not documented/exemplified. I can help with this if needed.

Great work @ysds :)

![Screenshot 2020-03-25 at 08 17 05](https://user-images.githubusercontent.com/985838/77507406-115eb280-6e71-11ea-8b1d-f29db1f51293.png)

--
",mdo,"
--
Wondering if this is fixed with @ysds's changes to form validation in #30170?
--
",,,,,,
30360,OPEN,Segoe UI clipping with overflow:hidden,confirmed; css; v4; v5,2020-06-13 06:47:01 +0000 UTC,cdalexndr,Opened,,"- Win10 1903
- Firefox 73.0.1
- https://codepen.io/cdalxndr/pen/YzXEYPv
",,,ysds,"
--
I thought this have been fixed in #23956, but it seems still occur.
--
",XhmikosR,"
--
@mdo maybe we should bump line-height to 1.3? That fixes the issue for me, but it might be too much in some cases. Also, not sure about v4 since it can be somehow a breaking change.
--
",,,,,,,,
30266,OPEN,Use `<article>`s for cards when appropriate,accessibility; v5,2020-12-20 13:39:03 +0000 UTC,MartijnCuppens,In progress,,The cards should be articles in our docs. We should have a look at this after https://github.com/twbs/bootstrap/pull/28517 is merged.,,,rubenRP,"
--
The tests have failed because there is a rule that requires adding headings in all blocks of type <article> (Consider using ""h2"" - ""h6"" elements to add identifying headings to all articles.), but I'm not sure that an element of type ""Card"" must contain them.
--
",XhmikosR,"
--
Why should the cards be articles?
--

--
@patrickhlauke can you chime in please?

I personally don't think we can just replace all of our docs cards with articles, hence the validator errors.
--

--
Thanks @patrickhlauke for the insights. That's what I was also afraid of.
--
",MartijnCuppens,"
--
> Why should the cards be articles?

It's just a semantic improvement. See https://html.spec.whatwg.org/multipage/sections.html#the-article-element
--

--
> I personally don't think we can just replace all of our docs cards with articles, hence the validator errors.

We can't replace _all_ cards and shouldn't ignore these errors indeed.
--
",patrickhlauke,"
--
personally, i'm not sure i see a strong enough need for using `<article>` in general, unless i was doing something like a list of news items or similar. would developers cargo-cult this for other uses, like notes/panels and that sort of thing? if so, they'll end up overcomplicating their structure for no reason (and making their pages overly verbose for AT users, who'd constantly hear when entering/exiting an article section).
--

--
a slightly more neutral alternative would also be `<section>` https://html.spec.whatwg.org/multipage/sections.html#the-section-element which doesn't have that implication that `<article>` has about being self-contained and being potentially ripped out of the page as a stand-alone complete piece of content.

but otherwise, perhaps keep the markup as `<div>` elements, but add a note saying that of course these classes can also be applied to other containers, like `<section>`, `<article>`, if the authors feel their content requires clearer/stricter structuring (and just in terms of how AT handle stuff, @stevefaulkner reminded me that if a `<section>` doesn't have a heading, it will be exposed in exactly the same way as a `<div>`)

--
",masi,"
--
If article or any other ARIA regions makes sense for a card depends on the context. I have used the card deign pattern with article in the past when I saw fir, but that hasn't been always the case.
--

--
Please note also my suggestion in issue #32555.

--
",,
30219,OPEN,Double increase carousel interval after click 4.4.1,confirmed; js; v4; v5,2020-02-19 19:34:53 +0000 UTC,RvRedd,In progress,,"After manually switching carousel slide interval increases by 1.5-2 times on mobile safari.
Just check for yourself on your manual page — https://getbootstrap.com/docs/4.0/components/carousel/#with-captions
For me, this is a critical problem: I wanted to make carousel like a stories page (instagram / facebook) but the interval is out of sync with the story indicator",,,XhmikosR,"
--
That's a pretty old version. The latest one v4.4.1 https://getbootstrap.com/docs/4.4/components/carousel/#with-captions
--

--
I don't have such a browser to try and yes, you linked an old version without filling up the needed info.
--

--
So,
as per our guidelines, I need at least the browser/OS versions.
--

--
Alright, I reproduced it on BrowserStack. It also happens on master branch (https://twbs-bootstrap.netlify.com/docs/4.3/components/carousel/#with-captions) and seems to happen on >= 4.0. v3.4.1 doesn't seem to have the issue.

Now, why this happens is a mystery to me...

/CC @Johann-S 
--

--
v4.0.0-alpha6 doesn't have the issue either. So it must be something in https://github.com/twbs/bootstrap/compare/v4.0.0-alpha.6...v4.0.0#diff-c176963d34a5956a70f8be7623e90a50
--
",RvRedd,"
--
Showed the wrong page. I use the latest version on the project.
You didn’t even try it yourself. I will tell in more detail:
Try on an mobile safari scroll forward 5-8 times and calculate how much the interval will be. Usually from 5 seconds it becomes 8-11.
--

--
https://www.youtube.com/watch?v=DWUx8E_Lmxk
iOS 13.3.1 iPhone 7 plus
Chrome 80.0.3987.95
Safari 13
--
",patrickhlauke,"
--
likely due to the hover-type behavior for touch devices - so that once a user interacts with a carousel, it pauses cycling for twice the duration (so the user gets a chance to actually read/interact with it), similar to what happens with mouse hover https://github.com/twbs/bootstrap/commit/6ae5fb12e6c996a6526250e8cb703b007e4213fc#diff-c176963d34a5956a70f8be7623e90a50
--

--
(ah, i see that's the same change @XhmikosR pointed to)
--

--
so, as documented in https://getbootstrap.com/docs/4.4/components/carousel/#options when `pause` is set to `hover`

> If set to ""hover"", pauses the cycling of the carousel on `mouseenter` and resumes the cycling of the carousel on `mouseleave`. If set to false, hovering over the carousel won't pause it.
>
> On touch-enabled devices, when set to ""hover"", cycling will pause on `touchend` (once the user finished interacting with the carousel) for two intervals, before automatically resuming. Note that this is in addition to the above mouse behavior.


--
",morrissey,"
--
@RvRedd - assuming you are playing video content in your carousel you shouldn't be using set intervals on the carousel slide itself but instead you should be listening for the video end and then calling `.carousel('next')`.  using a listener will provide the correct functionality across all devices especially if videos are buffering etc, etc.
--
",,,,
30177,OPEN,Explore a .content class for broad margin changes and more,css; feature; help wanted,2021-01-12 23:58:13 +0000 UTC,mdo,Opened,,Capturing ideas from https://github.com/twbs/bootstrap/pull/29491#issuecomment-538315322.,,,MartijnCuppens,"
--
I've been playing around with this lately, I came with a solution like this:
https://codepen.io/MartijnCuppens/pen/abzeBqP?editors=1100
(see second POC here: https://github.com/twbs/bootstrap/issues/30177#issuecomment-589656615)

What do you think?
/CC @ysds @ffoodd 
--

--
Also related: https://github.com/twbs/bootstrap/issues/26716
--

--
> You're also only targetting headings after non-headings, why? 

I don't know, at some point in my life, I thought that was a brilliant idea.

> Wouldn't something like the lobotomized owl selector be better for specificity?

Definitely

What do you think about removing the default margins form p tags and headings (and all other typographic elements)?

Made a second POC here: https://codepen.io/MartijnCuppens/pen/dyoOGdd?editors=1100

Switching to `em`s instead of `rems` feels like a good idea for paragraphs, but all headings are defined in `rem`s.

> I'd love to see an incoming `$typographic-scale-ratio` in Bootstrap!

Ok, what's that?
--

--
No problem, I understand what you mean @ffoodd. We could implement the ratio, but  RFS will automatically rescale font sizes ignoring the ratio but keeping readability in mind.

Anyway, my idea was to tackle spacing issues with the `.content` class, not font sizes (these can be adjusted in reboot if needed).
--

--
@twbs/css-review, what are your thoughts on removing the margins from elements by default and use the `.content` class to control spacing between headings/paragraphs/tables/... ? 

We use `margin-bottom: 0` a lot in our code to remove these margins.
--
",ffoodd,"
--
@MartijnCuppens a few questions about this. 

**Specificity**
Your pen will result in heavy specificity selectors (since `:not()` counts in specificity). Wouldn't something like [the lobotomized owl selector](https://alistapart.com/article/axiomatic-css-and-lobotomized-owls/) be better for specificity?

**Targets**
You're also only targetting headings after non-headings, why? Consecutive paragraphs might have `margin-top` too since they'll collapse naturally with existing `margin-bottom`.

**Values**
Using `rem` for `margin-top` results in requiring each element to have its own delcaration block: by using really fluid values (like `em` or `%`) and assuming a fixed ratio between `font-size` and `margin-top`, a single declaration block could be sufficient.

Something like this could do the job:

```css
.content > * + * {
  margin-top: 1.5em;
}
```

However I think it would be related to some kind of typographic scale, and for now it's not implemented this way in Bootstrap (since most values are kinda hardcoded in `_variables.scss`). There's no maths behind the typographic scale for now, but it could help a lot with this PR (it's much harder to implement though).

I'd love to see an incoming `$typographic-scale-ratio` in Bootstrap!

PS: please keep in mind that my three questions can be unrelated :)





--

--
@MartijnCuppens Back to business :tada: 

When using a typographic scale, every values are tight together depending on a single abitrary value: the ratio. For example, a base font size equivalent to 16px and a ratio of 2 will give the following scale: 16, 32, 64, 128, etc.

That's conceptually pretty close to what a grid is for layout.

This requires a few maths; there's tons of tools and documentation out there (recently, [utopia.fyi](https://utopia.fyi/calculator/), but you may find [modularscale.com](https://www.modularscale.com/), [type-scale.com](https://type-scale.com/), etc.). 

On the design part, this ratio gives underneath meaning to the graphic design: ratio gives type depth, increases or decreases visual hierarchy, and may echo to some kind of cultural background too. It's really meaningful.

However it's not the common pattern, since a lot of graphic designers prefer to handle font-sizes ""manually"". 

From a Bootstrap's point of view, coupling font sizes with a type scale ratio may lead to side effects (first of those would be less configurable font sizes).

You may find an example in [Tachyons' type scale](https://tachyons.io/docs/typography/scale/) — they're using a 1.25 ratio.

I'm not sure I'm clear enough: explaining this in French is really easier to me :D

I love working this way, but I'm not sure it's suitable for Bootstrap.
--

--
Seems reasonable, since those elements outside main content will likely to be in a custom layout (navbar, sidebar, footer…).

So it makes sense, I guess.
--
",,,,,,,,
29949,OPEN,Enable OpenSearch,docs; feature,2020-02-17 16:50:00 +0000 UTC,MartijnCuppens,Opened,,"It would be nice to use open search to search through the docs. I made a PR (https://github.com/twbs/bootstrap/pull/29872), but first we got to figure out how to deal with caching and have a solution for the absolute urls in the config xml. Maybe we should also make a separate search page in the docs.",,,,,,,,,,,,,,
29919,OPEN,Investigate adding markdownlint,build; v5,2020-11-19 07:42:34 +0000 UTC,XhmikosR,In progress,,Not sure how many FPs we'll get.,,,mdo,"
--
After fixing bullet inconsistencies and add alt text to images in readme:

```
site/content/docs/5.0/components/button-group.md:22 MD001/heading-increment/header-increment Heading levels should only increment by one level at a time [Expected: h3; Actual: h5]
site/content/docs/5.0/components/button-group.md:22 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""##### Ensure correct `role` and provide a label""]
site/content/docs/5.0/components/buttons.md:108 MD001/heading-increment/header-increment Heading levels should only increment by one level at a time [Expected: h3; Actual: h5]
site/content/docs/5.0/components/buttons.md:108 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""##### Link functionality caveat""]
site/content/docs/5.0/components/dropdowns.md:805 MD001/heading-increment/header-increment Heading levels should only increment by one level at a time [Expected: h4; Actual: h5]
site/content/docs/5.0/components/dropdowns.md:805 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""##### `data-toggle=""dropdown""` still required""]
site/content/docs/5.0/components/navs.md:231 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""## Working with flex utilities""]
site/content/docs/5.0/components/popovers.md:102 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""#### Specific markup required for dismiss-on-next-click""]
site/content/docs/5.0/components/popovers.md:139 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""### Making popovers work for keyboard and assistive technology users""]
site/content/docs/5.0/components/popovers.md:294 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""#### Data attributes for individual popovers""]
site/content/docs/5.0/components/scrollspy.md:261 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""#### Resolvable ID targets required""]
site/content/docs/5.0/components/scrollspy.md:267 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""#### Non-visible target elements ignored""]
site/content/docs/5.0/components/tooltips.md:96 MD001/heading-increment/header-increment Heading levels should only increment by one level at a time [Expected: h3; Actual: h5]
site/content/docs/5.0/components/tooltips.md:96 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""##### Overflow `auto` and `scroll`""]
site/content/docs/5.0/components/tooltips.md:113 MD001/heading-increment/header-increment Heading levels should only increment by one level at a time [Expected: h4; Actual: h5]
site/content/docs/5.0/components/tooltips.md:113 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""##### Making tooltips work for keyboard and assistive technology users""]
site/content/docs/5.0/components/tooltips.md:291 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""#### Data attributes for individual tooltips""]
site/content/docs/5.0/content/reboot.md:134 MD032/blanks-around-lists Lists should be surrounded by blank lines [Context: ""{{< /markdown >}}""]
site/content/docs/5.0/content/reboot.md:437 MD001/heading-increment/header-increment Heading levels should only increment by one level at a time [Expected: h3; Actual: h5]
site/content/docs/5.0/content/reboot.md:437 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""##### jQuery incompatibility""]
site/content/docs/5.0/content/tables.md:622 MD001/heading-increment/header-increment Heading levels should only increment by one level at a time [Expected: h3; Actual: h5]
site/content/docs/5.0/content/tables.md:622 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""##### Vertical clipping/truncation""]
site/content/docs/5.0/customize/optimize.md:46:3 MD034/no-bare-urls Bare URL used [Context: ""https://medium.com/dwarves-fou...""]
site/content/docs/5.0/customize/optimize.md:47:3 MD034/no-bare-urls Bare URL used [Context: ""https://lukencode.com/2018/07/...""]
site/content/docs/5.0/extend/icons.md:29 MD032/blanks-around-lists Lists should be surrounded by blank lines [Context: ""- [{{ .name }}]({{ .website }}...""]
site/content/docs/5.0/forms/layout.md:343 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""### Alternatives to hidden labels""]
site/content/docs/5.0/forms/overview.md:59 MD001/heading-increment/header-increment Heading levels should only increment by one level at a time [Expected: h3; Actual: h5]
site/content/docs/5.0/forms/overview.md:59 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""##### Associating form text with form controls""]
site/content/docs/5.0/getting-started/introduction.md:121:37 MD034/no-bare-urls Bare URL used [Context: ""https://twitter.com/{{<""]
site/content/docs/5.0/getting-started/introduction.md:128:48 MD034/no-bare-urls Bare URL used [Context: ""https://twitter.com/{{<""]
site/content/docs/5.0/getting-started/javascript.md:29 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""## Incompatible plugins""]
site/content/docs/5.0/getting-started/javascript.md:49 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""## Selectors""]
site/content/docs/5.0/getting-started/javascript.md:72 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""## jQuery events""]
site/content/docs/5.0/getting-started/javascript.md:155 MD001/heading-increment/header-increment Heading levels should only increment by one level at a time [Expected: h3; Actual: h5]
site/content/docs/5.0/getting-started/javascript.md:155 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""##### Third-party libraries""]
site/content/docs/5.0/getting-started/rfs.md:11:32 MD034/no-bare-urls Bare URL used [Context: ""https://github.com/twbs/rfs/tr...""]
site/content/docs/5.0/getting-started/rfs.md:17:132 MD034/no-bare-urls Bare URL used [Context: ""https://github.com/twbs/rfs/tr...""]
site/content/docs/5.0/getting-started/rfs.md:86:138 MD034/no-bare-urls Bare URL used [Context: ""https://github.com/twbs/rfs/tr...""]
site/content/docs/5.0/utilities/colors.md:47 MD032/blanks-around-lists Lists should be surrounded by blank lines [Context: ""- `.bg-gradient-{{ .name }}`""]
site/content/docs/5.0/utilities/colors.md:53 MD001/heading-increment/header-increment Heading levels should only increment by one level at a time [Expected: h3; Actual: h4]
site/content/docs/5.0/utilities/colors.md:53 MD022/blanks-around-headings/blanks-around-headers Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: ""#### Dealing with specificity""]
site/content/docs/5.0/utilities/flex.md:26 MD032/blanks-around-lists Lists should be surrounded by blank lines [Context: ""- `.d{{ .abbr }}-flex`""]
site/content/docs/5.0/utilities/flex.md:71 MD032/blanks-around-lists Lists should be surrounded by blank lines [Context: ""- `.flex{{ .abbr }}-row`""]
site/content/docs/5.0/utilities/flex.md:124 MD032/blanks-around-lists Lists should be surrounded by blank lines [Context: ""- `.justify-content{{ .abbr }}...""]
site/content/docs/5.0/utilities/flex.md:178 MD032/blanks-around-lists Lists should be surrounded by blank lines [Context: ""- `.align-items{{ .abbr }}-sta...""]
site/content/docs/5.0/utilities/flex.md:232 MD032/blanks-around-lists Lists should be surrounded by blank lines [Context: ""- `.align-self{{ .abbr }}-star...""]
site/content/docs/5.0/utilities/flex.md:258 MD032/blanks-around-lists Lists should be surrounded by blank lines [Context: ""- `.flex{{ .abbr }}-fill`""]
site/content/docs/5.0/utilities/flex.md:289 MD032/blanks-around-lists Lists should be surrounded by blank lines [Context: ""- `.flex{{ .abbr }}-{grow|shri...""]
site/content/docs/5.0/utilities/flex.md:415 MD032/blanks-around-lists Lists should be surrounded by blank lines [Context: ""- `.flex{{ .abbr }}-nowrap`""]
site/content/docs/5.0/utilities/flex.md:440 MD032/blanks-around-lists Lists should be surrounded by blank lines [Context: ""- `.order{{ $bp.abbr }}-{{ . }...""]
site/content/docs/5.0/utilities/flex.md:452 MD032/blanks-around-lists Lists should be surrounded by blank lines [Context: ""- `.order{{ $bp.abbr }}-{{ . }...""]
site/content/docs/5.0/utilities/flex.md:615 MD032/blanks-around-lists Lists should be surrounded by blank lines [Context: ""- `.align-content{{ .abbr }}-s...""]
site/content/docs/5.0/utilities/float.md:35 MD032/blanks-around-lists Lists should be surrounded by blank lines [Context: ""- `.float{{ .abbr }}-left`""]
```
--
",XhmikosR,"
--
https://github.com/twbs/bootstrap/runs/1417773283:

```
 markdownlint-cli2 v0.0.11 (markdownlint v0.21.1)
Finding: **/*.md !**/node_modules/**
Linting: 102 file(s)
Summary: 17 error(s)
site/content/docs/5.0/components/toasts.md:160 MD046/code-block-style Code block style [Expected: fenced; Actual: indented]
site/content/docs/5.0/components/tooltips.md:116 MD031/blanks-around-fences Fenced code blocks should be surrounded by blank lines [Context: ""```""]
site/content/docs/5.0/content/reboot.md:116:1 MD037/no-space-in-emphasis Spaces inside emphasis markers [Context: ""* Lorem ipsum dolor sit amet""]
site/content/docs/5.0/content/reboot.md:118:1 MD037/no-space-in-emphasis Spaces inside emphasis markers [Context: ""* Integer molestie lorem at ma...""]
site/content/docs/5.0/content/reboot.md:120:1 MD037/no-space-in-emphasis Spaces inside emphasis markers [Context: ""* Nulla volutpat aliquam velit""]
site/content/docs/5.0/content/reboot.md:122:3 MD037/no-space-in-emphasis Spaces inside emphasis markers [Context: ""* Purus sodales ultricies""]
site/content/docs/5.0/content/reboot.md:124:3 MD037/no-space-in-emphasis Spaces inside emphasis markers [Context: ""* Ac tristique libero volutpat...""]
site/content/docs/5.0/content/reboot.md:126:1 MD037/no-space-in-emphasis Spaces inside emphasis markers [Context: ""* Aenean sit amet erat nunc""]
site/content/docs/5.0/customize/optimize.md:51 MD031/blanks-around-fences Fenced code blocks should be surrounded by blank lines [Context: ""```""]
site/content/docs/5.0/getting-started/introduction.md:154:37 MD034/no-bare-urls Bare URL used [Context: ""https://twitter.com/""]
site/content/docs/5.0/getting-started/introduction.md:161:48 MD034/no-bare-urls Bare URL used [Context: ""https://twitter.com/""]
site/content/docs/5.0/getting-started/javascript.md:80 MD031/blanks-around-fences Fenced code blocks should be surrounded by blank lines [Context: ""```""]
site/content/docs/5.0/getting-started/rfs.md:11:32 MD034/no-bare-urls Bare URL used [Context: ""https://github.com/twbs/rfs/tr...""]
site/content/docs/5.0/getting-started/rfs.md:17:132 MD034/no-bare-urls Bare URL used [Context: ""https://github.com/twbs/rfs/tr...""]
site/content/docs/5.0/getting-started/rfs.md:86:138 MD034/no-bare-urls Bare URL used [Context: ""https://github.com/twbs/rfs/tr...""]
site/content/docs/5.0/layout/columns.md:160 MD046/code-block-style Code block style [Expected: fenced; Actual: indented]
site/content/docs/5.0/layout/columns.md:177 MD046/code-block-style Code block style [Expected: fenced; Actual: indented]
```

Unfortunately, there's no way to ignore specific lines and most of these are false positives because we are using Hugo-specific markup.

Let's leave this open so that we track the issue.
--
",,,,,,,,
29853,OPEN,Switch from Sass imports to Sass Module System,css; feature,2020-10-28 08:25:07 +0000 UTC,inwardmovement,Opened,,"Just putting this here, maybe for v5.

[Sass Module System](http://sass.logdown.com/posts/7858341-the-module-system-is-launched)",,,MartijnCuppens,"
--
AFAICT, the module system only works in Dart Sass, not in ruby Sass or Lib Sass. Since the majority of build systems won't support this yet, I guess it won't be a good idea to switch now.
--

--
@mocsy, `node-sass` is used more to compile sass, see https://npmcharts.com/compare/sass,node-sass?interval=30

Other than that, we have a list of other compilers using LibSass: https://sass-lang.com/libsass

Even if we switch to `sass` instead of `node-sass` (which we might do at some point), we still need to support `node-sass` as long as it is not deprecated.
--

--
Current (September 2020) monthly `node-sass` installs: ~ 20.7 million
Current (September 2020) monthly `sass` installs: ~ 9.6 million
Current (September 2020) module system support in `node-sass`: not supported (see https://github.com/sass/libsass/issues/2807)

On the other hand, if we stick to `@import`, Bootstrap won't work anymore for the latest `sass` version from Oct 2022. Not sure what to do here, any thoughts @twbs/team?
--
",mocsy,"
--
What are the 'majority of build systems' you mention?
I had no problems with webpack, parcel nor gulp using the [sass](https://www.npmjs.com/package/sass) package.

Maybe the right approach would be to migrate from node-sass to sass first.
The module system comes as a free bonus with the [migrator](https://sass-lang.com/documentation/cli/migrator) anyway.

That might clear these warning from my build logs as another added bonus:

```
WARNING: You probably don't mean to use the color value indigo in interpolation here.
It may end up represented as indigo, which will likely produce invalid CSS.
Always quote color names when using them as strings or map keys (for example, ""indigo"").
If you really want to use the color value here, use '"""" + $color'.

  ╷
4 │     --#{$color}: #{$value};
  │         ^^^^^^
  ╵
    node_modules/bootstrap/scss/_root.scss 4:9       @import
    node_modules/bootstrap/scss/bootstrap.scss 11:9  @import
```

--
",glen,"
--
LibSass: https://github.com/sass/libsass/issues/2807
Ruby Sass: EOL
--
",zackdotcomputer,"
--
Just hopping in here to +1 this, especially since [SASS used Bootstrap as an example](https://sass-lang.com/blog/the-module-system-is-launched) for how the new package system could be used.
--
",jquense,"
--
The event horizon for node-sass supporting the new module system seems like 2-3+ years, it's already many months behind libsass which seems like it's slating impl for a major release tentatively in 2021? I'd love to see Sass modules used in bootstrap, but it does seem like there needs be either a cultural shift from using libsass or an influx of new contributors to help speed up implementation. Seems like web-devs wanting to do c++ development is a fairly niche subset!
--
",WraithKenny,"
--
Why not leave 4.5 as libsass compatible, and make 5 dartsass...at least until libsass updates itself (if ever). Backwards compatibility makes no sense here.
--
"
29720,OPEN,Support for dark mode on documentation pages,accessibility; css,2020-10-23 14:57:35 +0000 UTC,donhuvy,Opened,,"Please has dark mode for document page at here 

https://getbootstrap.com/docs/

https://getbootstrap.com/docs/4.3/getting-started/introduction/

(Dark mode at this site https://docs.microsoft.com/en-us/aspnet/core/getting-started/?view=aspnetcore-3.0&tabs=windows is a good example.)",,,hectorbus,"
--
This issue seems to be the same from this drafted pull request #28449, which is still a work in progress
--
",,,,,,,,,,
29551,OPEN,Dark/Light Mode Mixins,css; has-pr; v5,2021-01-12 05:37:44 +0000 UTC,juniorRubyist,In progress,,I'd like to help push forward with #27514 by implementing a mix-in for dark mode or light mode that can be used by users and throughout the Bootstrap source code. I will file a pull request with my improvements when I'm finished (if this sounds OK).,,,piernik,"
--
If I can. I see that You are planning to add dark theme to bootstrap which is great.
But I also see that You are connecting dark theme with `prefers-color-scheme`.
I think it suppose to be independent. Some users might want to have dark theme while having light system theme. Or maybe dark theme would be tirggered during day and night?
--
",juniorRubyist,"
--
@piernik I'm simply just writing a mixin for Sass for the media query. If someone wanted to force the theme, they could write the theme as a class and `@extend` it in the `@include dark-scheme {}`.
--

--
@ysds #29552 
--
",ysds,"
--
@juniorRubyist I'm not sure your suggestion. Can you create a PR or show demo on https://www.sassmeister.com/ for clarity?
--

--
@juniorRubyist thanks, I missed it 
--
",,,,,,
29519,OPEN,More control over carousel caption positioning,css; feature; v5,2021-01-12 05:41:47 +0000 UTC,MartijnCuppens,Opened,,"Follow up on https://github.com/twbs/bootstrap/pull/29493#issuecomment-538807109.

I think we can go one step further and make it possible to use the thumbs as a stand alone subcomponent which for example can be displayed below the carousel.",,,sparsh,"
--
@MartijnCuppens I would like to contribute to this update. Give me a brief description of what you actually  need to style
--
",mdo,"
--
@MartijnCuppens Still want to tackle this at all? I'm indifferent on adding a new feature here. Perhaps adding `null` variables is enough?
--
",,,,,,,,
29473,OPEN,ScrollSpy skips short sections,confirmed; help wanted; js; v4; v5,2021-02-07 19:37:02 +0000 UTC,bkdotcom,In progress,,"#15729

This is still an issue that needs ""solved"" in Bootstrap 4

if the last section(s) are short, when reaching the bottom of the page, bootstrap will skip over anchors that didn't get scrolled to the top of the page and consider the last anchor to be ""active""",,,Johann,"
--
Hi @bkdotcom can you provide a test case in v4 ?
--
",XhmikosR,"
--
Closing due to lack of response. You can comment here and we can re-open the issue.

*This is an automated reply*
--
",bkdotcom,"
--
I stole the bootstrap 3 example and converted it to bootstrap 4:

https://codepen.io/bkdotcom/full/vYEyeVr
--
",stevenbuccini,"
--
Hello everyone! This problem seems to be heavily dependent on _where_ the short content is on the page. The example @bkdotcom provided accurately represents the case that led me to this issue in the first place. However, if you take that same example, slice the two short `<sections>` and re-insert them in the second and third slots within the container div, the scrollspy works correctly.

As best as I can tell, the current logic for determining the active `<div>` within the scrollspy is as follows:
1. If the top of the `scrollElement` is at a location greater than or equal to the top of the `scrollElement` when you can't scroll anymore, make the last target active and return.
2. Consider each possible target, working from the bottom of the page
3. If the top of the `scrollElement` is beneath the top of the considered target AND the top of the `scrollElement` is beneath the top of the previously considered element, mark the current index as active.
4. Else, change your target to the next element further up the page and repeat step 3.

(The logic is in the [`_process` method](https://github.com/twbs/bootstrap/blob/master/js/src/scrollspy.js#L206-L243), with the check on line 234 being the interesting case.

When stepping through the debugger on the provided example, it's clear that the bottom of the `scrollElement` is reached, triggering the short-circuit logic in case 1, before the smaller divs have a chance to have the top of their bounding box reach the top of the `scrollElement` which would make them active.

The key insight here is that you can't actually scroll through the total height of the `scrollElement` amount of space, but rather `total_height - amount_viewable_at_any_given_time`.

This suggests the trivial fix, which is just add an empty element with a height of `_getOffsetHeight()` as this would allow you to scroll _every_ target up to the top of the `scrollElement`. Obviously, this would leave a lot of white space and wouldn't provide a great UX.

One alternative would be calculate the percentage height that each target makes up of `scrollElement` height. Then, as the user scrolls, we can calculate the relative amount they've scrolled compared to the maximum possible scroll distance. Then, we can use the same comparison logic that's already in place to figure out what bucket we're in.

What do y'all think? I'm happy to put up a PR if we can agree on an approach.
--

--
I can't say with certainty as I haven't looked at this in several months. However, it seems like clicking an anchor link directly should bypass the height offset calculations entirely and simply call `_activate()` on the appropriate target.
--

--
It l[ooks like clicking an anchor link triggers the scroll event](https://stackoverflow.com/questions/50225660/how-to-catch-scroll-event-caused-by-hash-bang-anchor-link) which is why the `ScrollSpy` gets called and the wrong link is highlighted. However, the above link seems to suggest that perhaps the Scrollspy could check to see if there is valid value in `window.location.hash` to short-circuit the scroll height computation.
--
",dmitchellmim,"
--
@stevenbuccini would your proposed fix handle the case where you click on an anchor link, rather than scrolling to it manually? In the test case, for example, clicking on the penultimate ""Cat ipsum"" activates ""Batman ipsum"", even though it's not the one you clicked on. That behavior is less intuitive than when scrolling manually, in my opinion.
--

--
Unfortunately, that doesn't seem to be the case. From what I can tell, Scrollspy only responds to scroll events, so it doesn't know that the scrolling was caused by clicking an anchor link. Clicking on ""Cat ipsum"" in the [example](https://codepen.io/bkdotcom/full/vYEyeVr) from @bkdotcom selects the link below it, ""Batman ipsum"".
--

--
That approach has some challenges, too. In @bkdotcom's [example](https://codepen.io/bkdotcom/full/vYEyeVr), clicking on a link doesn't actually add the hash to the URL, so I'm not sure if we can rely on that. When I run [ `bootstrap/js/tests/visual/scrollspy.html`](https://github.com/twbs/bootstrap/blob/main/js/tests/visual/scrollspy.html) from the current main (a 5.0.0 alpha), clicking a link does update the URL hash, but it also uses smooth scrolling, so the `scroll` event gets triggered multiple times. If you then scroll to another section manually, it keeps the old URL hash, so the short-circuiting would need to be in effect during that initial smooth scroll, but return to normal when it reaches the target or you scroll elsewhere.
--
",,
29438,OPEN,[bug] Incorrect scroll position when elements focus in modal,browser bug,2020-11-24 10:12:17 +0000 UTC,tmcnicholls,Opened,,"- Operating system and version: Android 9
- Browser and version: Chrome 77.0.3865.92
- Reduced test case: https://codepen.io/tmcnicholls/pen/oNvVBKX
- Mobile debug: https://s.codepen.io/tmcnicholls/debug/oNvVBKX

**Issue**

On Android phones with Chrome, we see an issue with modals scrolling to the very bottom when selecting an input. This means the user cannot see the input they have just selected.

Firefox on Android seems to work ok, and iOS behaves differently but will half cover a selected input if it is at the bottom of the viewport before the keyboard appears.

The minimal test case seems to be related to having a long page above the modal trigger button. I have included a screen recording showing the issue.

https://vimeo.com/362257710
",,,Cronch,"
--
Hi guys, this is still happening. Currently using Bootstrap 4.4.1, and only happening on Chrome browsers (81.0.4.4044.96) on some android devices (I specifically saw that behaviour on Samsung devices)

Does anyone know if there is any workaround?

--
",kevinvanl,"
--
Hello, this is still happening. Currently using Bootstrap 4.5.3, and only happening on Chrome browsers on Android devices. Anyone a idea when this will be fixed? Or having a workaround?
--
",,,,,,,,
29422,OPEN,Text and Non-text Contrast,accessibility; css; help wanted; v5,2021-01-12 09:23:39 +0000 UTC,lucalanca,In progress,,"**Operating system and version**: All
**Browser and version**: All
**Report**: https://www.aditus.io/button-contrast-checker/getbootstrap-com-2019-09-12-at-15-02-11-139

Most buttons and links of the framework don't meet contrast criteria in all or some of their states.

## Examples

**Primary Button**
![Screenshot 2019-09-19 at 14 42 29](https://user-images.githubusercontent.com/389459/65249370-c6dc3200-daeb-11e9-8a62-154ab417075c.png)

**Success Button**
![Screenshot 2019-09-19 at 14 43 12](https://user-images.githubusercontent.com/389459/65249405-d78ca800-daeb-11e9-8552-eb46a233eef4.png)


Happy to help you guys in this regard, but I think it's mostly a design decision that needs to be made on the default colors. I want to take some time to see if I can investigate a set of variables that pass AA and AAA when it comes to contrast without changing too much of the design.


",,,XhmikosR,"
--
Thanks for this, we have already many issues in the past about it, so we are definitely aware of this.

I have already landed a PR for the docs for master, and for core I have #29198 but I don't like the changes except for the blue color and maybe the pink one.

Also, note I have a WIP PR to automatically check for accessibility issues on #29315.
--

--
I don't think we'll land the other colors changes. I mean, there's a huge difference for green.

But for blue and maybe pink, we can move forward in my PR.
--

--
Blue and pink should be fine now on master. I'm not sure about the other colors because they change a lot.
--
",lucalanca,"
--
@XhmikosR your branch is a lot better. It still has a lot of issues but it's definetely better:

![Screenshot 2019-09-19 at 15 23 59](https://user-images.githubusercontent.com/389459/65252890-a1eabd80-daf1-11e9-9738-6d2f035f366e.png)

For example, comparing to the buttons I shared above:

**Primary Button**
![Screenshot 2019-09-19 at 15 24 17](https://user-images.githubusercontent.com/389459/65252945-b7f87e00-daf1-11e9-81ee-e3e3f5992496.png)

**Success Button**
![Screenshot 2019-09-19 at 15 24 23](https://user-images.githubusercontent.com/389459/65252953-baf36e80-daf1-11e9-88ab-e5c33552ba8d.png)


I don't know where is the best place to focus on contrast of buttons alone. This issue or the one of your PR.
--

--
@MartijnCuppens why shouldn't we worry about shadow/outline contrast?
--

--
@MartijnCuppens I see what you mean, but I think this is not an issue. One option could be to give a `outline-offset` so that the focusing and the button are disconnected.
--
",MartijnCuppens,"
--
That tool is checking for the contrast for shadows & outlines, we shouldn't worry about that. As mentioned by @XhmikosR, I wouldn't darken the green and teal colors more, because it looks like the buttons are hovered or focused with these darkened colors.
--

--
If we want a higher contrast between the page background and the button focus shadows, we'll get less contrast between the button background and the shadows.
--

--
@mdo, we could also work with double outlines, see https://codepen.io/MartijnCuppens/pen/XWJzVBm. I think this technique will give the least issues with for example input groups since we don't fake our border:

<img src=""https://user-images.githubusercontent.com/11559216/71738428-df801600-2e56-11ea-98da-625991683968.png"" width=""100"">

--
",patrickhlauke,"
--
> we'll get less contrast between the button background and the shadows

but that is irrelevant, as the shadow visually changes the appearance of the button, making it bigger. so even if a user can't see the contrast between the shadow (acting as the focus indicator) and the actual button, they can still perceive that the button got ""fatter"" (i could have sworn there was an example of this on the WCAG 2.1 1.4.11 understanding doc https://www.w3.org/WAI/WCAG21/Understanding/non-text-contrast.html but it may have been in a separate document/discussion)
--

--
> No plans to adjust the focus styles.

Then this will need to be noted as a known accessibility shortcoming.
--

--
> I don't think anyone has found a better solution that our current one.

I think a bit of experimentation for v5 may be in order to see if we can future-proof stuff, pushing the default focus to be a bit stronger by default (perhaps all the way up to 3:1 ratio), plus future-proofing it with some additional `:focus-visible` tweaks.
--
",mdo,"
--
No plans to adjust the focus styles. Also worth noting that we don't use `outline` styles, we use custom `box-shadow`s.
--

--
Well I say that and this idea comes to mind, but does come with limitations that may be deemed too clever for the project. See https://codepen.io/emdeoh/pen/yLLNZRb. Uses `background-clip: padding-box` and a transparent border to recreate the offset an `outline` can have.
--

--
Tagging with `help wanted` to see if we can get some love on this from others. I'm open to new solutions for focus styles, but not something that's overly clever and cumbersome to use. I know `outline` is gradually getting better, but it's still not 100%. So far I don't think anyone has found a better solution that our current one.
--
",ffoodd,"
--
@mdo @MartijnCuppens Just to mention that your graphic proposal is probably the best: Edge and Chromium adopted a similar approach and Firefox is considering to do the same.

- https://blogs.windows.com/msedgedev/2019/10/15/form-controls-microsoft-edge-chromium/
- https://blog.chromium.org/2020/03/updates-to-form-controls-and-focus.html
- https://bugzilla.mozilla.org/show_bug.cgi?id=1626512

Definetly worth it :+1: 
--

--
See also #31360 for @patrickhlauke 's inventory of what's wrong in v5.
--
"
29378,OPEN,"Expounding on ""opt-in for performance reasons""",docs; help wanted; js; v5,2021-03-25 22:28:28 +0000 UTC,jonathanhefner,Opened,,"In the documentation for both Tooltips and Popovers is the caveat: ""opt-in for performance reasons, so you must initialize them yourself.""  But I'm having trouble finding a detailed explanation of ""performance reasons.""  The caveat is [at least 6 years old](https://github.com/twbs/bootstrap/blame/c6aae570b1bc608f5ca4b9ce9085ba9929edeb13/docs/javascript/tooltips.md#L37-L38), which makes me wonder if it's still true.

Also, many people miss this caveat when reading the documentation, for example #24985 and #15458.  So it would be great if Tooltips and Popovers could actually be automatically initialized in a performant way.  That might also pair nicely with [using `MutationObserver` to automatically remove Tooltips](https://github.com/twbs/bootstrap/issues/28964#issuecomment-507556829) in v5.
",,,Johann,"
--
Hi @jonathanhefner, there is a way to do that, you can use our `selector` option and it'll initialize Popovers and Tooltip automatically.
Maybe after the switch to our v5 (without jQuery) we can remove that 🤔 
--
",mdo,"
--
Bumping @twbs/js-review on this—would we want to make this the default in v5? Is that a breaking change that we'd need to punt to v6?
--
",XhmikosR,"
--
TBH we need some kind of benchmark before everything else. The reasons behind this choice may no longer apply to v5, but it can indeed be a breaking change.
--
",lacutah,"
--
Follow up / tangential to this as a user of bootstrap:

1. The ""opt-in"" requirement and guidance already seemed weird because adding the `data-[bs-]toggle='tooltip`` attribute to an element already is EXPLICIT that you want tool-tip popup behavior.
2. Inconsistency with other controls - why the additional extra step of manual JavaScript initialization when default behavior it to self-initialize from data attributes.
--
",,,,
29335,OPEN,Find a way to benchmark our JS,help wanted; js,2019-10-02 12:21:59 +0000 UTC,XhmikosR,In progress,,,,,Johann,"
--
https://github.com/JamieMason/karma-benchmark seems like a good solution
--
",JoelLau,"
--
@XhmikosR are there any specific parts of the js you're looking to benchmark ? or is it just a general statement
--
",XhmikosR,"
--
Currently we don't have any way to measure the impact of our changes. I haven't thought about it in details, but we should have something that generates many elements and runs a few times getting the median for our core JS. We don't need to cover everything at first, just have something working which we can expand later.
--
",,,,,,
29311,OPEN,Provide `bootstrap‑reboot` as a separate package (e.g. `@bootstrap/reboot`),help wanted; meta,2021-03-20 17:58:43 +0000 UTC,ExE-Boss,Opened,,"Currently, projects that only use `bootstrap‑reboot` still get security warnings about security issues present in the Bootstrap JavaScript code, it’s also a whole bunch of code that has to be downloaded into `node_modules` that is completely unused and doesn’t make it to [the final bundle](https://exe-boss.tech/smwc-style/exe-boss.min.css).

Using just `@bootstrap/reboot` would also greatly simplify the [`postcss‑import`](https://github.com/postcss/postcss-import) configuration and ensure that it doesn’t break by bootstrap changing where `bootstrap-reboot.min.css` is located.",,,Johann,"
--
Hi @ExE-Boss,

AFAIK we don't have any open security issues 😉 

For your other points: /CC @twbs/css-review @twbs/js-review 
--
",XhmikosR,"
--
I agree at some point we should do this, but last time we had a PR about this kind of change (using lerna) it changed quite a few things and we didn't feel like it was the right solution.
--

--
The only way when we last discussed this was lerna.

Just one thing to keep in mind, we should keep things simple, whatever we decide.
--

--
IMHO either we do it properly or not, otherwise it will be an extra maintenance burden.

Node.js 15.x, which will be the next 16 LTS version is using npm 7.x. I don't know if they'll backport npm 7.x to 14.x (my guess is probably not) has added support for workspaces. yarn does already support this for quite some time.

So, the solution seems to still be lerna or another npm package that does the same job. Regardless, that would mean we'd still need to refactor our source files into packages, which will be a breaking change.

As an intermediate solution, sure, we could move reboot to a separate package. But then people will wonder why don't we do the same with JS and other CSS files.

That being said, it shouldn't be a lot of work since reboot does not change frequently. We'd still need the same upstream Stylelint and some kind of CI.
--
",ExE,"
--
@Johann-S I meant, when security vulnerability is discovered, GitHub and npm send security vulnerability alerts about it.

A CSS‑only package can’t really have classical security vulnerabilities due to what CSS is (a declarative stylesheet language, which only controls how the web page is displayed on the screen).
--

--
You could probably also just keep everything as is, and just create a second package by copying `bootstrap‑reboot.css` from `dist` into a new package as `index.css`.
--
",mdo,"
--
I’ve long wanted Reboot to be it’s own thing, but never got around to exploring how best to do it. Given where it’s at for v5, I could see us doing something to help share it better, even if the releases are done manually for it.
--

--
Alternatively, we could also separate it out, develop it on it’s own a la Normalize (which it’s forked from), and then include it via npm. We’d then move the docs, create a new subdomain, add a new top level nav link, etc.
--

--
Would still love to see this happen—adding the `help wanted` label to see if someone wants to take a pass and then bring it over to the `@twbs` org.

As a first pass, we could consider making `twbs/reboot` a mirror of the upstream `_reboot.scss` file located here in Bootstrap proper. No docs, no expansive build system—just the stylesheet and minimum support around it. Could even disable Issues on the repo if necessary.
--
",MartijnCuppens,"
--
> ... and then include it via npm

We currently don't depend on npm yet, that's why RFS is copied in a vendor folder for example. Depending on npm will break composer, NuGet and repo installs.

But yeah, I like the idea of splitting it up, we just got to find out how. 
--
",julian,"
--
I think it would be nice to have separate packages for each of bootstrap’s `dist` files, including utilities, reboot, and grid, assuming they don’t already exist.
--
"
29130,OPEN,Carousel: allow several items in one slide,feature; help wanted,2021-01-13 20:16:25 +0000 UTC,XhmikosR,Opened,,,,,,,,,,,,,,,,
29127,OPEN,empty h3 in popover when title is not defined,has-pr; help wanted; js,2021-01-12 05:43:18 +0000 UTC,stevenbriscoeca,Opened,,"**Operating system**
Windows
**Browser and version**
Chrome 73
**Reduced test case**
https://getbootstrap.com/docs/4.3/components/popovers/#four-directions

On popovers that do not have a title defined, the h3 is still there as empty. I feel this could be an accessibility problem having an empty h3 on the page : 
![image](https://user-images.githubusercontent.com/3018441/61815613-a60f9d00-ae18-11e9-8e45-935b58351496.png)

I would make sure the h3 disappears if the title is not defined.
",,,Johann,"
--
@patrickhlauke do you think it can be an accessibility problem?

BTW you can customize the default template see `template` option: https://getbootstrap.com/docs/4.3/components/popovers/#options

--

--
it's open @charlottedestrait so feel free to tackle it 😉 
--
",XhmikosR,"
--
I'd say that the fewer things we add in DOM the better generally.
--
",charlottedestrait,"
--
Hello, I'd like to fix this issue, is it possible ?
--
",,,,,,
28992,OPEN,Tooltip improvements,feature; js,2019-07-15 23:10:47 +0000 UTC,ray73864,In progress,,"In the past I have used tooltipster for tooltips, but recently I switched to tippy because it uses popper.js for the positioning, but now I'm attempting to move to BS4 native tooltips to try and thin down the number of libraries I am using.

However, I am finding that BS4 tooltips don't support enough things that I need from tooltips.

From Tooltipster and Tippy I use their interactive feature, ie. ""interactive: true"", this means that when I hover over the element with the tooltip, the tooltip will display, if I then move the mouse over the now displayed tooltip, the tooltip will remain until I move my mouse away from the tooltip (and the element it is attached to).

The benefit of this is that I can put things inside it that a person can interact with (obviously).

From Tippy, I use the 'followCursor' option a decent amount so that the tooltip is where the mouse cursor is, this is especially useful because with elements that have a longer width, the tooltip often ends up further to the right than the content in the element, with followCursor turned on, the tooltip ends up wherever the arrow is.

Tippy: https://atomiks.github.io/tippyjs/
Tooltipster: https://iamceege.github.io/tooltipster/
",,,Johann,"
--
Hi @ray73864,

Thanks for your feedback!
I'm totally down to add those features to our Tooltip 👍 

So feel free to open a PR 😉 
--
",ray73864,"
--
Haha, I have no idea how to do a PR or what I would even need to do to add that functionality to Bootstrap Tooltips.

My day is filled too much with work commitments as a sole developer for the company :)
--
",FezVrasta,"
--
Bootstrap's tooltips rely on Popper.js already, so if you include Tippy.js in your project you are adding just a thin layer on top of the existing Popper.js dependency.
--
",,,,,,
28991,OPEN,Toast Javascript handling addons,css; feature; js,2020-06-16 10:09:42 +0000 UTC,GeoSot,In progress,,"Toasts would be handy to support a js behavior like tooltips. 

A basic template (that can be changed globaly), header text, body text, option for close btn and maybe the theme color class 

As of this , it would be nice if it could be configured to be positioned somewhere, fixed  ",,,Johann,"
--
I made a draft PR, which provide auto positioning for our toast plugin, see a demo here: https://deploy-preview-28783--twbs-bootstrap.netlify.com/docs/4.3/components/toasts/#placement

PR: #28783 

is it what you want when you said?
>As of this, it would be nice if it could be configured to be positioned somewhere, fixed

--
",GeoSot,"
--
@Johann-S  

something like this plus the theme-color, header, template and text :P
You can get  inspiration from  [Toastr demo](
https://codeseven.github.io/toastr/demo.html)

And could be possible to use it like 
```js

document.getElementsByTagName('body').toastr({
header:'blah-blah',
text:'blah blah blah'
theme:'info'
}).show();
```
--

--
Any news on this?

 [Dummy example ](https://github.com/twbs/bootstrap/compare/master...GeoSot:toast-created-using-js)
--
",tmorehouse,"
--
We've implemented SCSS to generate toast variants (based on how alert variants are created) using the theme colors:

https://github.com/bootstrap-vue/bootstrap-vue/blob/dev/src/components/toast/_toast.scss

And the variables:
https://github.com/bootstrap-vue/bootstrap-vue/blob/dev/src/_variables.scss

You can see them at https://deploy-preview-3891--bootstrap-vue.netlify.com/docs/components/toast#variants

We also added in an option to disable transparency of toasts (via an additional class), and to adjust the transparency level (via SCSS).


--
",CoreOfGeek,"
--
Please check this out 
https://www.w3schools.com/bootstrap4/bootstrap_toast.asp
--
",,,,
28968,OPEN,Manage classes for CSS Transition,v6,2021-01-10 06:13:15 +0000 UTC,ysds,Opened,,"Currently there is no much customizable or consistency in controlling the show / hide animation of components.

For example, modals allow control CSS Transition only in the show class. toasts has show / hide / showing status but there is no hiding. It is impossible to add a hide animation to  dropdowns.

I have the impression that the current toast fade-in animation is not noticeable to users, so it is difficult to notice the notification. Typical OS’s notification UIs are not only fade-in/out, but also slide-in/out. However, customizing toast animations of Bootstrap is not clear.

I propose to be able to control CSS Transition like [React](http://reactcommunity.org/react-transition-group/css-transition) and [Vue](https://vuejs.org/v2/guide/transitions.html) and to allow users to customize the show / hide animation of Bootstrap components.

![transition](https://user-images.githubusercontent.com/4065765/60202804-5e800a80-9886-11e9-8270-ca10224a49ea.png)

These class names are an example:

* `.modal.show`: same as v-enter
* `.modal.showing`: same as v-enter-active
* `.modal.shown`: same as v-enter-to
* `.modal.hide`: same as v-leave
* `.modal.hiding`: same as v-leave-enter
* `.modal.hidden`: same as v-leave-to

There may be more appropriate names. The suggestion here is to make CSS Transition more customizable.",,,mdo,"
--
Relabelling for v6 since we didn't get this into v5 and it requires breaking changes. I'm into the concept though—consistent transition classes for our components would be a good improvement.
--
",,,,,,,,,,
28918,OPEN,make dynamic tabs actually ARIA 1.1 practices compliant,accessibility; docs; help wanted; js; v5,2020-11-25 13:14:42 +0000 UTC,patrickhlauke,In progress,,"A breaking change, but would like to squeeze this into v5 if we can: turn dynamic tabs into actual ""Tabs with automatic activation"" (see https://www.w3.org/TR/wai-aria-practices-1.1/examples/tabs/tabs-1/tabs.html and https://www.w3.org/TR/wai-aria-practices-1.1/#tabpanel)

- only the currently selected/active tab receives focus, all other tabs are not focusable (`tabindex=""-1""` added dynamically to them)
- cursor keys cycle between tabs, setting both the `tabindex=""0""` and `aria-selected=""true""` to the newly active tab (and `tabindex=""-1""` / `aria-selected=""false""` on the now not selected one)
- mouse behavior can remain as now (though need to flip `tabindex` accordingly)
- document this in the docs, referencing specifically the ""automatic activation"" route (so authors aren't confused/don't wonder why using `SPACE` or whatever does nothing)",,,patrickhlauke,"
--
it may even be worth making tabs a separate page/item in the navigation (and calling it ""Tabs"" as that's what many authors will be looking for in vain)
--

--
also, would love to (assuming it's buried in the code somewhere) remove any support for dropdowns inside dynamic tab interfaces. these are an abomination, and they don't map to any sane ARIA pattern
--

--
if not deemed too much of a breaking change, could consider backporting to v4 if reasonably straightforward...
--
",seh,"
--
Dear @patrickhlauke thank you so much for fixing this. Were you able to backport to v4?
--
",,,,,,,,
28900,OPEN,A more modular-based approach?,css,2020-10-22 16:30:57 +0000 UTC,martinbean,In progress,,"It would be nice if, for version 5, Bootstrap could be “modularised”.

One of the criticisms of Bootstrap is that is contains everything but the kitchen sink; this would mitigate that criticism and allow discerning and conscientious developers to be able to pull in only the components they needed and keep their bundle sizes low.

The way I can envisage this working is, the individual components split into separate NPM packages, i.e. `@bootstrap/alert`, `@bootstrap/badge`, `@bootstrap/breadcrumb`, etc. Variables and mixins could be put in a `@bootstrap/core` or similar package.

The existing `bootstrap` package could function exactly as it does now (pulls everything in and gives you a Bootstrap build with every component), but developers (like me) could craft bundles with just the components we need, i.e.

```scss
@import ""my-app-custom-variables"";
@import ""~@bootstrap/navbar"";
@import ""~@bootstrap/card"";
```

Based on the above, it looks like each `@bootstrap/*` package would need to add the `@bootstrap/core` (or whatever it’s named) package as a dependency.

Of course, developers wanting to get something up and running quickly can still do the same as they have done:

```scss
@import ""~bootstrap/scss/bootstrap"";
```

I remember CSS wizard Harry Roberts did something similar for his “Inuit” CSS framework where the framework was broken into individual components that could be installed on an ad hoc basis. It would be nice if Bootstrap followed a similar approach so unnecessary components can be excluded from bundles and builds.",,,MartijnCuppens,"
--
The issue with this is that for example the cards depend on the variables, functions, mixins and reboot. If we're going to use the `@import` approach you mentioned above we'll probably end up with including the variables & mixins too much.

We might have a look at using the `$enable-` variables more. For example we now have a `$enable-grid-classes` variable to switch on/off the grid classes.

--

--
> Or will Sass literally pull in the same styles for every component that imports the base component?

Yup, you can follow the discussion about a more modular approach here: https://github.com/sass/sass/issues/1094

> Each component could then check if it’s included in the $enabled-components list.

I haven't double-checked this yet, but this doesn't seem to be supported either:
https://github.com/sass/sass/issues/451
--

--
> I would love to maintain the simplicity of a single mono repo package with the best customization options.

Definitely.

> @MartijnCuppens I was more thinking that a component’s body could be wrapped in the `$if` statement?

This would indent all our scss. Not really a fan of that, it would also make cherry picking changes from `master` to `v4` imposible. 
--

--
@martinbean you can have a look at our [getting started](https://getbootstrap.com/docs/4.3/getting-started/theming/#importing) section which describes how to partially include Bootstrap.
--

--
I feel your pain, I don't really like it either but I'm afraid we're limited by the possibilities Sass provides right now.
--

--
Update: Sass is going to move to a module system, which could solve this issue:
http://sass.logdown.com/posts/502818-request-for-comments-module-system-proposal
--
",martinbean,"
--
> The issue with this is that for example the cards depend on the variables, functions, mixins and reboot.

@MartijnCuppens I foresaw that. Could each individual component not `@import` a “base” component before its styles? Or will Sass literally pull in the same styles for every component that imports the base component?

For example:

```scss
// components/card.scss
@import ""~@bootstrap/base"";

// Card styles...
```
```scss
// components/carousel.scss
@import ""~@bootstrap/base"";

// Carousel styles...
```
```scss
@import ""my-apps-custom-variables"";

// Will this approach pull in the base component multiple times? Or just once?
@import ""~@bootstrap/components/card"";
@import ""~@bootstrap/components/carousel"";
```

If the individual components approach isn’t feasible and it _would_ import the base styles multiple times, then maybe offer an `$enabled-components` list or something? By default, every component’s included, but can be overridden by developers to specify only the components they need:

```scss
// Enable only the card and carousel components on top of base styles
$enabled-components: (
  ""card"",
  ""carousel""
);
```

Each component could then check if it’s included in the `$enabled-components` list.
--

--
> I haven't double-checked this yet, but this doesn't seem to be supported either:
sass/sass#451

@MartijnCuppens I was more thinking that a component’s body could be wrapped in the `$if` statement?
--

--
@mdo @MartijnCuppens Do you chaps have any suggestions, then? It would be nice if, as a developer, I could only import the component styles that I need in my applications, rather than Bootstrap being “all or nothing”.
--

--
@MartijnCuppens That’s what I’m currently doing, but it’s a bit of a pain to copy-and-paste `@import` statements. I was just exploring the possibility of a more friendlier approach.
--

--
@MartijnCuppens It seems the Sass team even used Bootstrap as an example of how it could be used 😄

https://github.com/sass/sass/blob/master/accepted/module-system.md
--
",mdo,"
--
I know this is about the idea and not a specific direction, but one thing to not is that there are definitely tools out there for publishing to multiple packages. We did this for Primer and have since opted to go back to the mono-package approach for simplicity’s sake, for both maintainers and developers.

I would love to maintain the simplicity of a single mono repo package with the best customization options. 
--
",jonathanhefner,"
--
What about an imperfect solution: divide .scss files into ""something else depends on this"" and ""nothing else depends on this"", and provide a `""base.scss""` which imports all of the former.

To be clear, such a division wouldn't just be core files (e.g. `""bootstrap/functions""`) vs components.  It would also include e.g. `""bootstrap/buttons""`, assuming that `""bootstrap/button-group""` depends on it.  (I don't know if it actually does, which is a large part of the difficulty, currently.)

This way the user can import `""base.scss""`, and then have have a coarse-grain way of tuning the rest of the output file size.

--
",jquense,"
--
There are approaches that would work without needing to migrate to the sass module system. 

Specifically instead of using partials for components wrap them in a mixin:

```scss
@mixin CreateButton() {
  ...button styles as normal

}
```

then they can be conditionally included:

```scss
// bootstrap.scss

@if $enable_button {
   @include CreateButton();
}
```

We do something similar in react-widgets, accepting a list of widgets you want included, then topographically sort them passed on dependencies and include them: https://github.com/jquense/react-widgets/blob/react-widgets%405.0.0-beta.20/packages/react-widgets/src/scss/react-widgets.scss


--
",,
28841,OPEN,Modal moves background with position-absolute header element,css,2019-08-09 14:09:29 +0000 UTC,wschwaiger,In progress,,"Hi

I know that this was reported before, but it still seems to be an issue.

example: https://www.book2ski.com/en/skischool/skischule-oberschneider/courses

Click on SHOW MEETING POINTS and you can see that the absolute positioned navigation, containing the logo moves.

Yes, I have seen https://github.com/twbs/bootstrap/issues/15229 and I will apply the fix. It is already tested and works in the dev-env.

This only happens on Windows machines. Mac-Browsers are all fine.

Win10 FF67
Win10 Opera60
Win10 Chrome74
Win10 Edge
Bootstrap: Latest 4.3.1

Many thanks",,,ysds,"
--
That demo includes a lot of unrelated HTML/CSS, please create a [reduced test case](https://css-tricks.com/reduced-test-cases/) via [CodePen](https://codepen.io/)/[JS Bin](https://jsbin.com/) or [Stackblitz](https://stackblitz.com/) and report back with your link.
--
",wschwaiger,"
--
there you go: https://codepen.io/anon/pen/gJJEqJ or even more minimal https://codepen.io/anon/pen/dEEBNJ
--
",,,,,,,,
28807,OPEN,4.3.1 - Use of collapse breaks scrollSpy,feature; help wanted; js; v4; v5,2021-01-12 06:31:16 +0000 UTC,yarhouse,Opened,,"#### Issue description

When using a simultaneous implementation of multiple collapse functions and scrollSpy for a continous scroll through a nav bar, the use of *any* collapse will unset/break the scrollSpy, and futhermore cannot seem to be reset or 'refreshed'

#### Steps to reproduce the issue

http://jsfiddle.net/lopac1029/9ork8Lts/embedded/

1. Scroll to or click to the ""Classes"" section
2. Click toggle any of the ""COLLAPSEABLE [class] Archetypes""
3. Scroll in any direction


#### What's the expected result?

- The scrollSpy should not change from the current active sidebar nav item until it reaches the next ""chapter"" element as defined in the scrollSpy init configuration


#### What's the actual result?

- the scrollSpy becomes completely disconnected from its view location and does not reset

#### Additional details / screenshot

- binding a `var $spy = $('#view').scrollspy('refresh')` to the collapse and nav button clicks does nothing to reset the spy
- Operating system: macOS
- Browser: Chrome, Firefox, Safari, and likely others",,,Johann,"
--
Hi @yarhouse,

Thanks for reporting that behavior !

When the collapse is hidden or shown it change the window's height that's why our Scrollspy is totally lost.
That's definetely an improvement we should be able to handle that
--
",nikduvall,"
--
I am having a similar issue that I believe could be related to this related issue :

**Issue description**
When a nav-link is configured to collapse, ScrollSpy will no longer apply the 'active' tag to the element.

**Steps to reproduce the issue**
1. Set Screen width to >= 779px (NAV compressed to show menu button)
2. Navigate to https://5f021d875c65ec0007e66c61--dev-cynik-org.netlify.app/ - NOTE: This is the preview for the build I created to demonstrate the problem on my own site.
3. Click About link in NAV bar at the top - observe that the 'active' tag is not set
4. Click DuVee Digital link in NAV bar at top - observe that the 'active' tag is set and the background of the link turns blue
5. Scroll the screen back to the top - observe that as the 'About' section enters the viewport, the 'active' tag is removed from the 'DuVee Digital' link, but not applied to the 'About' link.
6.  Scroll up and down the screen multiple times using scrollbar, mouse, and links at top and note the behavior persists.
7. Set Screen width to < 779px (NAV uncompressed, links are shown, menu button hidden)
8. Open the Menu and scroll the screen up and down while leaving the menu open - observe that the active tag is applied to the About nav-link and the background changes to blue - this is expected behavior when menu is uncompressed.
9.  Scroll the screen until the About nav-link is active then change the screen width back to >= 779px to uncompress the nav - observe the active tag still exists on the About nav-link.
10.  Scroll to the bottom of the screen and back to the top - observe the active link change to DuVee Digital, but as you scroll back to the top, the 'active' flag does not get set on the About nav-link.
11.  Change the screen width back to < 779px to compress the nav.
12.  Click the menu button, select About and observe the menu collapses and scrolls to the About section - this is expected when menu is compressed.
13.  Click the menu button, select DuVee Digital and observe the menu remains uncollapsed while the screen scrolls to the DuVee Digital section.
14.  Change the screen width back to >= 779px to uncompress the nav and notice that the click state of the DuVee Digital persists with a white background.
15.  Navigate up and down the screen scrolling and observe how the active state never returns to the About nav-link after it leaves the viewport.
16.  Click back and forth between About and DuVee Digital links and observe how when you click About, DuVee Digital returns to normal, but when you click back on DuVee Digital, it returns to the Compressed click state noted in #14 above.

**What's the expected result?**
ScrollSpy sets the 'Active' state on the Nav-Links regardless of of screen width being above or below the threshold to toggle the nav bar between showing links or a menu with links at the same time that the Nav-Links are configured to collapse the menu when clicked.

**What's the actual result?**
Noted in Steps to Produce above

**Operating system:** macOS Catalina
**Browser:** Chrome and likely others
--
",mdo,"
--
Is this something we want to support @twbs/js-review? Feel like if someone is collapsing content, and scrollspy is in use, they would need to trigger an update to scrollspy to refresh the scroll positions. Is this something we need to support, or something others are responsible for entirely?
--
",XhmikosR,"
--
Ideally, we should handle this case too. It's an edge case but something that we should handle.
--
",,,,
28752,OPEN,Bootstrap toast remains on top after reload,css; v4; v5,2019-05-09 11:09:43 +0000 UTC,KjelleJ,Opened,,"A Bootstrap toast is not closed (using the close button) before the app is ""finished"" (reloaded or at browser exit). When the app is started again the buttons under the ""invisible toast"" cannot be used although they are visible. So it looks like the toast ""stays on top"" but is invisible.

The solution to the problem is to click the button that shows the toast and close the toast. Now all buttons are clickable.

Bootstrap 4.3.1. Windows 10 Home v1809. Chrome Version 74.0.3729.131.

To see a demo of this problem goto [tutorialrepublic](https://www.tutorialrepublic.com/codelab.php?topic=bootstrap&file=toast-methods) and adjust the window size so part of the buttons are under the toast. Press 'Show Toast', reload the page and if you hoover the cursor you can see where the toast was located (arrow instead of hand). See also [stackoverflow](https://stackoverflow.com/questions/56028939/bootstrap-toast-remains-on-top-invisible)
",,,Johann,"
--
Hi @KjelleJ,

So that's because by default `opacity` of our toasts is `0` so it's not visible but the `display` property is equal to `block`

Thanks for reporting that 👍 

/CC @twbs/css-review 
--
",patrickhlauke,"
--
on that topic, it would be nice if our documentation had an actual live example of a toast that starts out hidden, and is then triggered (just by a simple button). just to see it actually in action (and to potentially debug things like this). or failing that, a live example/demo that's linked from the docs.
--
",,,,,,,,
28648,OPEN,"Collapse documentation doesn't mention anything about the class ""collapsed""",docs; v5,2021-04-08 10:43:44 +0000 UTC,KaranLala,Opened,,"The class ""collapsed"" is added to the trigger element when the target element is hidden, but this feature isn't mentioned anywhere in the [collapse documentation](https://getbootstrap.com/docs/4.3/components/collapse). Is this a formally recognized feature? 

I'm sure many others, like me, would like to change their triggers style when showing/hiding the target element, and it's not very clear that it's straightforward to do this purely with CSS because of the collapsed class. It would be helpful to add a few words about this to confirm (or deny) that this is a feature that can and should be used. ",,,ysds,"
--
It seems that this class isn't used in Bootstrap's CSS and JS either (our JS just toggle this class).

I think we need to discuss whether to leave this JS processing.

At least, It is possible to apply styles using the `aria-expanded=""false""` selector instead of using the `collapsed` class.
--
",minaelee,"
--
The `collapsed` class still exists in Bootstrap 4.5's collapse.js:
```
const CLASS_NAME_COLLAPSED  = 'collapsed'
```

```
          if (!$elem.hasClass(CLASS_NAME_SHOW)) {
            $(trigger).addClass(CLASS_NAME_COLLAPSED)
              .attr('aria-expanded', false)
          }
```

It is used in the Accordion example in Bootstrap 4.0 and 4.5 documentation - see the buttons in https://getbootstrap.com/docs/4.5/components/collapse/#accordion-example

In testing the Accordion example, the collapsed class does set aria-expanded to false on collapsed elements, and when un-collapsed, it is removed and aria-expanded is set to true. So it appears to be behaving as expected.

However, there is documentation on setting aria-expanded at https://getbootstrap.com/docs/4.5/components/collapse/#accessibility which makes no mention of the existence of the `collapsed` class, despite its entire point of existence being to set that attribute. 

Can `collapsed` be added to the documentation, or if there is some reason it is not being mentioned (e.g. being deprecated, buggy behavior, etc), can it be removed from the Accordion example to reduce confusion? Thank you. 


--

--
I've checked the Bootstrap 5 documentation as well, and this issue occurs again there. In Bootstrap 5, Accordion has its own documentation page under Components (rather than a subsection in the Collapse page) and _both_ examples use `collapsed` without providing any definition of it. Neither is it mentioned in the Collapse page. 

https://v5.getbootstrap.com/docs/5.0/components/accordion/
https://v5.getbootstrap.com/docs/5.0/components/collapse
--
",mdo,"
--
Near as I can tell, `.collapsed` does nothing in v5, possibly nothing in v4. Can anyone on @twbs/js-review confirm? If so, can we drop it from v5?
--
",ffoodd,"
--
As far as I recall, we sometimes use it to negate styles: `:not(.collapsed)`. But we may use `[aria-expanded]` instead.
--
",XhmikosR,"
--
It's used in the collapse component to signal the collapse is done showing.
--
",GeoSot,"
--
In js code, `.collapsed` is toggled exactly  the same time with `[aria-expanded]`. 

Do we still want to check if it can be omitted?
--
"
28638,OPEN,Scrollspy documentation regarding anchor class,docs; v4; v5,2019-04-17 21:04:53 +0000 UTC,etsauer,Opened,,"OS: Fedora 29
Browser: Chrome

The Scrollspy documentation has a list of requirements to ""activate"" the feature. One requirement that appears to be missing is the presence of `class=""nav-link""` in all anchor tags in your nav component. I think this is important to mention, as it took quite a bit of trial and error to discover this while trying to enable scrollspy on an auto-generated nav component.",,,tmorehouse,"
--
It also doesn't appear to support nested UL/LI markup as well,

```html
<ul class ""nav"">
  <li class=""nav-item""><a href=""#foo"" class=""nav-link"">Foo</a></li>
  <li class=""nav-item""> <!-- this doesn't get the .active class when sub items are .active -->
    <a href=""#bar"" class=""nav-link"">Bar</a>
    <ul class=""nav"">
      <li class=""nav-item""><a href=""#bar-a"" class=""nav-link"">Bar A</a></li>
      <li class=""nav-item""><a href=""#bar-b"" class=""nav-link"">Bar B</a></li>
    </ul>
  </li>
</ul>
```
--
",,,,,,,,,,
28600,OPEN,Spinner inside input,css; feature,2019-07-12 16:50:58 +0000 UTC,tkrotoff,Opened,,"v4.2 features spinner. They can be embedded inside a button: https://getbootstrap.com/docs/4.3/components/spinners/#buttons

Would be nice to be able to also embed a spinner inside an input.

Sometimes you have fields that perform async actions, a spinner inside the input would give feedback to the user (something is pending).

Example: https://github.com/tkrotoff/bootstrap-spinner

![bootstrap-spinner demo](https://github.com/tkrotoff/bootstrap-spinner/raw/master/doc/demo.gif)
",,,mdo,"
--
Inputs cannot have elements within them, so we're outta luck on that. For now, no plans to implement this or a variation of it. We'll keep it in mind though!
--

--
Lemme see if I can come up with something...
--
",serzhenko,"
--
@mdo but maybe it's possible to emulate this feature using technique similar to input groups? If text appending is possible, why can't we append a spinner? 
--
",,,,,,,,
28599,OPEN,carousel fade effect broken after 4.1.3 -> 4.3.1 upgrade,css; v4; v5,2021-01-12 04:39:52 +0000 UTC,jakubklimek,In progress,,"- Operating system and version: Windows 10, Android P
- Browser and version: Chrome 73.0.3683.86, Firefox 66.0.2

In 4.3.1, the original state is not fading away, it disappears at once at the end of transition, mixing akwardly with the new content which fades in.
- [Carousel fade in 4.1.3](https://jsbin.com/qubonip/1/edit?html,output) (OK)
- [Carousel fade in 4.3.1](https://jsbin.com/qanejiw/1/edit?html,output) (Broken)",,,XhmikosR,"
--
/CC @Johann-S 
--

--
@MartijnCuppens: any ideas? If it's not a markup issue, and we are not missing any FF mobile vendor properties, this could be a bug in the browser.
--

--
Hmm, then it might be something else like respecting the OS setting to reduce animations maybe?
--
",Johann,"
--
Not sure it's JS related here 🤔
--
",jakubklimek,"
--
@XhmikosR just to clarify, it is not working in Chrome and Firefox, both mobile and desktop versions.
--

--
@MartijnCuppens I do not think setting a background will solve this for me. It has a white background only in the minimal example. Live it looks like [this](https://data.gov.cz/) (OK) and [this](https://nkod-test.opendata.cz/) (Broken)
--
",MartijnCuppens,"
--
@jakubhonisek,

You can add a background (`.bg-white`) to carousel items to fix this: https://jsbin.com/puhuvorohi/1/edit?html,output

We fixed the background of the carousel leaking through while transitioning in `4.2`, you can see the issue in `4.1`:
https://getbootstrap.com/docs/4.1/components/carousel/#crossfade

Current implementation:
https://getbootstrap.com/docs/4.3/components/carousel/#crossfade

That fix was causing this, but this can easily be solved with setting a background.
--

--
We should fix this, but I think we can't find a solution for both cases (fix for transparent slides & prevent background leaks for non-transparent slides). So I guess we'll need 2 types of crossfade carousels to deal with this.

Anyway, to help you guys out for now, by adding these lines you should be fine:
```
.carousel-fade .active.carousel-item-left,
.carousel-fade .active.carousel-item-right {
  transition: .6s opacity ease;
}
/* Disable transitions for if reduced motion is enabled: */
@media (prefers-reduced-motion:reduce) {
  .carousel-fade .active.carousel-item-left,
  .carousel-fade .active.carousel-item-right {
    transition: none;
  }
} 
```

I'll have a look at how this should be fixed in core, I'll probably end up with an additional class to switch between the behaviours.

--

--
@owendswang:
> The animation effect of this component is dependent on the `prefers-reduced-motion` media query. See the reduced motion section of our accessibility documentation.

See https://getbootstrap.com/docs/4.3/components/carousel/#how-it-works
--
",jjacobson,"
--
Running into this issue as well. Setting backgrounds on carousel items isn't an option for me.
--
",owendswang,"
--
v4.3.1 carousel fade not working for me too.
even the effect of the example in the doc is not working too.
--

--
> 
> 
> @owendswang:
> 
> > The animation effect of this component is dependent on the `prefers-reduced-motion` media query. See the reduced motion section of our accessibility documentation.
> 
> See https://getbootstrap.com/docs/4.3/components/carousel/#how-it-works

Thanks for reply. I think I figured out why it was not working.
Because the new feature: prefers-reduced-motion.
Sorry for buthering.
--
"
28581,OPEN,Better link in documentation to the latest release,docs,2020-03-19 06:43:02 +0000 UTC,matronator,Opened,,"One thing that's been driving me crazy ever since I started using Bootstrap was the fragmenting of documentation across multiple versions on Google. Every time you want to quickly lookup some component or whatever on Google, you get several results of the same page but from a different Bootstrap version and even worse most of the time the latest (stable) one isn't even in the results.

As annoying as this is, I can see the reason in keeping those older docs up in the results, as not everyone is always using the latest version. However what really gets me every time is when I click on the sticky top link in hopes of getting to the same page but on the latest release and end up on the main page instead, having to find the page again in the documentation

 I've done it so many times already but it doesn't matter, because the next time I land on an older version of the docs I will forget all about it and end up clicking the link anyways.

What is the reasoning behind it behaving the way it does? It's not very intuitive IMO. The link text doesn't give any indication where exactly you'll be taken, other than it will have something to do with a newer version of (currently) Bootstrap 4 and is kinda misleading that way.

Wouldn't it be more logical for the link to lead to the same page on the newer version, if it exists, otherwise the main page or changelog/release notes? Definitely more convenient at least.",,,coliff,"
--
This issue has cropped up many times, and I too find it frustrating. If you Google 'Bootstrap 4 docs' 2 of the 3 first results are for v4.0 and v4.1 - and none for the latest v4.3. This leads some users to start using older versions of the docs and probably leads to extra 'support issues' being opened with users using old versions with bugs/features which have since been addressed.

@XhmikosR mentioned in the Slack channel the possibility of blocking Google from indexing the old versions of the docs with `robots.txt`. I think this would be the best option.
So it'd block:
```
/docs/4.2/
/docs/4.1/
/docs/4.0/
/docs/3.3/
```
Then if someone searches for 'Bootstrap 3 docs' they'll get the latest v3.4 docs and searching for 'Bootstrap 4 docs' will get the latest v4.3 docs.
--

--
It can be requested to remove the unwanted URLs from the index via Google Search console https://search.google.com/search-console/welcome
--

--
related; add rel=""nofollow"" to the old versions of docs on https://getbootstrap.com/docs/versions/
REF: https://en.wikipedia.org/wiki/Nofollow
--
",chrisbo,"
--
Disallowing only works for unindexed content.
--
",XhmikosR,"
--
Yeah it's my TODO to sort this out.

I need to start from somewhere probably by including the subsitemaps for the docs we want in the root sitemap.

And then block the other versions.

But while at it, I was thinking if maybe having a `/latest/` endpoint is a good idea. It has its pros and cons though.
--

--
Yeah, but I'd rather just block/allow the old versions in one place, robots.txt.
--

--
Having a `/latest` endpoint is what I have suggested too, but I haven't got the time to look into the details. Because we'd need to generate the docs twice and make sure our deployment scripts are adapted for this.

This, unfortunately, will require us to go into the old docs and adapt the canonical links, but I guess it's something we can avoid. So as long as this will solve the issue once and for, I'm all for it

That being said, if anyone has any patches, feel free to CC me.
--

--
These are static pages so we need to edit them. Plus we already have a canonical link for all pages; I did this last year, not a fun process for sure :P

>Removing the older docs from the google index or excluding them via robots.txt isn't a good option IMO, because that would mean throwing away their ranking.

Yeah, and also people won't be able to search for specific versions. Although, we do have search since v4.0.0
--

--
>but how are those static pages served to the user? 

GitHub Pages


--
",cbirdsong,"
--
The best way deindex the older versions this would be adding a `<link rel=""canonical"" />` to the `<head>` in each page. This will make Google redirect all older indexes for each page to the latest version, which will also help with SEO.

If you block them using robots.txt Google will not remove or update the existing listings, it will just never visit those pages again. More info: https://support.google.com/webmasters/answer/139066?hl=en
--
",aavmurphy,"
--
Best not to de-(search engine index) old versions' documentation as some people still use them.

""rel=canonical"" isn't the right approach either - its for identical pages with several url's.

Sitemaps have a 'priority' attribute, but its not clear if Google use it.

A simpler way might be to change the old url's
- the old urls will return 404
- this will break any incoming links, and so lower their search engine ranking even when google re-indexes them
- a longer url will count against them
- put `<a href=""..."" rel=""nofollow"">` when linking to the old version (again, to reduce the number of links to them)

e.g.

getbootstrap.com/docs/ - [current version]
getbootstrap.com/archive/docs/3.4.1/ - old versions  
--
",ohmycode,"
--
+1 This is really annoying but could be fixed fairly easily with canonical links.

@aavmurphy: Canonical links are for identical **content** with different URLs, and this is clearly the case with this versioned documentation. 

A good example is the Symfony documentation. Try googling symfony + whatever (e.g. [symfony controller](https://www.google.com/search?q=symfony+controller)) and you will always find the documentation of the [current version](https://symfony.com/doc/current/controller.htm) ...com/doc/current/*.  If you choose an [older version](https://symfony.com/doc/4.4/controller.html) you will find a canonical link pointing to the latest documentation:
`<link rel=""canonical"" href=""https://symfony.com/doc/current/controller.html"" />`
I don't see any no-follow attributes nor priorities regarding ""current"" in the sitemap.xml

Would be awesome to have the same feature for our beloved Bootstrap Documentation.
--

--
@XhmikosR  I don't know what server technology is used to deliver this pages, but a quick fix could be parsing the HTML output and adding the canonical link tag on the fly. 

Removing the older docs from the google index or excluding them via robots.txt isn't a good option IMO, because that would mean throwing away their ranking.
--

--
but how are those static pages served to the user? if it's for example apache you could use [mod_substitute](https://httpd.apache.org/docs/2.4/mod/mod_substitute.html) to rewrite them [automatically modifying the response HTML](https://regexr.com/50lu4):

`AddOutputFilterByType SUBSTITUTE text/html` \
`Substitute s/<link rel=""canonical"" href=""https:\/\/getbootstrap\.com\/docs\/[^\/]*/<link rel=""canonical"" href=""https://getbootstrap.com/docs/latest/ni`

--
"
28553,OPEN,Reorganize Scss folder structure,css; v6,2021-01-10 06:26:42 +0000 UTC,MartijnCuppens,In progress,,"Our current `scss` file and folder architecture is a bit unclear. We have a `_variables.scss` file on the same level as the components. There's also a `_mixins.scss` file which includes the mixins in another folder. There might be some room for reorganisation.

We could come up with our own folder structure but it might be interesting to have a look at existing solutions. Maybe [ITCSS](https://www.xfive.co/blog/itcss-scalable-maintainable-css-architecture/) could help us out.

ITCSS has been discussed already in https://github.com/twbs/bootstrap/issues/18233 but this was also about splitting our variables file, I wouldn't do that for now. Just reorganising the files into folders would be a great start.

Feel free to spread your thoughts on this here

/CC @twbs/css-review ",,,mdo,"
--
With the forms redux, I already want to move all that into a new subfolder. What other changes would you be interested in making?
--

--
Punting to v6 for future discussion.
--
",MartijnCuppens,"
--
I guess a folder structure like this would be the result in the end:

```text
bootstrap/
└── scss/
    ├── settings/
    │   └── variables.scss
    ├── tools/
    │   ├── functions.scss
    │   └── mixins
    │       └── ... All mixin files here
    ├── generic/
    │   ├── reboot.scss
    │   └── root.scss
    ├── elements/
    │   └── type.scss
    ├── objects/
    │   ├── images.scss
    │   ├── code.scss
    │   ├── grid.scss
    │   └── transitions.scss
    ├── components/
    │   ├── tables.scss
    │   ├── forms.scss
    │   ├── buttons.scss
    │   ├── dropdown.scss
    │   ├── button-group.scss
    │   ├── input-group.scss
    │   ├── custom-forms.scss
    │   ├── nav.scss
    │   ├── navbar.scss
    │   ├── card.scss
    │   ├── breadcrumb.scss
    │   ├── pagination.scss
    │   ├── badge.scss
    │   ├── alert.scss
    │   ├── progress.scss
    │   ├── list-group.scss
    │   ├── close.scss
    │   ├── toasts.scss
    │   ├── modal.scss
    │   ├── tooltip.scss
    │   ├── popover.scss
    │   ├── carousel.scss
    │   └── spinners.scss
    ├── utilities/
    │   └── utilities.scss
    ├── bootstrap.scss
    ├── bootstrap-grid.scss
    └── bootstrap-reboot.scss
```

In each folder some files could be grouped into folders if needed (like the form stuff).


--

--
Splitting the `variables.scss` file is something we could look in to, imo that something we can do after cleaning up the folder structure.
--
",GeoSot,"
--
@mdo @MartijnCuppens 

May I propose and a split on the variables.scss?

It has being too big... Or Maybe One main File with the main variables and a second which will have all the inherited variables 
--
",tomhrtly,"
--
I agree with @GeoSot, it would be handy to have two separate variable files, one for the initial variables and another for derived ones. It would save having to redeclare some variables such as colors as this is usually the file that is imported first in the SCSS setup.
--
",inwardmovement,"
--
That will be awesome if V5 adopts ITCSS architecture.
--
",ffoodd,"
--
FWIW I got used to @HugoGiraudel's [7-1 pattern](https://sass-guidelin.es/#the-7-1-pattern) which would be very consistent with our current namings:

- `base/`
- `components/`
- `layout/`
- `pages/`
- `themes/`
- `abstracts/`
- `vendors/`

Except for `pages` and `themes` (that could be used in our docs, eg. for the Examples section) I think that could be a good candidate :)



--

--
In fact it does, since it's not magical but describes the number of folders. You may think of `.col-2` as a reference.

And at least, this pattern has a name, is documented and pretty common.
--
"
28513,OPEN,[bug] Dropdown inside scrollable body modal clipped and/or inaccessible,css; v4; v5,2019-03-17 11:19:18 +0000 UTC,tmorehouse,In progress,,"Version 4.3.1

When one has a scrollable body modal, with a dropdown inside, and the model content is short, the opened dropdown gets cut off/hidden, and in some cases on desktop, impossible to scroll to select the last dropdown menu item.  Changing the boundary option of dropdown does not correct the issue.

![image](https://user-images.githubusercontent.com/2781561/54464010-c4230d80-4753-11e9-9163-b65996bc308d.png)

Reproduction: https://codepen.io/anon/pen/XGEwPV?editors=1000

After playing a bit, I was able to come up with a workaround:

- add class `.position-static` to the `.modal-body`
- override the style `overflow: hidden;` on the `.modal-content` div with `overflow: initial;` (as the SCSS defines it as `overflow: hidden;` for some reason in scrollable mode).
- add `data-boundary=""viewport""` (or  window) to the dropdown button

Working example: https://codepen.io/anon/pen/rRdggJ?editors=1000

Possible fix:
When the modal is in scrollable body mode, add the above `position: static` to `.modal-body` rule, and remove `overflow: hidden;` on `.modal-content` (which appears to be added only in scrollable mode)

Then it would be up to the user to apply the `boundary` to the dropdown if needed.
",,,ysds,"
--
The `.modal-content {overflow: hidden}` is to prevent overflow the content in a small height screen:

<img width=""1280"" alt=""screenshot"" src=""https://user-images.githubusercontent.com/4065765/54474920-60b9de00-482e-11e9-8a57-3f2448979647.png"">

But I agree the CSS cause that dropdown issue.

--
",tmorehouse,"
--
Good point...

Maybe for small (short) viewports, the height of the scrollable modal could be replaced with a non-vh absolute value (or removed), and add a max height on the modal-body?


--
",,,,,,,,
28496,OPEN,SCSS testing,css; help wanted; meta,2021-01-10 06:31:26 +0000 UTC,MartijnCuppens,In progress,,"Now that our flexibility of our `scss` is going to extended with PRs like https://github.com/twbs/bootstrap/pull/28445, we should have a look at automated tests for `scss`.  With these tests I mean: check the output if `scss` configuration is changed (like adding utilities, etc..)

I used MochaJS for doing these tests with RFS, that worked pretty well, but maybe we can use the same ""thing"" for `js` and `(s)css` tests.",,,mdo,"
--
I'd love to see some examples of how this helps us and others. Never have found a good solution that didn't seem superfluous to writing CSS, but I haven't actively sought that out :).
--
",MartijnCuppens,"
--
Here is how it works in RFS:
https://github.com/twbs/rfs/tree/master/test

For example for sass, there are 10 different configurations that are tested with the same main file(https://github.com/twbs/rfs/tree/master/test/sass).

In the `expected` folder the expected output is shown (https://github.com/twbs/rfs/tree/master/test/expected).

These tests are triggered by git hooks for each commit and also in travis to make sure we don't introduce breaking changes.


For Bootstrap we can something alike to test if changes to the utilities api won't break anything. Other tests could be the output of functions or mixins with specific configurations.
--
",joneff,"
--
If I may chime in, at the end of the day CSS controls how things look. In terms, facing a similar problem, we decided to test the visual output of static pages. A screenshots is generated build time (on travis) and if it doesn't match up, we commit it and then trigger the build again.

There were some caveats, like specifying the correct tolerance; dealing with browser updates (we are using firefox for the screenshots), spinning animations prove impossible (need to be disabled). I mean it's not the best solution but it works for us and gives us nice visual diffs as well.
--
",,,,,,
28481,OPEN,v5: Modal focus changes,feature; help wanted; js; v5,2021-03-14 02:43:00 +0000 UTC,mdo,In progress,,"Skipping some previous v4-based PRs given our move to regular JS has already landed in `master`.

- #25277: Modal tabbing and shift+tabbing behavior
- #27646: Allow shift-tab focusing for modals
- #25651: Modal input autofocus attr & keyboard nav
- #21661: shift+tab without focused element within modal
- #27241: SHIFT + TAB should cycle backwards

/cc @Johann-S ",,,tmorehouse,"
--
@mdo 

A simple way to ""trap"" the regular <kbd>TAB</kbd> and <kbd>SHIFT</kbd>+<kbd>TAB</kbd> is to  trick the browser into doing all (most) of the work figuring out which element to tab into when <kbd>SHIFT</kbd>+<kbd>TAB</kbd>.

The trick is to create two `<div tabindex=""0"" />` elements, one on top of the modal (before the header), and one after the footer.  Both div's are `0px` height and should have their focus outline set to `0`.

When someone is in the first tabable element in the modal (i.e. it could be the `x` close button), and they press <kbd>SHIFT</kbd>+<kbd>TAB</kbd>, the first tab trap `<div>` (the one before the header) receives a `focusin` event.  You trap that event, and then move focus to the bottom tab trap `<div>` (below the footer) and then trigger <kbd>SHIFT</kbd>+<kbd>TAB</kbd> keyboard event on the `<div>`.  The browser then kicks in and moves focus to the bottom most tabbable in the modal (assuming all the tabbables in the modal are default tabindex (i.e. `0`).

To get around having tabbables with higher than `0` tab index, one could just give the bottom tab trap `<div>` a rather high tabindex (i.e. `9999999999999`), or query the modal for `[tabindex]` elements and find the highest value and then set the bottom tab trap `<div>` to that tab index + 1.

So there would be no need to do any crazy searching/sorting/computing to determine which element to tab into when the <kbd>SHIFT</kbd>+<kbd>TAB</kbd> happens on the first tabbable inside the modal.

And when someone is forward tabbing and they reach the bottom tab trap `<div>`, then you do the reverse, and move focus to the top tab trap and then trigger a <kbd>TAB</kbd> keyboard event on it to to let the browser move focus to the first tabbable in the modal.

This whole process could basically replace the current enforce focus routine.
--
",RyanBerliner,"
--
Lots of mentions about `TAB` and `SHIFT + TAB` behavior in a couple issues, this seems to be the most current so hopefully its the correct spot.

I also agree that `SHIFT + TAB` should jump focus to the last focusable element in the modal when pressed with focus on the first focusable element. The recommended design pattern and keyboard support put out by w3c explains this as well. https://www.w3.org/TR/wai-aria-practices-1.1/examples/dialog-modal/dialog.html

Would this still be a welcomed change? Or is there a reason behind its current implementation?

The behavior I've described is present in v4, and v5, as seen on the doc pages.
https://getbootstrap.com/docs/4.5/components/modal/
https://v5.getbootstrap.com/docs/5.0/components/modal/
--

--
Yeah, support for `<dialog>` is not great at the moment. Even in chrome, which claims support, native keyboard navigation on `<dialog open>` elements doesn't trap focus, or even screen reader navigation (I've tested voice over on chrome) 🤷‍♂️ . 
--

--
This is _not_ a pull request candidate in any way, just putting some of the ideas together to see what would actually need to be changed once you start getting your hands dirty.

1. You can't figure out whether someone is navigating backwards or forwards without either listening to the keyboard, or tracking navigation history and comparing to dom order... which seems like a pain. So listening to the keyboard seems like the way to go, and needs to be added. The only keyboard listener currently there is for dismissing the dialog.
2. To avoid the `tabindex` issues of putting dummy elements at the beginning and end of the modal, there needs to be a way to find all focusable elements inside the modal, so you know where the beginning and end is.

This is basically exactly what @HugoGiraudel outlined above.

Fitting that into the current bootstrap modal setup would either mean replacing the [`_enforceFocus()`](https://github.com/twbs/bootstrap/blob/main/js/src/modal.js#L281) event handling completely with a keyboard listener, or adding a keyboard listener alongside it. 

[**Here is a proof of concept adding a keyboard listener**](https://github.com/RyanBerliner/bootstrap/commit/1747b86a55a02f167f1cc3d28ea6280aa0783532) along side the (slightly modified) `focusin.bs.modal` event. In my mind that's an option, although a cleaner option might be just changing the existing `enforceFocus()` to get the events it needs.
--

--
I'd be glad to put in some time to submit a pr for this - first though I'd like to make sure that the bootstrap team is on board with doing this for v5, specifically following [this proof of concept](https://github.com/RyanBerliner/bootstrap/commit/1747b86a55a02f167f1cc3d28ea6280aa0783532) as a roadmap for implementing the desired behavior. I'd imagine as a follow up pr to resolving this issue, the same behavior should be inherited into the new Offcanvas component, using a similar inheritance pattern as the relationship between tooltips and popovers.
--
",SandHilt,"
--
Why don't use dialog tag element?

https://html.spec.whatwg.org/multipage/interactive-elements.html#the-dialog-element
--
",patrickhlauke,"
--
because it's poorly supported and we'd need to polyfill it? https://caniuse.com/?search=dialog
--

--
i'd need to start digging into our code, but essentially we need to tweak current focus trapping/cycling behaviour.

in an ideal world, we'd be using `<dialog>` and polyfilling/shimming it, and/or using `inert` attribute and polyfilling/shimming it. but i believe we decided not to go down the polyfill route.

i've recently messed around with https://github.com/edenspiekermann/a11y-dialog (h/t @HugoGiraudel), so perhaps some bits from there could be of use. but until I had time to do a proper review of how our modal currently operates, it's tough to say. hoping to be able to carve out some time this coming week for this...

(and yes, agree this should only be done in `v5`, rather than trying to cram it into `v4`)
--

--
so, the current behaviour is due to the fairly naive `_enforceFocus()` function https://github.com/twbs/bootstrap/blob/main/js/src/modal.js#L281

```
_enforceFocus() {
  EventHandler.off(document, EVENT_FOCUSIN) // guard against infinite focus loop
  EventHandler.on(document, EVENT_FOCUSIN, event => {
    if (document !== event.target &&
        this._element !== event.target &&
        !this._element.contains(event.target)) {
      this._element.focus()
    }
  })
}
```

in essence, as soon as focus moves out of the modal, it sets focus back on the modal. what happens then if a user progresses forward through the modal using `Tab` is that once they get past the last focusable element inside the modal, their focus falls out, and focus is set back to the dialog container. so, if they now try to navigate backwards `Shift`+`Tab` they once again fall out of the modal, and focus is forced back to the modal.

conceptually, unless we want to go for a more abstracted/systemic solution such as `inert` (which currently needs to be polyfilled in all browsers https://github.com/wicg/inert), or using an actual `<dialog>` (which also needs to be polyfilled), one hacky solution is to use two empty listener elements - one at the start of the modal, one at the end. make them actually keyboard-focusable (`tabindex=""0""`). when the one at the start of the modal gets focus, programmatically move focus to the last focusable element in the modal. vice-versa, if the listener element at the end of the modal gets focus, move focus programmatically to the first focusable element in the modal. not exactly elegant. (edit ah i see @tmorehouse already said essentially the same, hah)

another option would be to add extra explicit keyboard listener to the modal container and detect if the specific `Shift`+`Tab` key combination is pressed when the outer modal container has focus, and if so programmatically move focus to the last focusable element in the modal. Of course this is not perfect, as it won't catch other ways in which focus may be moved, but should address the most common scenario.
--

--
> To get around having tabbables with higher than `0` tab index, one could just give the bottom tab trap `<div>` a rather high tabindex (i.e. `9999999999999`)

problem with that is that if there *are* no other elements with `tabindex` > 0, browsers will still prioritise the `<div>` with that super-high `tabindex` before cycling to the ones without any `tabindex`.
--
",mdo,"
--
What's the best path forward here @twbs/js-review @patrickhlauke? I added a third modal focus issue to the above, but I'm unclear what if anything we should do here.
--
",KittyGiraudel,"
--
Thank you for the shoutout @patrickhlauke!

[a11y-dialog](https://edenspiekermann.github.io/a11y-dialog/#introduction) is small, spec-compliant, dependency-free and provides both a JS and a DOM API. It can also leverage the `<dialog>` HTML element although that is currently not recommended because the support across browser is inconsistent at best. Oh, and it supports dialogs (`role=""dialog""`) *and* modals (`role=""alertdialog""`) which is nice.

Let me know if I can help somewhat. :)
--

--
In case this helps, on a11y-dialog, I handle focus trapping like this:

1. [Bind a document-wide event listener](https://github.com/edenspiekermann/a11y-dialog/blob/824cf9c1a818a629007081b9b786ff846aec4b1b/a11y-dialog.js#L207):

```js
document.removeEventListener('keydown', this._bindKeypress);
```

2. [Handle <kbd>tab</kbd> when the dialog is open](https://github.com/edenspiekermann/a11y-dialog/blob/824cf9c1a818a629007081b9b786ff846aec4b1b/a11y-dialog.js#L305-L319):

```js
  A11yDialog.prototype._bindKeypress = function(event) {
    // Some more stuff here…

    if (this.shown && event.which === TAB_KEY) {
      trapTabKey(this.dialog, event);
    }
  };
```

3. [Trap the focus within the dialog](https://github.com/edenspiekermann/a11y-dialog/blob/824cf9c1a818a629007081b9b786ff846aec4b1b/a11y-dialog.js#L416-L436):

```js
function trapTabKey(node, event) {
  var focusableChildren = getFocusableChildren(node);
  var focusedItemIndex = focusableChildren.indexOf(document.activeElement);

  if (event.shiftKey && focusedItemIndex === 0) {
    focusableChildren[focusableChildren.length - 1].focus();
    event.preventDefault();
  } else if (!event.shiftKey && focusedItemIndex === focusableChildren.length - 1) {
    focusableChildren[0].focus();
    event.preventDefault();
  }
}
```
--

--
Regarding getting focusable elements, you might want to consider this: https://github.com/HugoGiraudel/focusable-selectors. 
--
"
28479,OPEN,Hugo TODO,docs; help wanted; v5,2020-06-10 15:23:14 +0000 UTC,XhmikosR,In progress,,"1. **make sure our folder structure is the proper one for what we want to achieve. Also see if we can make folder nesting level smaller, maybe by using permalinks or something. For content and static.**
2. can we generate SRI hashes for existent files on the fly? For bootstrap.min.css, bootstrap.*.js,  popper.js/1.14.7/umd/popper.min.js. This would simplify things as we could remove the release-sri script
3. get image width/height with Hugo when possible (examples images, homepage)
4. ~~maybe use Hugo Extended version for docs' CSS?~~ This is now done
5. bep's suggestion:
    > Re.
    > ```
    > {{< partial ""callout-warning-color-assistive-technologies.md"" >}}
    > ```
    > The partial above uses the `partial` func to load, parse and execute templates. This has its limitations and is possibly ineffective.
    > I would recommend that you store your callouts (and other content files you want to include) in a so-called headless bundle -- and load them via `.GetPage`. This way you can use markdown + shortcodes etc.
6. bep's suggestion:
    > Ref. `{{ block ""header"" . }}` in your `single.html` template.
    > Blocks only make sense inside base template(s) (i.e. `baseof.html`), which I cannot see.  I would highly recommend that you restructure your templates to use them. It removes some repetition.
7. Fix https://github.com/twbs/bootstrap/blob/6335fbe224f28d2ce65c628756a84113ea65643f/site/layouts/_default/docs.html#L27
8. Add a body class like `layout-{{layout}} page-{{kind}}-{{title}}{{ with .Params.body_class }} {{ . }}{{ end }}`",,,XhmikosR,"
--
@bep: can you give me an example how to get the SRI hashes https://github.com/twbs/bootstrap/blob/master/config.yml#L49?

The files do exist locally, we just use the cdn link for the doc snippets.

Also, is there any way to get a sha384 hash instead of sha256? I know that 256 should be enough but that's what  we've been using from day 1 and also we suggest on srihash.org, BootstrapCDN etc.

Thanks :)
--

--
All right, I'll try again based on the docs alone.

Have you thought about exposing sha384 too, though? I can make an issue upstream if you want.
--

--
Unfortunately, I can't make it work, like the previous time I tried. Maybe I'm doing it wrong or it just can't work with our setup.

```html
{{ $style := resources.Get ""docs/4.3/dist/css/bootstrap.css"" | resources.Fingerprint }}
{{ $secureCss := $style | resources.Fingerprint ""sha256"" }}
<link href=""{{ $secureCss.Permalink }}"" integrity=""{{ $secureCss.Data.Integrity }}"" rel=""stylesheet"">
```

Maybe someone else has a solution, we'll see.
--

--
@budparr: please do :)

The path to that file is relative to the `/static` dir; unfortunately since we can't copy our root dist folder where we need to with Hugo, we need to do this in a manual step.

So, if you do `npm run docs-serve` you will get the directory structure with the dist folder copied in `/static/docs/4.3/dist/`.

Thanks in advance for any help!
--

--
@budparr: thanks for looking into this. Unfortunately, I cannot change the assetDir to that. We have our other assets in `site/static/`.

If I could specify the output folder for the `assetDir` values, I could then just include the dist folder too. But this isn't supported.

EDIT:
Actually I think I misunderstood what you said. Let me try your suggestion rn.

EDIT2:
Alright, this works but 1) the paths are wrong; it's now `/css/` which is not what we need it to be (`/docs/4.3/dist`, and 2) we don't need Hugo to actually touch these files, we just want to get their SRI without changing the output folder or the files. Maybe that's not possible?
--

--
@budparr: no progress :/

@bep I just gave this a go and it works, sort of :)

Basically I just changed the dir we copy the dist folder to `site/assets` and then I manipulate the dist files as usual.

1. This works, but we are missing the `.map` files and generally any file we don't reference in the templates.
2. traditionally we use sha384 hashes everywhere, BootstrapCDN, srihash.org etc. Could this be exposed by Hugo assuming we make this to work?
3. If we go with this approach, it would make sense to use the fingerprint values everywhere instead of us computing them and outputting them in config.yml. So maybe the headless bundle approach is indeed more appropriate here.

Not sure which solution is the best, this or the headless bundle approach, that's something you guys might be able to answer :)

Here's my current WIP branch https://github.com/twbs/bootstrap/compare/master-xmr-hugo

I'm gonna try the headless bundle approach next.
--

--
It seems I'm having trouble creating the headless bundle, could be the content/layouts organization again.

@budparr: could you try my branch and then see if you can make the headless bundle work, please?

Thanks in advance!
--

--
Yup, no pressure :)
--

--
@budparr @regisphilibert maybe one of you guys could help us out with tweking the layouts/partials? :)
--

--
@budparr I have a TODO list in my OP https://github.com/twbs/bootstrap/issues/28479#issue-420625161

The layouts issue is a big one and I couldn't fix it either. But if we could solve any of the above, it would help us a lot :) Also, since many people might use our docs for learning purposes, I want us to make sure we do things the right way.
--

--
Thank you guys, I really appreciate it!
--

--
I added one more TODO:

8. Add a body class like `layout-{{layout}} page-{{kind}}-{{title}}{{ with .Params.body_class }} {{ . }}{{ end }}`

--

--
@regisphilibert thanks for the thorough reply and I'm so sorry for the late reply!

> ### On 1.
> 
> Yes, you directory structure can be completely independent of your URL structure. It's hard for me to guess what your ideal content directory structure would be (though I suppose losing `4.3` could help of replacing it by `current` if the project must build serveral version), but if you provide me with a directory structure I could rearange the files accordingly while maintaining current URL structure.

We'd like to keep the version in the built files, but we don't mind dropping it from the repo. The opposite, dropping the version from the source folders would simplify things a lot, because we wouldn't need to `git mv` the folders every time we change the major/minor version. It's something I've been trying to do but without full success.


> On 2.

I guess it's OK to drop this for now. We'll just keep running run the script we have before a release which updates the SRI hashes in config.yml and we commit the changes. We can of course revisit this later because it would simplify our release process :)

> ### On 3.
> 
> Same as above, Hugo is capable of retrieving the width and height of a given image only if given file is part of the assets directory or a Page Bundle (being a page resource.

Currently we have the images in the static folder because we don't process them, but it's low priority so let's leave this for now :)

> On 4/5.

Your solution does seem the proper one, I don't have anything to say apart from feel free to make a PR when you have time :)

>On 7.

Your first suggestion seems the simplest one at this point. I didn't use Hugo's menu system because of the limitation of having to specifying everything in the frontmatter; having the menu in one place is pretty handy.

> ### On 8.
> 
> No problem, will be easier once 6. is implemented though.

Sounds good.


---

To sum it up: we are now preparing to release 5.0.0-alpha1, hopefully in a week or so. I'm trying to see what's left. If we could sort the layouts/folder hierarchy/docs version removal/ the other should be easier to tackle.

No pressure, I really appreciate all the help you five us! And if it wasn't for @bep's work, we wouldn't be able to make the switch in the first place :)

Now we just need to dot the i's and cross the t's and all this work will be live soon :)

PS. You decide what issue to tackle first and just CC me on any PRs you make
PPS. After we soft out some of the issues I have here, I will close this issue and open separate issues so that it's easier and cleaner to track things

**EDIT**: forgot to mention the other thing that I'd like to finish is #29283. It works, but it needs some kind of error checking.
--
",bep,"
--
@XhmikosR have you looked in the documentation? Note that I'm very busy at the moment (also with Hugo), so I would appreciate if you could take general Hugo questions either with 1) the docs or 2) the forum

It is sha256 or sha512 (or md5).

--

--
```bash
{{ $js := resources.Get ""/docs/4.3/dist/bootstrap.js"" }}
{{ $fingerprinted := $js | fingerprint }}

{{ $fingerprinted.Data.Integrity }} // The SRI string
{{ $js.RelPermalink }} // The original path, e.g. /docs/4.3/dist/bootstrap.js
{{ $fingerprinted.RelPermalink }} //  /docs/4.3/dist/bootstrap.xxxxSHA256xxxx.js
```

Note that for the above to work, these must live inside `assetDir`.

Another approach that may work better for you is to create a ""headless bundle"" for these (which would live inside the `contentDir`).

You would then do something ala:

```bash
{{ $bundle := .Site.GetPage ""myassets"" }}
{{ $js := $bundle.Resources.GetMatch ""**/4.3/**/bootstrap.js"" }}
{{ $fingerprinted := $js | fingerprint }}
{{ $fingerprinted.Data.Integrity }} // The SRI string
{{ $js.RelPermalink }} // The original path, e.g. /docs/4.3/dist/bootstrap.js
{{ $fingerprinted.RelPermalink }} //  /docs/4.3/dist/bootstrap.xxxxSHA256xxxx.js
```


--

--
Re sha384 -- see https://github.com/gohugoio/hugo/issues/5815 -- I will get that in the (big!) release on Monday.

With map files etc. in play, I think a ""regular leaf bundle"" will do the work, as map etc. files will just be copied to destination.
--
",budparr,"
--
Curious why you're running `Fingerprint` twice? Also, I think `resources.Get` is looking for your CSS file [relative](https://gohugo.io/hugo-pipes/introduction/#asset-directory) to the assets directory, so you may need to change your path. I'm happy to pull the repo down and fool around with it if that would be helpful.
--

--
@XhmikosR As I mentioned earlier, Hugo is looking for those files in the assets directory, yet you're pushing them to the static folder where Hugo can't read them. You're not using Hugo to process your CSS, so you'll have to read the files from that directory. 

1) Change the assets directory setting in the config to match your dist folder (it does not appear you are otherwise using it). 

     So change `assetDir: ""site/assets""` to `assetDir: ""dist""`

2) Then, read the dist directory, looping through them to apply the `Fingerprint` function:

```
{{/*  Identify the directory */}}
  {{ $path := ""./dist/css"" }}
  {{ $files := readDir $path }}
{{/*  Range through the files */}}
  {{ range $files }}
    {{/*  You may not need to do this, but the conditional allows you to determine what you want to apss through */}}
    {{ if in .Name ""bootstrap"" }}  
    {{/* Do your work on each file  */}}
      {{ $file := resources.Get (printf ""css/%s"" .Name) | resources.Fingerprint }}          
      <link href=""{{ $file.Permalink | relURL }}"" rel=""stylesheet"" integrity=""{{ $file.Data.Integrity }}"" crossorigin=""anonymous"">      
    {{ end }}
  {{ end }}
```
I did a very quick test on this on your repo, but you may want to adjust to your needs.








--

--
Hey, @XhmikosR I only saw your first edit. Did you make any progress on this?
--

--
Hey, @XhmikosR I've been out for a conference. Happy to dig into this, though it might take me a couple of days to clear my plate first. Is the branch `master-xmr-hugo`?
--

--
@XhmikosR We're happy to help. I wasn't able to solve the issue above. Is that the issue specifically we can help with, or others? 
--

--
Okay. Well @regisphilibert and I will review and see what we can get done.
--
",regisphilibert,"
--
Hello. I'd love to help you in the persective of checking those ""to dos"". I have a couple of questions:

### On 1.
Yes, you directory structure can be completely independent of your URL structure. It's hard for me to guess what your ideal content directory structure would be (though I suppose losing `4.3` could help of replacing it by `current` if the project must build serveral version), but if you provide me with a directory structure I could rearange the files accordingly while maintaining current URL structure.

### On 2.

Hugo is capable of producing fingerprints on resources only if they're part of the `assets` of the project, meaning living in the `assets` directory which is currently set to `site/assets`. The resource you want fingerprinted happens to be in the static directory. So we cannot have both live in static and assets... 
In order to fingerprint the bootstrap stylesheet, we'd have to move it or mount it as an asset along its brand images.
### On 3.
Same as above, Hugo is capable of retrieving the width and height of a given image only if given file is part of the assets directory or a Page Bundle (being a page resource.

### On 4.
You are currently using a shortcode to load partials from within the content files's markdown. I can see that 23 times out of 24 times this shortcode is used, it is to call of the partial files prefixed `callout-` which only contain markdown. Björn Erik suggestion is for you to actually use proper content files to handle those ""callouts"" and for this move them into the content directory rather the layout directory. They would take the form of a `headless` page bundle, meaning a directory of content files (could be `/content/callouts/` which would not produce any published pages or section.
Then we could introduce a shortcode which fetches such content files and produce their rendered markdown.

#### He is my proposal:

As it seems this behaviour is only used with the callout ""shortcodes"", we improve the `callout` shortcode by adding a second argument  (on top of the ""css class"" one) which would point to this ""content file filename"" under the newly created content directory. 
If second argument is set and we find a matching ""content file"", we print its rendered markup, if not we print the content of the shortcode as it is currenlty used.

#### From:
``` 
{{< callout danger >}}
{{< partial ""callout-danger-async-methods.md"" >}}
{{< /callout >}}
```

#### To:
```
{{< callout danger ""danger-async-methods"" />}}
```

The following on the other hand would remain unchanged:

```
{{< callout info >}}
Note that content should not be larger than the height of the image.
{{< /callout >}}
```

### On 6.
No problem I think.

### On 7. 
Current the url is build from the page title which binds title and url together. 
It seems the logic here uses an array of ""sections"" assigned as Front Matter param to build a side menu. 
There is several better approach:
1. Keep that logic but reference the content file in the array as relative to the current page:
```yaml
sections:
  - title: Form control
    page: form-control
    description: Style textual inputs and textareas with support for multiple states.
  - title: Select
    page: select
    description: Improve browser default select elements with a custom initial appearance.
```
Then in the code we can use `.GetPage` with the items's `.page` value. .to retrieve the page and its `.RelPermalink`.
2. Use Hugo Menu system. The drawback is that each concerned page will need to point to the menu in its own Front Matter.

### On 8.
No problem, will be easier once 6. is implemented though.
--
",,,,
28446,OPEN,Recode popovers as (conceptual) modal dialogs,accessibility; help wanted; v5,2020-05-21 12:34:36 +0000 UTC,patrickhlauke,In progress,,"Currently, popovers https://getbootstrap.com/docs/4.3/components/popovers/ provide a baseline accessible implementation where the content of the popover, when shown, is tied to the trigger via `aria-describedby=""...""`. This works well when popovers are used for their intended purpose - to provide a short notification/tooltip type popover message. However, looking at some of the recent issues here in github all relating to authors complaining about links, forms, etc getting stripped out of their popovers, it's clear that authors are using these beyond their intended purpose, and instead as a way to have a form of disclosure widget that opens a floating menu/dropdown type area with interactive content.

For these sorts of ""povovers"", the current approach is completely unsuitable. `aria-describedby=""...""` will announce the entire content of the popover in one go, as a single long ""blob"" of content. Keyboard focus is not moved to the popover, and as the popovers are generally at the end of the document, this means that a keyboard user can trigger one of these, but then has to navigate through the rest of the document before they reach the interactive controls that the author crammed into the popover - and if they chose to make it a dismissable popup, it likely would disappear again as soon as they move focus themselves off the trigger.

Originally, I thought about simply putting a small notice on the popover documentation page to advise authors not to use these for anything interactive, but obviously this wouldn't stop authors actually doing it, and our recent addition of sanitize code sends the signal that in the end, we're ok with them doing it / making it easy for them.

So, while it would require a complete (breaking) refactor, if we want to keep popovers and allow them to be (mis)used this way, we should recode these to conceptually act like a modal dialog (but without the semi-transparent overlay):

* user activates the popover, focus is moved to the ""popover""
* popover container has a `role=""dialog""`)
* focus is retained /cycled inside the popover
* the underlying page is hidden from assistive technologies using `aria-hidden`
* provide an ""x"" close control, and also react to ""ESC"" - focus is then moved back to the trigger element

For authors that do want to retain the current way popovers work for short, tooltip-like, non-inteactive notices only, maybe https://getbootstrap.com/docs/4.3/components/popovers/ can be extended to provide this as an additional option/style. And popovers can be treated as a visually different type of modal (kind of an ""in-between"" somewhere halfway between a tooltip and a full modal).

xref https://github.com/twbs/bootstrap/issues/18618 / https://github.com/twbs/bootstrap/issues/28411/ https://github.com/twbs/bootstrap/issues/24640 / https://github.com/twbs/bootstrap/issues/24290",,,tmorehouse,"
--
Having an option for popovers that put them in `dialog` mode might be handy...  basically borrowing from modal's enforce focus routines, allowing <kbd>ESC</kbd> and an optional <code>&times;</code> button for closing in the title/header would be nice.
--

--
Maybe, depending on the type of trigger used, the role could change?  hover or focus would make it a jumbo-tooltip, and click would turn it into a mini-modal?

Unless maybe tooltips were slightly revamped to optionally show a title, and maybe have an additional flag to style them popover like.  and then popover becomes the ""positioned"" min-modal.

The other option is to create a third component: tooltip, popover, popover-dialog, each inheriting from the previous.
--

--
I was thinking of making a ""popdown"" component, based on dropdown, which would be triggered on an element (ie. input, button, etc) on focus, click, etc. it would be a wrapper component around the element, but would make the ""popdown"" content next in the tab sequence. (and the popdown could pop up, left, right, like dropdowns).

It would have similar issues as dropdowns, but I think it would be manageable.

--
",herbalite,"
--
@tmorehouse 
Interesting. Just yesterday I searched for a replacement for a confirmation dialog and stumbled upon this library

http://bootstrap-confirmation.js.org/
--
",patrickhlauke,"
--
additionally, i'd drop the ability to have only `hover` as the trigger, as that immediately makes popovers not work for keyboard/assistive tech users. popovers should just show on `click` only (as even just doing it on `focus hover` would cause accessibility issues for keyboard users, as they'd then be dragged into the modal popover every time they just cycle through the page)
--

--
having it show up on hover also brings this issue with it https://github.com/twbs/bootstrap/issues/28411 ... so i'm tending to lean towards simply not allowing it to just show on hover altogether (this is not unprecedented...our dropdowns for instance also don't show on hover, despite many requests; we don't even have live examples of popovers that trigger on hover in our docs; and i'm too lazy to test now, but my guess is popovers that just show on hover also don't work/work badly on touch/mobile devices).

and yes, tooltips would also be affected by https://github.com/twbs/bootstrap/issues/28411 but because they're aimed at only showing very short snappy content by design, it's less of a concern (though of course still an actual failure that we should probably address at some point)
--

--
@mdo would love your take on this general discussion btw
--
",loksun,"
--
To move the focus to the popover once it's activated, I added a data-container=""#id_of_popover_button"" in my button and it seems to work well.

However, if I have links inside my data-content and I focus on them using <tab>, NVDA and JAWS will read the entire popover.
--
",kerryj89,"
--
> having it show up on hover also brings this issue with it #28411 ... so i'm tending to lean towards simply not allowing it to just show on hover altogether (this is not unprecedented...our dropdowns for instance also don't show on hover, despite many requests; we don't even have live examples of popovers that trigger on hover in our docs; and i'm too lazy to test now, but my guess is popovers that just show on hover also don't work/work badly on touch/mobile devices).
> 
> and yes, tooltips would also be affected by #28411 but because they're aimed at only showing very short snappy content by design, it's less of a concern (though of course still an actual failure that we should probably address at some point)

Does setting a delay value on tooltips only delay it visually or does it hide it from screen readers, too?  I would still like to keep hover-ability like Wikipedia.

https://en.wikipedia.org/wiki/Template:Hover_title
--
",pglejzer,"
--
do you have any plan to implement this with version 5? @mdo 
--
"
28414,OPEN,Validation feedback/tooltips lack association with their form control,accessibility; backport-to-v4; js; v5,2020-12-16 22:34:40 +0000 UTC,patrickhlauke,In progress,,"the feedback and tooltip containers need to be programmatically associated with their respective form controls, e.g. using `aria-describedby=""...""`, e.g.

```html
<label for=""validationTooltip03"">City</label>
<input type=""text"" class=""form-control"" id=""validationTooltip03"" ... required>
<div class=""invalid-tooltip"">
   Please provide a valid city.
</div>
```

to

```html
<label for=""validationTooltip03"">City</label>
<input type=""text"" class=""form-control"" id=""validationTooltip03"" aria-descriebedby=""validationTooltip03-tip"" ... required>
<div class=""invalid-tooltip"" id=""validationTooltip03-tip"">
   Please provide a valid city.
</div>
```
",,,danielnixon,"
--
Interesting to note that this is actually a regression from Bootstrap 3 🤔 

https://getbootstrap.com/docs/3.4/css/#forms-help-text

>  Help text should be explicitly associated with the form control it relates to using the aria-describedby attribute. This will ensure that assistive technologies – such as screen readers – will announce this help text when the user focuses or enters the control.

--
",patrickhlauke,"
--
sure. lots of moving parts to bootstrap, so things often fall between the cracks on large refactors/reworkings.
--

--
this issue is complicated by the fact that, despite `display:none`, certain browser/AT combinations will still announce the additional validation text referenced via `aria-describedby`. so these need to be added dynamically via JS, not as a pure CSS solution. thoughts @mdo ? (i guess as our validation currently isn't pure pure CSS anyway as i think we use script to add `was-validated`, this is less of a problem though)
--

--
@mdo i think at this stage we probably can't rely on pure CSS to have both the ""just hang off the `:valid` / `:invalid`"" AND avoiding that validation tooltips get announced right away if we were properly using `aria-describedby`, as the `display:none` won't prevent them from being announced. feels like we may need an actual plugin/JavaScript behavior for form validations...thoughts? and if so, any chance of a pointer on how to go about this?
--

--
alternatively i guess we *could* cram all the extra logic into that example JS snippet we provide, but that feels very dirty, expecting users to manually copy/paste some custom JS in to provide actual core functionality that should be handled directly by BS silently?
--

--
xref https://github.com/twbs/bootstrap/pull/28995 for a first very naive approach
--

--
dropping this here for reference as well https://developer.paciellogroup.com/blog/2015/05/short-note-on-aria-labelledby-and-aria-describedby/
--

--
sorry, late reply to say yes, it's still a problem we need to tackle...
--
",mdo,"
--
#31677 aims to address this in our form validation pages. Slating for alpha 3!
--
",XhmikosR,"
--
@patrickhlauke @mdo: is this still valid for v5?
--
",,,,
28411,OPEN,Tooltip / Popover: WCAG 2.1 - Content should stay visible on hover,accessibility,2019-12-03 14:26:39 +0000 UTC,sprungmarker,In progress,,"For WCAG 2.1 - 1.4.13 Content on Hover or Focus
https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus.html

Content area for tooltips und popover should stay visible on hover i.e. with a mouse.
Especially for low vision users this is important.

Example WAI: https://codepen.io/Moiety/pen/LaPvWy
",,,patrickhlauke,"
--
and it should be dismissible without needing to move the mouse/pointer 
--
",sprungmarker,"
--
@patrickhlauke yes i.e. ESC
--
",viktomas,"
--
This would be also very useful when having buttons or links in the popover content.

Edit: We've used Popover to implement context menu in Gitter and the GIF on the following merge request https://gitlab.com/gitlab-org/gitter/webapp/merge_requests/1669 shows how staying visible on hover would benefit our use case
--
",,,,,,
28356,OPEN,nav-tabs loose .active state on scrollspy,confirmed; js; v4,2019-04-12 15:48:33 +0000 UTC,burdyga,Opened,,"If I use scrollspy on body and nav-tabs in same place my first nav tab loose active state on start scrolling.

– Mac OS X 10.14.3
– Opera 58.0.3135.68
– https://codepen.io/brv/pen/PLowRy
",,,angelaCTO,"
--
Encountering the same issue, but noticed issue running on Opera as well as Firefox
--
",,,,,,,,,,
28343,OPEN,Dropdown shown and hidden event aren't waiting for CSS Transition,docs,2019-02-27 14:57:58 +0000 UTC,StabbarN,In progress,,"Issue https://github.com/twbs/bootstrap/issues/22760 can be reproduced in v4.3.1. Both shown and hidden event aren't waiting for CSS transition. 

We measured the time when callback `show.bs.dropdown` and `shown.bs.dropdown` were executed and they differed about 2-3 ms, which is less than expected.

### More info about the shown event
See docs https://getbootstrap.com/docs/4.3/components/dropdowns/#events
> shown.bs.dropdown This event is fired when the dropdown has been made visible to the user (**will wait for CSS transitions, to complete**).

However, the event `shown.bs.dropdown` isn't waiting for CSS transitions to complete. See code
https://github.com/twbs/bootstrap/blob/master/js/src/dropdown.js#L208-L216
```
    const showEvent = EventHandler.trigger(parent, Event.SHOW, relatedTarget)

    if (showEvent.defaultPrevented) {
      return
    }

    Manipulator.toggleClass(this._menu, ClassName.SHOW)
    Manipulator.toggleClass(parent, ClassName.SHOW)
    EventHandler.trigger(parent, Event.SHOWN, relatedTarget)
```

I would expect a call to `Util.emulateTransitionEnd(element, transitionDuration)` or similar after trigger `Event.SHOW` and before trigger `Event.SHOWN`.",,,Johann,"
--
Hi @StabbarN,

I don't think there is a real transition during the process to show a Dropdown so that's why it's pretty fast, we just add `.show` class which do a `display: block` that's all

So for me it's a mistake in our docs 🤔 

/CC @twbs/css-review 
--
",StabbarN,"
--
@Johann-S That makes sense. `Event.SHOWN` is in that case to no avail. We've added animations and I assumed that BS somehow waited for it to finish, but I was fooled or naive :).
--
",,,,,,,,
28159,OPEN,Accordion parent is not set correctly when setting with Javascript,docs; help wanted; v4,2021-01-10 02:33:08 +0000 UTC,Rudedog9d,In progress,,"It appears that setting the parent of an accordion with Javascript (as described in [the docs](https://getbootstrap.com/docs/4.0/components/collapse/#via-javascript)) does not set the `data-parent` attribute on the DOM element. This causes the element to not collapse when another element is selected.

I suspect the problem is related to [collapse.js#132](https://github.com/twbs/bootstrap/blob/9e4e94747bd698f4f61d48ed54c9c6d4d199bd32/js/src/collapse.js#L132)

### Steps to reproduce

- Take the [example from the docs](https://getbootstrap.com/docs/4.0/components/collapse) and convert the first card to be initialized with JS instead of HTML.
  - JS FIDDLE: https://jsfiddle.net/4ykrjwgo/3/
- Open Card 2
- Open Card 1
  - Observe Card 2 collapses as expected
- Open Card 2
  - Observe Card 1 **does not** collapse as expected",,,Rudedog9d,"
--
This may be related to #23767
--

--
I'm still unclear what the `parent` option within the JS constructor is for. It might be useful (for myself and others) to provide an example of how `$('.collapse').collapse({parent: ...})` can be used in the docs
--
",Johann,"
--
This condition is needed because we allow nested accordion, without that we can't find which collapse element is related to which accordion.

So you have to set the `data-parent` on your collapse element
--
",KushalBhanot,"
--
Hey! I would like to work on this issue. Can someone please guide me?
--
",mdo,"
--
I think we need to update the Collapse docs to remove the mention of explicitly tying `parent` to the `.card` class now that we have Accordion in v5: https://getbootstrap.com/docs/5.0/components/accordion/.

Is there something else to do here beyond that?
--
",,,,
28132,OPEN,List group should support keyboard accessibility just like dropdown,accessibility; feature; help wanted; js; v4,2021-01-12 04:37:03 +0000 UTC,zadam,Opened,,"Dropdown can be controlled with keyboard (up-down arrows can activate items). 

List group can be used for similar use cases and being able to use keyboard to activate a list item would be very useful.",,,mdo,"
--
Building on this issue, it'd be awesome if we extrapolated our keyboard navigation from the dropdown menu items and made it applicable to any list of items. GitHub has some awesome keyboard navigation for lists—could be nice to support something like this. Writing down some quick ideas:

- Probably a completely JS-only component that supports keyboard navigation that sets an active and focus styling? With other components extending and supporting as needed?
- Maybe a `data-list` for the parent?
- `data-list-active` or something similar to indicate any child element (independent of markup?) has active focus?
- Customization of keyboard keys used to move up and down (up/down arrows, j/k keys, etc)?

Let me know what you think @twbs/js-review.
--
",,,,,,,,,,
28131,OPEN,Bootstrap Web Components,feature,2020-12-11 19:06:11 +0000 UTC,thepassle,Opened,,"Hi,

I was wondering if there have been any discussions on releasing a set of bootstrap web components; they seem to be the perfect use case for something like bootstrap.

[Web Components](https://developer.mozilla.org/en-US/docs/Web/Web_Components) are a set of standards that allows developers to make reusable, encapsulated and modular components using standards based APIs. More so, web components are [reusable](https://custom-elements-everywhere.com/) in almost any framework.

With the recent anouncement that [support for IE11 will be dropped](https://twitter.com/getbootstrap/status/1080553927181983744), polyfills won't even be necessary; it seems like the perfect time.

Instead of applying classes, bootstrap web components could be usable like so:

```html
<bootstrap-button></bootstrap-button>
<bootstrap-button raised></bootstrap-button>
<bootstrap-button raised warning></bootstrap-button>
<bootstrap-button raised warning large></bootstrap-button>
```
etc.

There is already a community effort by @morbidick :
https://github.com/morbidick/bootstrap-webcomponents

Some examples of existing web component catalogs are:
- [Vaadin](https://vaadin.com/components)'s components:
<img width=""993"" alt=""screen shot 2019-01-28 at 22 15 28"" src=""https://user-images.githubusercontent.com/17054057/51866907-7e001f00-234a-11e9-8c38-419ae045f9f7.png"">

- [Polymer's paper-elements](https://www.webcomponents.org/collection/polymerelements/paper-elements):
<img width=""494"" alt=""screen shot 2019-01-28 at 22 15 46"" src=""https://user-images.githubusercontent.com/17054057/51866904-7b052e80-234a-11e9-88d3-4d118e8b50dd.png"">

If you're interested in learning more, you can find a ton of information at:
- [webcomponents-the-right-way](https://github.com/mateusortiz/webcomponents-the-right-way) maintained by @web-padawan

Recommendations/tooling:
- [open-wc](https://open-wc.org)

As well as these blogs:
- [Let's Build Web Components!](https://dev.to/bennypowers/lets-build-web-components-part-1-the-standards-3e85) by @bennypowers
- [Web Components: from Zero to Hero](https://dev.to/thepassle/web-components-from-zero-to-hero-4n4m) by yours truly.",,,dvmuccillo,"
--
I was wondering about it too, would be awesome to have this.

But based on the browsers that Bootstrap 5 will likely support and the need to polyfill things (a lot?),  if things go on this way it'll be on a v6 realese IMO.

Also there is the main focus of trying to solve things with css whenever it's possible, so i'm curious on how things would go.
--
",web,"
--
Thanks for starting the discussion. I recall lots of tweets of this kind under Bootstrap v5 announcements. Dropping IE11 is a good opportunity to introduce web components, too. 

It has its drawbacks and edge cases, though (simple case: `:slotted` CSS selector is quite limited, e.g. for styling links in alerts it will require to make them direct children). 
--

--
For someone interested: I have started working on a small library (5 components at the moment) which in particular provides the Web Components with CSS inspired by Bootstrap 4.

I have changed a lot, in order to use custom CSS properties for theme colors and enable automatic contrast adjustments, using `hsl()` and `calc()`. So that's quite a significant rewrite.

Demo: https://web-padawan.github.io/aybolit/
Source: https://github.com/web-padawan/aybolit/tree/master/packages/bootstrap
--
",stramel,"
--
I have wanted to throw together a bunch of bootstrap webcomponents for the past 3 years. I finally decided to play around with it a bit this last week. 

This is roughly what I came up with. I'm not sure how much flexibility the BS team is looking for on their components. I focused on maintaining a very similar API as what currently exists. (Haven't fully fleshed out the CSS or all the variants CSS vars)

https://stackblitz.com/edit/bs-alert?file=my-element.ts



--
",Johann,"
--
I agree WebComponents can suits very well to Bootstrap, but our v5 is a huge move for us (due to the removal of jQuery) so we won't begin that in our v5, but maybe in a v6 that's possible
--

--
Hi @cyberhck, about v5 you can find more information here: https://github.com/twbs/bootstrap/projects/11

Currently with jQuery all of our components can be initialized separately, and it'll be the case in v5 too, since Bootstrap use data-api with event delegation we'll continue to provide to auto initialization for some of our components
--
",DanL,"
--
WebComponents would make Bootstrap super compelling for me; I've always avoided it because of the fact that you need to opt-in for the entire page, rather than picking-and-choosing what's useful.
--
",cvrebert,"
--
Old duplicates: #18015, #14200
--
"
28121,OPEN,Events on .dropdown-toggle are only triggered once,js; v4,2020-05-07 07:20:08 +0000 UTC,grosser,Opened,,"- Operating system and version (macOS)
- Browser and version (Chrome)
- reproduction with latest https://jsbin.com/pidipewuni/edit?html,js,output
 - workaround: use `mouseup`


```js
$(document).on('click', 'a', function(){
  alert(""CLICK"")
})
```

This should trigger on every click, but when it's on a .dropdown-toggle it only works once.
I suspect there is some code in bootstrap that unbinds all events by mistake.",,,Johann,"
--
That's true we call `.stopPropagation()` but currently I don't know why 🤔 
--
",set,"
--
Has there been any investigation as to know why the event propagation is stopped? I'm trying to rely on the button click event to perform some actions too and it only works the first time the button is clicked, which is annoying as now I need to register event handlers for the `click` event and `show.bs.dropdown` and `hide.bs.dropdown` instead of only the first one.
--
",mattwebdev,"
--
this still seems to be an issue. 
i cant for the life of me figure out why its a good idea to stop Propagation in this.

.on(Event$4.CLICK_DATA_API, Selector$4.FORM_CHILD, function(e) {
      e.stopPropagation();
});
--
",,,,,,
28101,OPEN,Padding problem when there is a forced scrollbar,css; v4,2019-08-01 09:06:24 +0000 UTC,Michael-Ziluck,Opened,,"There is an issue with the way modals add margins to account for the scroll bar. This issue occurs in the most recent releases of both Bootstrap 3 and 4.

When a browser is forced to display the scrollbar when the vertical content does not require the scrollbar, a padding-right is added to the body when it is not necessary.

Two jsfiddle examples are below that show the problem.

Bootstrap 4:
https://jsfiddle.net/ziluckmichael/fh71sgo0/

Bootstrap 3:
https://jsfiddle.net/ziluckmichael/nvz0ybux/

As you can see it adds padding-right to the browser when it is not required. Both examples use the default code almost exactly as it is off of the demo page.

Browsers Always Affected:
- Microsoft Edge 40.15063.674.0
- Google Chrome 71.0.3578.98 (Official Build) (64-bit)
- Firefox 64.0.2

Browsers Sometimes Affected:
- Internet Explorer 11.1508.15063.0

For IE 11, the issue does not occur on my test/demo of the problem, but it does occur on the actual production website where I discovered the issue originally. It appears this is because IE overlays the scrollbar and has it slowly disappear, while every other browser has it permanently on the screen.",,,pcodedviral,"
--
hello @ZiluckMichael  

 plz remove below given css

:root {
  overflow-y: scroll;
}

--
",Michael,"
--
The reason for the ticket is I need to have that bit of CSS for other purposes within my application. My website requires the scrollbar to be visible even when the vertical content does not require it. Right now, Bootstrap does not account for this.
--

--
I managed to fix the issue, all I had to do was change the "":root"" selector to ""body"" instead. Regardless, this is still a bug that could be fixed so I thought it was helpful to open an issue.
--
",Yarden84,"
--
Hi @ZiluckMichael . 
I tried adding:

html{
    width: 100vw;
}

and it seems to work with your problem.
the solution is taken from one of the anwers from here - https://stackoverflow.com/questions/18548465/prevent-scroll-bar-from-adding-up-to-the-width-of-page-on-chrome  
--
",Lausselloic,"
--
Hello, I just face the same problem, and looks like there's a padding issue all the time event if the scrollbar isn't forced but display due to content overflow.
The padding error is visible on this codepen : https://codepen.io/anon/pen/EMxYXQ

I had try to use the fix with the 100vw on html element but it makes an horizontal scroll apear, and need to add an overflow-x:hidden on the body which is very bad for accessibility : https://codepen.io/anon/pen/NJKZwX 

Can't find in git history why that padding was added? maybe for IE8 or older non-supported browser in v4?
--

--
I've made some tests, and it looks like `_adjustdialog()` is useless.

1. Tests on IE11, FF ESR, Chrome latest show there's no need of padding-right on modal element when there's a scrollbar on body
2. paddingleft when modal overflow, but not the body is never fired

```
  _adjustDialog() {
    const isModalOverflowing =
      this._element.scrollHeight > document.documentElement.clientHeight
    if (!this._isBodyOverflowing && isModalOverflowing) {
      // we never pass here even if modal is higher than body, and for sure it's useless
      // this._element.style.paddingLeft = `${this._scrollbarWidth}px`
    }

    if (this._isBodyOverflowing && !isModalOverflowing) {
      // in case where it's the body that make an overflow there's no need to put a padding-right on the modal itself
      // this._element.style.paddingRight = `${this._scrollbarWidth}px`
    }
  }
```

@fat I think there's a good reason for all that code you write, but I can't find why in git history, any idea to refresh our memory?

Would you like a PR to try it in action and compare the comportement before and after?
--
",AndysonDK,"
--
> I managed to fix the issue, all I had to do was change the "":root"" selector to ""body"" instead. Regardless, this is still a bug that could be fixed so I thought it was helpful to open an issue.

@ZiluckMichael How did you change the .root selector to body?
--
",,
28049,OPEN,Extensibility docs,docs; help wanted,2021-01-13 20:30:27 +0000 UTC,drauch,Opened,,"The current docs on extensibility are not very comprehensive.

I currently want to write a new variant for a button and I'm finding it necessary to do a LOT of code reading to understand enough to answer the following questions:

* Is there any guidance on extensions in general?
* Which mixins does Boostrap have?
* Which variables should you use and when?
* Which CSS properties must/should/could/must not be set by a new variant.

Questions like these seem to be completely unanswered by the docs material.

I'd appreciate it very much if there would be more investment into the extensibility docs. Compared to the very good docs on components or the grid system it really lacks quite important information. I know that this is no ""up for grabs"" kind of issue, but my understanding is that Bootstrap should be an extensible platform to build upon. I can't see that happening in a high-quality and Bootstrap-intended-way-of-doing-things-way without more documentation.",,,sts,"
--
I think adding more relevant variables / mixins to each of the component docs is a good idea so we know what variables we can use. Right now I find myself having to constantly look at the variables Github file, or Google for relevant mixins to use.

I hope that with 4.3 these are at least partially added, with more appearing in v5
--
",rachelmflowers,"
--
I also agree that adding the available variables to each component's documentation would help greatly to know what can be changed and what the defaults are. As well as mixins used.

I also find myself scrolling through the variables file trying to figure out what can be changed, and many of my other colleagues forgo this (since they find it a hassle) and just write their own styles to make the changes instead of modifying the variables and rebuilding the stylesheet.

I really like how Bulma does this with their variables.
https://bulma.io/documentation/components/card/#variables
--
",mdo,"
--
Provided variables would be rad actually. Curious if we can hook that up with Hugo and how best we'd accomplish it. Let me know if you have any thoughts @MartijnCuppens or @XhmikosR.
--

--
> - Which mixins does Boostrap have?
> - Which variables should you use and when?

Sass documentation (variables, mixins, maps, and loops) is coming in #32747, so that should be covered :). Are we missing anything there?

> - Is there any guidance on extensions in general?
> - Which CSS properties must/should/could/must not be set by a new variant.

Not 100% sure what folks are thinking here. Is this covered by our [Approach page](https://getbootstrap.com/docs/5.0/extend/approach/)? Perhaps there's more fidelity and detail we should be adding?

Thinking about extending in general, some other ideas come to mind. Would something like this work for an additional Extend page?

```md
- Community extensions are highly encouraged
- Common ways to extend
  - Utilities API
  - Custom builds
  - JS frameworks
  - Additional components
  - Snippets and themes
- Common approaches
  - Override CSS
  - Use Sass to modify, remove, or add
  - Custom builds of JS with Webpack, Parcel, and more
```

--
",XhmikosR,"
--
The mixins branch is something I plan to migrate eventually to Hugo. Not
sure if this will cover the request but it should be better than nothing.

On Tue, Aug 13, 2019, 22:07 Mark Otto <notifications@github.com> wrote:

> Provided variables would be rad actually. Curious if we can hook that up
> with Hugo and how best we'd accomplish it. Let me know if you have any
> thoughts @MartijnCuppens <https://github.com/MartijnCuppens> or @XhmikosR
> <https://github.com/XhmikosR>.
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/twbs/bootstrap/issues/28049?email_source=notifications&email_token=AACVLNLENWXSI6X7TKXAYT3QEMA6RA5CNFSM4GPZVTS2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD4GU3UQ#issuecomment-520965586>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AACVLNKSFQDOGBAQRCMQMZDQEMA6RANCNFSM4GPZVTSQ>
> .
>

--
",,,,
28048,OPEN,Popover's 'content' option doesn't work if i use 'selector' option and 'trigger' option equal 'manual',feature; js; v4,2019-01-16 16:51:41 +0000 UTC,boikoeugene,In progress,,"**Browser**: Chrome 71.0.3578.98;

I use dynamical content with popovers and i came across a problem.
When you init popover using delegating  and set **trigger** option like **manual**, **content** option doesn't work.
You can see it on the link - https://jsfiddle.net/zac43y8e/ .",,,Johann,"
--
I forked your JSFiddle and it seems it works: https://jsfiddle.net/b873yxs5/

Maybe I misunderstood what you want to do 🤔 
You made a mistake here: `$(this).popover('toogle');` it's not `toogle` it's `toggle`
--

--
Hmm ok I see, I'll take a deeper look in that 👍 

Edit:

Ok so after worked a bit on that, currently we cannot use dynamic content (if `content` option is a function) with a selector, because everything is stored in the parents.

So we have to figure how to use that content function for childs.
--
",boikoeugene,"
--
> You make a mistake here: `$(this).popover('toogle');` it's not `toogle` it's `toggle`

Yes. I've fixed it.
But my case still doesn't work. 
I've looked at your example and why do you use parent element like `$('#bad-wrapper').popover('show')` instead of `$('.popover-trigger').popover('show')`? and if you are right where is my title? :)
I want to get the same result like first example with **click** value of trigger option. How can i do this with **manual** value?

--

--
> So we have to figure how to use that content function for childs.

I forked your example https://jsfiddle.net/quy7k8d3/ and what i want to say..
It looks as if you save popover's settings in a child but dynamic content function in a parent, because if you click '**toggle child**' you will get the popover with settings and title (attribute of a child) but without content. 
On the other hand, if you click '**show parent**' you will get the popover with content without settings and title.
I guess, that you should also save function in a child element.

And at the same time - this case works if you choice any `trigger` option is different from `manual` - it's very strange. (see first '**works very-good**' button)

At last, i don't understand, why toggle a popover doesn't work with the help of `on` delegation ('**works very bad**' button), although '**toggle child**' button works fine or almost fine:
```
$('#bad-wrapper').on('click', '.popover-trigger', function () {
    $(this).popover('toggle');
});
```
--
",,,,,,,,
27980,OPEN,The keyboard key under the modal box is not valid,js; v4,2019-01-05 04:54:44 +0000 UTC,linjialiang,In progress,,"> The keyboard key under the modal box is not valid

## I can use custom methods to control the keyboard

```js
$('#button-selector').on('click', function() {
    $('#modal-selector').modal('toggle');
    $('body').keydown(function(e) {
        if (e.which == 27) {
            $('#modal-selector').modal('toggle');
        }
    });
});
```

Bug reports must include:

- Operating system and version (Windows, macOS, Android, iOS, Win10 Mobile)
  > `windows 10`

- Browser and version (Chrome, Firefox, Safari, IE, MS Edge, Opera 15+, Android Browser)
  > `Firefox` `Chrome`

- [Reduced test case](https://css-tricks.com/reduced-test-cases/) and suggested fix using [CodePen](https://codepen.io/) or [JS Bin](https://jsbin.com/)
",,,linjialiang,"
--
bootstrap v4.2.1
--
",,,,,,,,,,
27955,OPEN,Support 'gpuAcceleration' option override for Popper.js,js; v4,2019-03-02 15:31:43 +0000 UTC,mfursov,In progress,,"Popper.js uses translate3d call to position blocks by default (gpuAcceleration=true).
If gpuAcceleration is set to false Popper.js will use top/bottom/left/right properties.

The problem with a translate3d call is that it produces blurry fonts if browser's (Chrome 70) zoom level is not 100%. 

Reason of blurring: scaling may result to decimal points in a block offset. For example 101px block with 125% zoom level will have 126.25px width => blurry font in Chrome, but 104px block will result to 130px => not blurry.

The workaround is to override  'gpuAcceleration' option of Popper.js and set it to false.
This option can be set in the constructor of Popper.js, but Bootstrap v4.2.1 hides Popper.js object instantiation and does not allow to adjust it.

Proposal:
Support gpuAcceleration option override in Bootstrap.
This can be done for this option only or using a more general way for any other option of Popper.js. This will be possible if Bootstrap allows providing custom defaults for Popper.js options in some way.

PS.
The workaround I use today: I use a patched Popper.js with 'gpuAcceleration' set to 'false' by default and removed ""will-change"" CSS style (this one may also cause blurring).
",,,Johann,"
--
That's something you can do with:
```js
Popper.Defaults.modifiers.computeStyle.gpuAcceleration = false
```
Only if you do not use our bundle file
--

--
In Bootstrap we don't support [browser zooming](https://getbootstrap.com/docs/4.2/getting-started/browsers-devices/#browser-zooming), but I agree with @FezVrasta we should provide a way to disable `gpuAcceleration`.
--
",FezVrasta,"
--
Hi I'm the author of Popper.js

Unfortunately browsers don't seem to expose any API to retrieve the zoom level of the page, so it's impossible to deploy a proper fix for this quirk.

I'm open to PRs that try to alleviate or fix the problem all together on Popper.js though.
--

--
Without gpuAcceleration the performances greatly degrade, the number of users that make use of browser zoom aren't that much, and the blur effect isn't much evident on the modern devices that use high DPI screens, so I think it's a good default.
--

--
I think Bootstrap should provide a way to disable the option rather than relying on the workaround suggested by @Johann-S, that workaround doesn't work in all the environments and will probably stop working all together in popper.js@v2

Something like a `data-popper-gpuacceleration=""off""` on the `body` tag of the page maybe.
--

--
@mfursov tooltips and dropdown can have performance issues if positioned outside their natural context (like it happens with most of them actually).

Considering that Bootstrap doesn't even support browser zooming, I can't see why the default should be changed
--

--
That's a different issue, the solution I did propose was to provide an additional wrapper to let the user add their own custom CSS transformations. But I don't think anybody every addressed it
--
",Ruffio,"
--
Would it be an idea to have gpuAcceleration=false as default so developers have to actively make a decision to enable it with its potential consequences?
--
",mfursov,"
--
Example to demo the issue with bootstrap official web site & zoom = 125%

![sample](https://user-images.githubusercontent.com/2812237/50777094-9f4c7e80-1268-11e9-9d10-83a3ad9f7f41.png)

--

--
Once I know how to fix this issue on my website I fix it (using external Popper.js library) and move forward. 

The problem is that every developer must spend some time to find this problem, understand the root cause and provide a fix.

Regardless of which solution Bootstrap will (or won't) introduce itself I believe it would be very kind to make developers know about the issue and give them a hint about the fix/workaround.

Ps. I've never thought I will ever use non-default zoom in a browser by myself. But now having 11-inch screen with FHD resolution I have zoom ""On"" by default :) 
--

--
The issue was reported to Chrome's team 4 of years ago: https://bugs.chromium.org/p/chromium/issues/detail?id=573146

Resolution: won't fix. 
Looks like we have to use workarounds and do not rely on quick fix available in Chrome.
--

--
Popper.js has a reason not to have gpuAcceleration=off by default. May be this mode (gpuAcceleration=off) could be a reasonable choice for the Bootstrap bundle?

Bootstrap uses Popper.js in a very limited way: tooltips or dropdowns usually do not have performance issues. Having gpuAcceleration=off by default in the Bootstrap bundle may fix the issue for the majority of Bootstrap users with no need to update even a single line of code.


--
",max,"
--
@FezVrasta for example for this case (without `gpuAcceleration` I can use transform transitions on tooltips/popovers).

https://codepen.io/makshh/pen/dwjPPO?editors=0100
--
",oldrich,"
--
Majority of people that I know of have Windows 10 set at least to 125%, some even to 150%. Therefore I do not really get the statement:

>In Bootstrap we don't support [browser zooming](https://getbootstrap.com/docs/4.2/getting-started/browsers-devices/#browser-zooming)

and

> the number of users that make use of browser zoom aren't that much

Any solution to that would be awesome as in the current state Popper is rather useless - better slow than blurry ;).

BTW: If I am not mistaken then Bootstrap 3 does not blur the content and I do not find the dropdown slow at all.

EDIT: I find this video highly relevant to the discussion in this thread ;):

https://m.youtube.com/watch?v=eKuHlSZKlWM
--
"
27814,OPEN,Disabled radio buttons do not indicate selection,css; v4,2019-06-05 17:29:16 +0000 UTC,kleinph,In progress,,"A disabled radio button group does not indicate the (pre)selcted value as other form fields do. I am not sure if this is intended behavior, but native radio buttons do show their state when disabled.

- Operating system: Arch Linux
- Browser and version: Firefox 63.0.3, Chromium 71
- Reduced test case: https://codepen.io/anon/pen/OrVLOV
",,,ysds,"
--
x-ref: #23544 ?
--

--
OK, I understand. Probably, that is a styling issue of buttons. 

<img width=""550"" alt=""2018-12-14 23 31 37"" src=""https://user-images.githubusercontent.com/4065765/50008735-71bd3e00-fff8-11e8-8409-0d8b8f5b3744.png"">

Demo: https://codepen.io/anon/pen/BvKaqz
Latest: https://codepen.io/anon/pen/LMNYKK

@kleinph I recommend you to change the issue title for clarification.
--

--
I agree separating those two state:

- Pressed (`:active`)
- Selected (`:checked`, `aria-pressed`, `aria-selected`, `aria-current`) - `.active` class
--
",kleinph,"
--
@ysds as far as I understand, the referenced PR was to fix a problem where the active state could be triggered on an inactive button. In my issue the button should indicate its preset state also when disabled analogous to native radio buttons.
--

--
@ysds sure, how should I name it?
BTW your demo makes it pretty clear what my issue is. Thanks!
--
",tmorehouse,"
--
I'm wondering if disabled elements should just have a reduced opacity for simplicity in styling?
--

--
Maybe active+disabled should just be mentioned as incompatible/not-supported for button mode?
--

--
In the above examples it would really be `:checked:disabled`, rather than `active:disabled` (button style checkboxes)


--
",mdo,"
--
Well, `.active:disabled` seems logical and useful—a button is selected and it's processing/loading, for example. `:active:disabled` isn't useful though because disabled shouldn't be interactive. Perhaps the problem is coming from us conflating those two vs separating the `.active` from `:active`?
--
",,,,
27805,OPEN,Non-horizontal form-group using fieldset renders legend font-size different than label,css; v4; v5,2019-12-04 04:18:32 +0000 UTC,tmorehouse,In progress,,"When using a `<fieldset>` as the root element of a non-horizontal `.form-group` (i.e. no `.form-row` or `.row`), the `<legend>` element renders differently than a `<label>` (specifically the font-size being set to `1.5rem` via reboot)

```html
<div class=""form-group"">
  <label for=""input"">Label</label>
  <input type=""text"" class=""form-control"">
</div>

<fieldset class=""form-group"">
  <legend>Foobar</legend>
  <div role=""group"">
    <div class=""form-check form-check-inline"">
      <input id=""check1"" class=""form-check-input"" type=""checkbox"" name=""checks"" value=""A"">
      <label for=""check1"" class=""form-check-label"">Radio A</label> 
    </div>
    <div class=""form-check form-check-inline"">
      <input id=""check2"" class=""form-check-input"" type=""checkbox"" name=""checks"" value=""B"">
      <label for=""check2"" class=""form-check-label"">Radio B</label> 
    </div>
  </div>
</fieldset>
```

Renders:
![image](https://user-images.githubusercontent.com/2781561/49701433-b4c77d80-fbc2-11e8-8840-e4f88d70d1a8.png)

Manually adding a style `font-size: inherit;` or `font-size:  1rem;` to the `<legend>` appears to fix this issue, but it would be preferential not to have to add the additional styling.

Proposed solution (to mimic `<label>` default) in `/scss/_forms.scss` before the `.col-form-label` rule definition:
```css
.form-group legend {
  font-size: inherit;
}
```

Which renders the following (using the same above HTML):
![image](https://user-images.githubusercontent.com/2781561/49701608-7c28a380-fbc4-11e8-9dc6-f4cd470c9f25.png)
",,,mdo,"
--
Every `<legend>` has that font-size though, it's not a matter of being in a particular form layout. See https://codepen.io/anon/pen/BvKwNV for an example. I don't think this is something we'd change.

Thoughts @MartijnCuppens or @andresgalante?
--

--
Oh I agree it should be improved, but overriding like that could cause issues for folks who've built around this existing behavior.

> Since it is suggested it can be used on fieldsets, the form-group component should probably treat labels and legends the same stylistically.

Eh, just because a particular HTML element can have a class doesn't mean something nested within that element should change. Again, I agree there should be some control here, just not in the solution offered here thus far.

In all likelihood, we should move from general `label { ... }` rulesets to `.form-label { ... }` to help avoid issues like this as we could just apply that class. Perhaps for now v4 should have `label, .form-label { ... }` or something akin?
--
",tmorehouse,"
--
When in horizontal forms, one can apply the `col-form-label` class (as all the examples show in the docs) to make it appear the same as a regular `<label>`.

The form group docs state the following:

> The `.form-group` class is the easiest way to add some structure to forms. It provides a flexible class that encourages proper grouping of labels, controls, optional help text, and form validation messaging. By default it only applies margin-bottom, but it picks up additional styles in .form-inline as needed. **Use it with `<fieldset>`s, `<div>`s, or nearly any other element**.

Since it is suggested it can be used on fieldsets, the form-group component should probably treat labels and legends the same stylistically.


--

--
When creating a form composed of multiple inputs (inputs and labels are in a non-horizontal layout... i.e. no form-row/cols) and, say, a group of radios or checkboxes.

The checkboxes and radios should be placed in a fieldset for proper semantic markup (and for screen readers).  Labels cant be associated with fieldsets, so one uses a legend.  

The default behaviour breaks the cadence of the form as the `<legend>` pops out visually at 50% larger font size than a `<label>`.

![image](https://user-images.githubusercontent.com/2781561/50039492-cfa65180-0009-11e9-88da-e1dd8b424fe6.png)

--

--
That would work... similar to the `.col-form-label` used in horizontal forms.

Your suggestion of `label, .form-label { ... }` would allow for backwards compatibility, and then in future releases remove the `label` selector (except for reboot).
--
",akrawchyk,"
--
This is already merged https://github.com/twbs/bootstrap/pull/28450 but would a follow-up PR that includes the above decision make sense @mdo ?
--

--
@tmorehouse looks like a `$legend-font-size` variable was added to allow theming the default `<legend>` element: https://github.com/twbs/bootstrap/commit/855d763ae57fd1dea1c26af1f197d3d84002dc55#diff-d8ee409a461718bfb6240710c8c73382R345

Can this be backported to v4?
--
",,,,,,
27659,OPEN,Multi Level Dropdown menu,css; feature; help wanted; js,2021-04-04 08:58:04 +0000 UTC,ayoubkhan558,In progress,,"Multi drop-down must be created in bootstrap because we have to use another plugin for this.
Here are some screenshots of what i looking for.
![image](https://user-images.githubusercontent.com/20210961/48386853-3be51b00-e715-11e8-81d4-6a9dfebe8f33.png)

https://codepen.io/SurajVerma/pen/wBMbqL
https://www.w3schools.com/bootstrap/tryit.asp?filename=trybs_ref_js_dropdown_multilevel_css&stacked=h
https://www.cssscript.com/create-a-multi-level-drop-down-menu-with-pure-css/ 

",,,Johann,"
--
I don't think we plan on adding that feature 🤔 

/CC @twbs/css-review @twbs/js-review 
--
",XhmikosR,"
--
Not sure how much code this will need. If not a lot, I see the use case for this.
--
",rafalp,"
--
This comes up once in a while, but seems that @mdo's opinion is ""nope, those are crap on mobile"":

https://github.com/twbs/bootstrap/issues/21026#issuecomment-314134412
--
",FireController1847,"
--
I still strongly believe his comment is completely invalid and has no evidence backing it up, and the replies seem to show large community _support_ for this feature. It would be easy to implement as well, since it'd basically be repeating a dropdown over and over.
--

--
Almost every other design disagrees with your logic. You can easily create a drop-down menu by using a sidebar. There are so many examples of this in almost every app.
--
",Joyrex,"
--
I agree that on mobile (portrait or landscape) they really don't work well since there's not enough horizontal _and_ vertical screen real estate to effectively support the functionality in a real-world case.
--
",mdo,"
--
@FireController1847 Read the comment again—there were multiple issues with nesting dropdowns at the time while developing and maintaining v3. You can look at it now and say it’s all invalid or inaccurate, and that’s fine—v3 shipped over five years ago.

The problems we ran into were around keyboard navigation, screen reader support, finding an elegant and scalable responsive approach, providing native desktop grade dropdowns (where diagonal cursor moving wouldn’t toggle the menu), and at the time, I recall the JS being overly complex (could be implementation issues or just general problems with the component). Are all those issues solvable? Yes. Did we want to solve them all ourselves and maintain something we found undesirable or difficult? No, not at the time.

All that to say, if it were so easy to do, feel free to submit a PR. Otherwise, use this space to brainstorm ideas for building them, making them mobile-first and responsive, and for anything that previous iterations lacked or could do better.

Opinions can change over five years and I’ve gladly revisited past decisions like this when asked.
--

--
Adding the `help wanted` label here. Generally speaking, I'd love to restore support for nested dropdowns, but with proper accessibility, keyboard navigation, etc. If folks can chip in a bit via PRs, I'm sure we could ship something for v5 and possibly a v4.x depending on implementation.
--
"
27650,OPEN,Caret is a rectangle with Windows High Contrast Mode,accessibility; confirmed; css; help wanted; v4; v5,2021-02-09 16:19:42 +0000 UTC,Cerberooo,In progress,,"# Information

- Operating system and version: Windows 10 Home
- Browser and version: Firefox 63.0.1 & IE 11.1.17134.0

# Bug

When using transparent borders they aren't transparent with Windows High Contrast Mode, so you can't see that `caret` is a caret:

![drodpown](https://user-images.githubusercontent.com/16780924/48312185-3f5c9300-e5ab-11e8-88d0-18b03f77610c.png)


# Steps to reproduce

1. Open Firefox or IE
2. Navigate to http://getbootstrap.com/docs/4.0/components/dropdowns/
3. Enable Windows High Contrast Mode `(left) shift + (left) alt + print`


",,,patrickhlauke,"
--
more generally, we should probably consider using SVG over any border-based things for WHCM
--

--
personally still feel SVG would give more flexibility, but yeah ... border/clip path trickery is cute too
--
",mdo,"
--
Confirming (hella late) that this is still an issue in v4.5.x and v5.x.
--

--
One solution I've cooked up so far is changing how our dropdown carets look: https://codepen.io/emdeoh/pen/gOwQPXq. This new one shows up nicely for me, but would need some more testing.
--

--
Not as concerned with that, but it's an interesting concern. I think having a consistent visual indicator of ""more"" for any interactive element is okay?
--

--
Unclear if `clip-path` has the best browser support... definitely doesn't work in IE11 for sure.

Updated https://cdpn.io/emdeoh/pen/gOwQPXq with a `clip-path` example regardless.
--
",Cerberooo,"
--
@mdo Do you have a solution in mind? Maybe using SVG in `content` of a pseudo class?
--
",ffoodd,"
--
Simple note here, I'm used to handle carets with `clip-path` instead of borders or SVG.

@mdo Your suggestion is pretty clever, however won't it be confusingly similar to standard `select` in some browsers and systems?
--
",,,,
27514,OPEN,Support for prefers-color-scheme media query,css; v6,2021-02-10 10:33:30 +0000 UTC,rolandasb,In progress,,"Apple introduced `prefers-color-scheme` media query in [Safari Technology Preview 68](https://webkit.org/blog/8475/release-notes-for-safari-technology-preview-68/), which allows developers to apply different rules if user is using dark mode on Mac Mojave:

```
@media (prefers-color-scheme: light) { ... }
@media (prefers-color-scheme: dark) { ... }
```

https://trac.webkit.org/changeset/237156/webkit

Maybe it's worth supporting this in Bootstrap?",,,patrickhlauke,"
--
what kind of support would you envisage? doubling up the color scheme everywhere? i wouldn't be adverse, but this needs careful planning/defining
--

--
once it has more sizeable support @waterfoul, sure. as it stands, it's a lot of potential work for little gain just now.
--

--
for all those who are pushing for it...i look forward to your pull requests
--

--
nobody said it's a bad idea. what was said is that it's a lot of work for little practical gain just now. if somebody wants to start putting all the work in... (chicken and egg)
--
",rolandasb,"
--
I don't know if such tool exists, but what I thought was the ability to set variable like `$enable-dark-mode` which on compilation would find existing variables that have suffix `-dark` and include media queries in places where those variables are used. For example, if set variable:
```
$link-color-dark: lightblue;
```
it would insert into `_reboot.scss`:
```
a {
  color: $link-color;
  ...
  
  @media (prefers-color-scheme: dark) {
    color: $link-color-dark;
  }
}
```

--
",mdo,"
--
Would be cool, but this is only in the Safari tech preview version, and no other browser. Can't really make use of it effectively for folks unless there's far more support. Closing as it's too early to use.
--

--
Safari and Firefox support isn't enough IMO and the supporting the media query presents additional implementation issues that we'd have to advise on or implement ourselves (e.g., fallbacks for IE and Edge that don't support it currently). Getting Chrome on board would be helpful obviously, but I think this is something more suited to a v6.
--

--
Without the move to CSS custom properties, is the intent here then a mixin and proper dark mode (or more generally, color scheme) support across all components?
--

--
I have an idea for generating color schemes in Bootstrap, largely in the spirit of supporting dark mode. General idea started with having a Sass map or list of all the themes you'd like to generate (default, dark, etc). This evolved to perhaps having a nested Sass map of color schemes similar to our utilities API.

This paired with CSS custom properties could be super nice for changing color schemes on the fly—imagine setting your theme colors for each color scheme, and then we spit out the `:root { ... }` vars to support them. Because it's a map, folks can add, remove, or merge as needed.

Here's a snippet of an example.

```scss
$themes: (
  default: (
    ""primary"": $blue,
    ""success"": $green
  ),
  dark: (
    ""primary"": $purple,
    ""success"": $teal
  ),
  custom: (
    ""primary"": $black,
    ""success"": $cyan
  )
) !default;

@each $theme, $name in $themes {
  /* #{$theme} */
  :root[data-theme=""#{$theme}""] {
    @each $color, $value in $name {
      --bs-#{$color}: #{$value};
    }
  }
}
```

Which compiles to the following:

```css
/* default */
:root[data-theme=""default""] {
  --bs-primary: #0d6efd;
  --bs-success: #198754;
}

/* dark */
:root[data-theme=""dark""] {
  --bs-primary: #6f42c1;
  --bs-success: #20c997;
}

/* custom */
:root[data-theme=""custom""] {
  --bs-primary: #000;
  --bs-success: #0dcaf0;
}
```

This would require us to use CSS variables for more of our look and feel. I also feel like we could be doing more with mixins and maps to generate multiple options here for components and color schemes. For example, it'd be incredibly powerful to have global option variables to `$enable-dark-variants` and/or `$enable-dark-mode` where the former generates the `.*-dark` classes while the latter generates the `prefers-color-scheme` media queries.

What do folks think? Other ideas worth pursuing?
--
",swrobel,"
--
This is in-progress for [Chrome](https://bugs.chromium.org/p/chromium/issues/detail?id=889087) and implemented for [Firefox](https://bugzilla.mozilla.org/show_bug.cgi?id=1494034) 67 so it might be worth revisiting for BS5
--

--
> more sizeable support

please define
--

--
> Getting Chrome on board would be helpful

As previously mentioned, this is being [actively worked on](https://bugs.chromium.org/p/chromium/issues/detail?id=889087) and is targeted for Chrome 76, to be released [around July 30](https://www.chromium.org/developers/calendar)
--
",mrlife,"
--
Just putting this here for easy reference. The Resources tab links to browser-specific status and the specification.

https://caniuse.com/#search=prefers-color-scheme
--
",waterfoul,"
--
Any chance of reopening this one?
--

--
We currently use two css classes to pull this off with a style switcher but it requires a very bloated payload to pull off (since having multiple color schemes requires multiple copies of bootstrap). In order to better support using multiple themes and to prepare for these media queries would it make sense to provide a way to generate a copy of bootstrap with color information only which could be used as an override?
--

--
The more I look at this the more this feels like the perfect use-case for css variables. They are currently supported in [every evergreen browser but are not available in IE](https://caniuse.com/#feat=css-variables) which bootstrap currently supports. Would the bootstrap team be open to dropping IE support in the next major? It's become a little used browser ([<3% usage world wide](http://gs.statcounter.com/)/[<5% in the US/It's biggest market](http://gs.statcounter.com/browser-market-share/all/united-states-of-america/)) and even Microsoft is [recommending people not use it](https://techcommunity.microsoft.com/t5/Windows-IT-Pro-Blog/The-perils-of-using-Internet-Explorer-as-your-default-browser/ba-p/331732) except for legacy applications.
--

--
Are there any rough timelines for v5 and v6? I would rather this be done right since it will likely be a large change and if that means waiting a bit longer that's fine. I would just like to know roughly how much longer
--
"
27507,OPEN,Two-level-Acordion clic to collapse... fires too many Collapse events,js; v4,2019-03-01 11:01:52 +0000 UTC,igll,In progress,,"If an acordion is inserted inside another one... the collapse event of the big one is fired when collapsing the small one.

You can see the effect just expanding the ""Press here ONCE"" title and then pressing twice the ""Press here TWICE. You will see two collaping events.""

at this full example: https://codepen.io/igll/pen/bmyWBW **(Jan 8th, 2019: Updated to Bootstrap 4.2.1)**",,,Johann,"
--
Bug reports must include a live demo of the problem. Per our [contributing guidelines](https://github.com/twbs/bootstrap/blob/v4-dev/.github/CONTRIBUTING.md), please create a reduced test case via [CodePen](https://codepen.io/)/[JS Bin](https://jsbin.com/) or [Stackblitz](https://stackblitz.com/) and report back with your link, Bootstrap version, and specific browser and OS details.

*This is an automated reply*
--
",igll,"
--
Example updated to Bootstrap 4.2.1: https://codepen.io/igll/pen/bmyWBW
--

--
Example updated to Bootstrap 4.3.0: https://codepen.io/igll/pen/bmyWBW
--

--
Example just updated to Bootstrap 4.3.1: https://codepen.io/igll/pen/bmyWBW
--
",,,,,,,,
27412,OPEN,Find a way to consistently use deps accross the whole codebase,build; confirmed; v5,2020-11-19 19:09:03 +0000 UTC,XhmikosR,In progress,,"- [x] docs: jQuery, popper
- [ ] docs: anchor.js, docsearch, clipboard.js - See #29283
- [x] tests:  jQuery, popper
- [x] tests visual:  jQuery, popper
- [x] docs SRI hashes: currently popper.js isn't in sync with the version we use in our docs, it requires manual changes

I'd also stop using the CDN for the docs for these files since we already are behind Cloudflare. Thus simplifying things a bit.

We need to come up with a way to automate all this once and for all. Like use npm for everything, and have a script which will take care of this.",,,nik72619c,"
--
what kind of changes are expected to be done...willing to work on this one !

--
",Johann,"
--
I'm totally in favor of using NPM and create a script which will copy dist file from Popper.js in our docs assets folder 
--
",XhmikosR,"
--
As long as our assumption that the CDN version is exactly the same as the npm version for each package stands, we can just do that.

But while at it, we might as well drop the CDN for popper.js and jQuery.
--
",,,,,,
27241,OPEN,Keyboard Accessibility in Modals - SHIFT + TAB should cycle backwards,accessibility; help wanted; js; v4; v5,2020-11-19 07:48:18 +0000 UTC,DavidMacDonald,Opened,,"
- Operating system and version : All versions
- Browser and version : All versions
- Test case: Launch demo modal and Press Shift+Tab
https://getbootstrap.com/docs/4.0/components/modal/

- Expected Result: When focus leaves first interactive element, it should go to the last interactive element.
- Actual Result: Focus stops on the first interactive element and no further action can be taken with SHIFT +TAB
",,,,,,,,,,,,,,
26873,OPEN,Dropdowns additional Popper.js 'padding' option,feature; js; v4,2018-07-13 10:45:47 +0000 UTC,anthony0579,In progress,,Popper.js by default adds a padding of 5px between its boundary and popper in it's preventOverflow modifier. Would be nice to have the ability to have this as an Option for dropdowns. ,,,Johann,"
--
You always can access to that thanks to `Popper` global var
--
",anthony0579,"
--
I didn't realise I could access that thanks Johann. This worked: `Popper.Defaults.modifiers.preventOverflow.padding = 0;`
--
",,,,,,,,
26804,OPEN,Bad UX for Checkbox Button on mobile browser,,2021-01-11 22:01:35 +0000 UTC,Juchar,Opened,,"## Bug description:
Using the checkbox buttons on a mobile browser (Chrome Browser 67.0.3396.87 on Android) if you uncheck/check a button it will not show the proper styling as it seems to be still hovered.

This is resulting in **really bad UX** (imho) due to the fact that for the overall user the button still seems to be unchecked (this is especially annoying for outlined buttons and button groups).

You can see the difference between checked and unchecked in the below screenshots on the checkbox button _(or at least you can see that there is nearly no difference)_:

![screenshot_20180705-075201](https://user-images.githubusercontent.com/14292982/42304893-c80cf94e-8028-11e8-84e9-9c9e0ed51bd7.png)

![screenshot_20180705-075209](https://user-images.githubusercontent.com/14292982/42304895-c8364600-8028-11e8-82d0-0e1fc5195b44.png)


## Reproduction:
You can check this by simply accessing the demo here using a mobile browser:
[http://getbootstrap.com/docs/4.1/components/buttons/#checkbox-and-radio-buttons](http://getbootstrap.com/docs/4.1/components/buttons/#checkbox-and-radio-buttons)

## Version of Bootstrap:
Bootstrap: 4.1.0",,,mdo,"
--
@ffoodd Does this roll up into you color efforts? Not sure how much I'd change here at this point right now.
--

--
Thoughts on closing this out as a stale won't fix?

We've improved some of the coloring (especially in v5), but honestly the best approach here would be visible indicators other than color changes (either showing the form control or adding some inline images). I wouldn't be opposed to see a PR from someone to do the latter, but I don't see much of a need to push this forward.
--
",ffoodd,"
--
@mdo Not really. Here it concerns our `button-variant()` mixin, which only `darken()` / `lighten()` the background for active state based on the theme color.

I implemented the darken VS lighten thing to ensure contrasts are improved (and I can see it hasn't been backported to v4, should it?), but the color itself depends on the amount of difference (currently `10%`).

Two ideas here:
1. either we increase the amount of difference,
2. or we use our tints and shades instead of `lighten()` and `darken()` (which I think was part of #30622 by @MartijnCuppens).


--
",,,,,,,,
26772,OPEN,Dropdown doesn't close when an outside select element is clicked,browser bug; confirmed; js,2019-07-01 11:46:01 +0000 UTC,mburrows02,In progress,,"OS/Browser: Ubuntu 16, Chrome 67

To reproduce:
1. Click dropdown button - dropdown opens
2. Click on a select field elsewhere on the page - dropdown remains open and select field opens (potentially on top of the dropdown as in the example, depending on placement)

The (expected) behaviour observed in Firefox is that the dropdown closes and the select field opens, so this might be a browser bug.

[Example](http://jsbin.com/gikewenaku/edit?output)",,,alecpl,"
--
Works in Firefox. There's however a different issue. If you click on the select first and then on the button it will not display the dropdown. In both browsers.
--
",Johann,"
--
Work in Firefox, and Chrome 67 on Win10 😟 

BTW this link : https://maxcdn.bootstrapcdn.com/bootstrap/latest/js/bootstrap.js is outdated see: https://getbootstrap.com/docs/4.1/getting-started/download/#bootstrapcdn
--
",mburrows02,"
--
[Updated to the 4.1 links](http://jsbin.com/yorukohoge/edit?html,output) and still seeing the broken behaviour on chrome/ubuntu. However, I had a colleague check and it works in chrome and safari on OSX.
--
",,,,,,
26770,OPEN,iOS and Voiceover ignores the focus trap trick,accessibility; js,2021-03-11 17:55:38 +0000 UTC,julesongithub,In progress,,"In order to avoid content, below the modal, being reading by AT, focus is kept within the modal when ever an attempt is made to tab out of the modal.

Unfortunately, this doesn't work whilst swiping in iOS with Voiceover (I'm not sure about Android but that's probably the same).

What's needed is something to aria-hide everything, except the modal, whilst it's open:

```js
var backgroundAriaHider = (function() {
    var $hide, $wrap;
            return {
                hideAllExcept: function (elementOrSelector) {
                    var $node = elementOrSelector instanceof jQuery ? elementOrSelector : $(elementOrSelector);
                    $hide = $();
                    $wrap = $();
                    do {
                        $hide = $hide.add($node.siblings(':not(script):not([aria-hidden=""true""])'));
                        // siblings doesn't include plain text elements; wrap these in a span
                        $node.parent().contents().each(function () {
                            if (this.nodeType === 3 && this.nodeValue.trim().length) {
                                $wrap = $wrap.add(this);
                            }
                        });
                        $node = $node.parent();
                    } while ($node[0].tagName.toLowerCase() !== 'body');
                    $hide.attr('aria-hidden', true);
                    $wrap.wrap('<span aria-hidden=""true"" />');
                },
                reset: function () {
                    $hide.removeAttr('aria-hidden');
                    $wrap.unwrap();
                    $hide = null;
                    $wrap = null;
                }
            };
})();
```
Once the modal is open, and has been focussed, call  `backgroundAriaHider.hideAllExcept($modal);`
Then once, it's closing call `backgroundAriaHider.reset();`

This is just a quick example; for instance you might want to take note of where an element has an explicit [aria-hidden=""false""] and return it to that state instead of removing the attribute.

Cheers,
Jules
",,,patrickhlauke,"
--
i had started reworking modals ages ago using the `inert` attribute https://github.com/patrickhlauke/bootstrap/tree/v4-dev-modal-rework-1 ... but work on that stalled as it still needs a polyfill (and a slight rework of what bootstrap should/shouldn't allow for modals...they always need to be in a separate DOM branch from the rest of the page that is made `inert` - or `aria-hidden`, while currently it's allowed to keep modals in place in the DOM).

but yes, agree this needs tackling. just wondering if we could revisit the approach using `inert` + polyfill, rather than custom ""add `aria-hidden`, and neutralize/make unfocusable any other focusable element"" (which would allow us to remove the hidden focus trap/handler). @mdo ?
--

--
just adding `aria-hidden` and keeping the current focus trap does work, but conceptually it's a lot cleaner to implement `inert` (if it were supported) as that not only hides the content from the accessibility tree like `aria-hidden` does, but also makes any other focusable things in the non-focusable (even without assitive tech running), avoiding the need for custom focus handling acrobatics.

as an interim solution, however, may scale down and just do the `aria-hidden` on the main page part for now and keep the focus trap. once i get time...
--

--
>  I just wonder if there's situations where the dialog needs to remain in place and not detached and appended outside of the inert section.

i think historically there's been some uses of dialogs inside only portions of a page, or tricky z-index things that required the modal to not be hanging straight off the `<body>` but somewhere else. i may investigate a bit further, time permitting
--
",julesongithub,"
--
I'd never heard of the inert tag and just tried the Google and WICG polyfills on my phone. The Google one doesn't work but the WICG one does because it also adds the [aria-hidden] attribute along with [inert].

Your technique would work by simply using the [aria-hidden] attribute instead of the [inert] tag but I just wonder if there's situations where the dialog needs to remain in place and not detached and appended outside of the inert section. 
--
",arnaldomm,"
--
The dialog box should have these two attributes:
role=""dialog""
aria-modal=""true""

Be sure to test on good screen readers-browser combinations:
- VoiceOver: Safari.
- JAWS: Chrome, Firefox, Internet Explorer.
- NVDA: Firefox, Chrome.
- Narrator: Microsoft Edge
--
",camtin,"
--
I can confirm at least that aria-modal=""true"" and role=""dialog"" work on:

macOS v10.14 Mojave VoiceOver and Safari v12
macOS v10.14 Mojave VoiceOver and Chrome v88.0.4324.192

The VoiceOver virtual cursor ignores all content 'behind' the modal.

This does not work on:
macOS v10.14 Mojave VoiceOver and Firefox v86.0.1


--
",,,,
26719,OPEN,Feature request: Close Tooltip when clicking outside of it (useful when high hide delay set),js; v4,2019-03-09 14:40:40 +0000 UTC,juanmaguitar,Opened,,"### Issue description

- components: `Tooltip`
- bootstrap version `4.1.1`

### What is happening?

If the Tooltip is set with some delay on hide, clicking outside doesn't close it
https://codepen.io/TheSharpieOne/pen/pKpzBj

### What should be happening?

Clicking outside the tooltip should close it
",,,nikhilbarar,"
--
Can i pick this?
--
",Fak3,"
--
This feature is already implemented in popper.js version 1.14.7: https://github.com/FezVrasta/popper.js/pull/661
Can the support for it be added to bootstrap?
--
",,,,,,,,
26712,OPEN,Dropdown items with tooltips don't disappear immediately when scrolling,js; v4,2018-06-15 17:43:03 +0000 UTC,ClemMakesApps,In progress,,"![2018-06-14 15 37 25](https://user-images.githubusercontent.com/3363898/41436946-df9f4cd8-6fe8-11e8-9d32-406798c2cc56.gif)

Is this a bug or is it intentional? I've set the boundary to `viewport` because I need the tooltip displayed outside of the dropdown but it seems to create this weird bug whenever scrolling occurs.

Codepen for testing: https://codepen.io/clemmakesapps/pen/WyEYBz",,,Johann,"
--
How did you set the `boundary` to `viewport` in your example ?
--
",ClemMakesApps,"
--
@Johann-S I used data attributes

```
<button ... data-boundary=""viewport"">dropdown item</button>
```
--
",,,,,,,,
26596,OPEN,Use custom properties (CSS variables) in bootstrap,css; feature; v4,2020-12-10 21:17:25 +0000 UTC,tobi-or-not-tobi,Opened,,"I like sass variables and they're great during buildtime. But projects that need a microfrontend architecture (i.e. webcomponents) tend not to rebuild components. They rather reuse existing components and provide the style context to it. 

Using CSS variables will allow to provide runtime configuration for styling, such as colors. CSS variables can work in conjunction of SASS. 
I'm happy with a few the first couple of CSS variables in bootstrap, but as [already mentioned](https://github.com/twbs/bootstrap/issues/23349#issuecomment-346813716) they're only exposed and not used by bootstrap itself. This means, if a project likes to override these CSS variables at runtime, there's no effect with the bootstrap components themself. 

Is there anything against going into the CSS variable direction? [Browser support is really great](https://caniuse.com/#feat=css-variables) and the fallback option will keep non-supported browsers happy. 

I understand this is a big change though. It woudl work like this:

Intialize CSS vars. We use use double-double fallback to ensure we have a fallack and do not need to repeately add the fallback everywhere. 
```
:root {
    --primary: var(--primary-color, #{$primary});
}
```

Then for each and every component that uses the primary color, we could use the --primary variable instead. For example on a button, it would go like this (just a few lines that i'm using in my sandbox project, so its not so relevant to bootstrap sources):
```
.btn {
    &-primary {
        background-color: var(--primary);
        border-color: var(--primary);
        &:hover,
        &:not(:disabled):not(.disabled):active {
            background-color: var(--primary-darken);
            border-color: var(--primary-darken);
        }
    }
}
```

This would allow to change the color at runtime. 

",,,MartijnCuppens,"
--
Bootstrap supports IE10 & IE11 which don't support CSS Variables (Custom Properties), I'm afraid we can't do this right now.
--

--
Could you provide a demo of how you would use that mixin?
--

--
Hmm, and what is the benefit of that? Aren't you always overwriting the variable?
--

--
I'm afraid we can't just use a mixin to mimic the exact behaviour of CSS variables. Also bootstrap uses a lot of `darken()` and `lighten()` sass functions, which can't be applied to CSS variables. There is also the `color-yiq` function which determines the text color based on the background-color of buttons (that's why the text color of the warning button is dark [on the bootstrap docs](https://getbootstrap.com/docs/4.1/components/buttons/#examples)) which won't work anymore. 

If we find a solution for this, we could think about generously implementing them in v5 only if IE support is dropped.

(btw, sorry for being the party pooper here  😉)
--

--
Let's do this. Not sure what approach we should take, we have lot's of shades of the `primary` color for example and have to find a way to deal with all these shades.
--

--
Relying on lightness might not be the best idea since the palette can be a little unpredictable, see https://codepen.io/joshmcrty/pen/OVZbBr


--

--
> Be careful there: CSS custom properties are not a replacement for Sass variables.

Indeed! Not planning to convert our whole `_variables.scss` to custom properties.


This is not going to be an easy job, we got to figure out have to combine the powers of Sass and custom properties.
--
",tobi,"
--
Understood that support for IE10/11 still is important. What about introducing a fallback. We could have a mixin that would generate both the fallback as well as the custom property. 

```
@mixin customProperty($name, $value) {
  
    // fallback for older browser who do not support custom properties / css variables
    #{$name}: #{$value};

    // create a css variable (this might override the variable on any of the ancestor elements)
    --#{$name}: #{$value};

    // use the css variable on the property
    #{$name}: var(--#{$name}, #{$value});
}
```

Alternatively we could use postcss but I'm personally not so much in favor of that since it doesn't allow to use those properties outside the root scope. 
--

--
Hi @MartijnCuppens,
I'd use it like this:

In a selector call the mixin:
```
.any-selector {
  @include customProperty('color', #{$primary});
}
```

This would give the following output, with $primary set to #ffffff;

```
.any-selector {
  color: #ffffff
  --color: #ffffff;
  color: var(--color, #ffffff);
}
```

In addition, we could make the fallback optional, by introducing a sass variable.

btw, it's just a quick example.
--

--
Custom properties will give a lot of benefits to the code base (you might want to have a look at https://www.youtube.com/watch?v=2an6-WVPuJU), but in the context of this ticket I'm mainly interesting in extendibility. Especially for projects that run in the cloud and should allow to override some variables (i.e. primary color) without a rebuild of the code. 

Besides extensibility (which is big word for just configuring the vars), it also allows for easy upgradability. 
--

--
Thanks @andresgalante. I'm aware of the variables being exposed (and that's great), but it unfortunately doesn't allow to override them at runtime. The compatibility concerns make sense though. 
--

--
The lack of `darken`, `lighten` and `color-yig` like functions in vanilla CSS doesn't need to be a show stopper here imho. Those functions can and should still be used at build time, and could be in addition exposed as color variants, i.e. `--primary-darken`. 

Library consumers can configure those variants at _build time_ as they're used to, but in case they want to use runtime configuration (or extend without rebuilding), they will be responsible for configuring those custom properties technique that suits them. Javascript comes to mind, but even existing HSL color system would already work. Whenever CSS color-mod comes around, it will be more convenient. 

(btw, sorry for being so persistent here 😉 – I understand the concerns, but want to think in solutions before dropping the whole idea altogether)

--

--
@NormSukhrob I guess we first need to wait whether bootstrap wants to move into this direction or not. Then the technical implementation can be done, personally I think using an external dependency for such a small thing is a bit of an overkill, but its good inspiration. 
--

--
@mdo do I get it right that the **vision** is that CSS custom properties are not for Bootstrap? 

The runtime configurability of CSS custom properties over build-time configurability are huge, imho. Webapps are going to change with smaller reusable webcomponents, using view encapsulation that _cannot_ be controlled with a global css. Cloud native applications prefer configurability over extensibility. 

Imagine we would change the primary color for an app with a large number of webcomponents. Without CSS custom properties, it means that we need to rebuild and redeploy all the webcomponents (assuming primary color is used everywhere) and clients can no longer use the cached components (which is so important . Moreover, the components are not reusable as the CSS is baken into the component. 

Using CSS custom properties is going to make a much better story. Web components can be reused by multiple apps; CSS custom properties _do_ pass the encapsulated shadow DOM by design; changing CSS custom properties do not require a new build, deployment and the components do not need to be evicted from caches.
--
",andresgalante,"
--
Hi @tobi-or-not-tobi I love CSS variables, but @MartijnCuppens has a good point, since they are not supported on IE11, it'd be a huge effort to change every declaration to be a mixin, not to mention that we the sass abstraction would get too far away from real CSS in my opinion.

I know this will not solve your usecase, but the first step we are taking towers custom properties is exposing our color pallet as CSS variables:
https://github.com/twbs/bootstrap/blob/v4-dev/scss/_root.scss

@mdo Maybe we can add using css variables as an idea for v5?
--
",normux,"
--
What about using something like that: [https://github.com/malyw/css-vars](https://github.com/malyw/css-vars ). Abstraction not too far from CSS, and there is option to generate and load separate file for browsers which do not support CSS variables.
--

--
It was just an example of some flexible solution.

CSS variables great modern feature, and as most popular frontend library, bootstrap shouldn't escape usage of it. IMHO

As suggested, developers could have a choice using vars in runtime or just in build time. Yes, some workarounds or better solutions will be needed, like your suggestion using `*-darken` or with additional `*-darken`, `*-lighten` maps which can be by default computed from `darken()` and `lighten()` functions for build time option in separate computed variables file, which can be different for runtime and build time usages. Even for build time usage it will give more control over colors for devs.

I believe, nowadays, with a popularity of frameworks like angular, react and etc., flexibility and dynamic features in great demand.

Hope, bootstrap team will make steps toward CSS variables.

P.S. and very hope that we will not have to wait v5))))))
--
",herbalite,"
--
Replacing lighten() and darken() in SASS could be done with using hsl() colors.

See https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#hsl()

And it works from IE8 onwards. https://msdn.microsoft.com/en-us/library/hh781508(v=vs.85).aspx#colors
--
",yordis,"
--
@andresgalante would be this part of `v4` or actually `v5` I am saying because of the label `v4` that you added.

For this to be able to make it into production we need to drop support for IE, which I totally support, because few of us still care about IE shouldn't mean we need to be lock down in time until they want to convert or take business decisions (we still having marquee tags in the core browser cores, we will never get there if we wait for them).
--

--
Like every single version of Boostrap that you break backwards compatibility and because you rearchitect everything. 

Don’t take it personally but it is the truth. 

So I don’t see how you could use that argument to be honest. Specially that you don’t need to rearchitect that much (progressive enhancement exists) 
--

--
@mdo has been a long trip with Bootstrap and being grateful for your work, but I believe you are being stubborn on this one.

CSS Variables are 100% supported on green browsers and the global usage is quite enough for saying that we should start embracing the technology.

Keeping v5 without major updates shouldn’t be the goal, like I said  Bootstrap has been breaking changes every major release and everyone is aware of that.

I do not believe that the rearchitecture has to be that bad, specially that must of the source code is well known and written so far.

Progressive enhancement always exists and we could slowly upgrade the framework to be 100% CSS variables with all the good practices in the future.

Sorry, but I can see any valid point for not doing it. I would take the initiative of written the spec of the changes and the roadmap and implement it if you want.

I don’t want to create another Bootstrap and having to deal with marketing the framework. I would love to see you change your mind.

Just put in perspective the implications of not doing this agains your thoughts right now.
--

--
@MartijnCuppens I would love to help you with the execution of this, but I am not sure how we could sync up and where to start writing a proposal to some execution plan.

We could just open ourselves to random PRs, but it will require a lot of back and forward since multiple people could be conflicting with each other.

Personally, I would replace one-to-one SASS variables **per component** before tackling big files that may have a huge impact but it would slow the PR review process and harder to prevent bugs.

Related to:  #30494
--

--
> What would happen if https://github.com/twbs/bootstrap/pull/30495/files would be PRed again? Another insta rejection? What has changed now?

@nextgenthemes they burned me out, took the time to propose something #30494 to end up talking about nonsensical and obvious things; assuming that I am stupid or something?!

Stuck in analysis paralysis and trying to answer all the questions instead of letting the code to answer the questions for them 🤷 

Good luck with the adventure.
--
"
26373,OPEN,request: bootstrap 4 plugin boilerplate (jquery plugin with babel+eslint and for webpack),docs,2020-05-31 17:12:47 +0000 UTC,rpokrovskij,In progress,,"Bootstrap 4 is masterpeace and is good sample by itself, but it is not easy to extract only those steps that should be used for writing ""true"" bootstrap 4 plugins. 

Could you create a boilerplate?

P.S. This should include the advice how to communicate with the BS team in case plugin developer need some new tooling (e.g. css variables or ""functional classes"" the sample could be missed "".placeholder-color"" to emulate placeholder text)",,,Johann,"
--
@mdo should we handle that in our documentation ? 🤔 
/CC @XhmikosR 
--
",rpokrovskij,"
--
I want to say that e.g. tooltip.js is not looking as typical jquery plugin. I would like to write my plugins  in the same style (and make them instantioned in browser with webpack the same way), just they should be installed with different npm name. Could you share ""your way"" to organize the code and npm package in some kind of documentation or boilerplate? 
--

--
or you can explain it in  any plugin comments.

E.g. I would like to understand what means this line from tooltip.js

` $.fn[NAME].Constructor = Tooltip`

What kind of convention it is ?

plugin works without it

P.S. It is interesting also why `jQueryInterface` is class method (not dfinede in IIFE scope - that means not true private)?
--

--
First (as I know) plugin developed for BS4 and using BS4 conventions and tools developed by me.

https://github.com/DashboardCode/BsMultiSelect


--
",helmutgranda,"
--
I didn't develop a plugin but following the structure I was able to recreate something similar, it is missing tests for now:

https://github.com/helmutgranda/jquery-plugin-rollup-boilerplate
--
",Elia,"
--
+1, 
as the original repor
ter noted - 
bootstrap is awesome, webpack is standard de facto,
an end to end example for how to ""bootstrap"" bootstarp to webpack, 
will be amazing,
the current bootstrap documentation - 
https://getbootstrap.com/docs/4.5/getting-started/webpack/ 
would use a full example of a ""boilerplate"" package,
like: 
https://github.com/noreading/bootstrap4-webpack-boilerplate
https://github.com/bootpack/bootpack

Especially when the webpack documentation refers to **bootstarp** explicitly at - 
https://webpack.js.org/loaders/sass-loader/#resolving-import-at-rules

The migration of bootsrap projects to webpack is not so simple,
and **end to end example** of all loaders, plugins, handling of jQuery dependencies, 
will be highly beneficial by simplifying the this common use case of bootstrap.
--
",,,,
26346,OPEN,dropdown position change after several clicks,js; v4,2018-04-20 14:50:01 +0000 UTC,losclipp,Opened,,"Here is codepen https://codepen.io/losclipp/pen/NMPwjj.
With data-flip=""false"" and if there not enough space for dropdown-menu, dropdown-menu position going higher per each click on dropdown-toggle",,,,,,,,,,,,,,
26189,OPEN,Dropdown forms disappears on click,js; v4,2021-01-12 01:32:50 +0000 UTC,vosidiy,In progress,,"I made dropdown login form, When you click on content of the dropdown it will close
![1](https://user-images.githubusercontent.com/36692987/38230090-bf1cc420-36fb-11e8-972b-cff67cab267f.png)
",,,vosidiy,"
--
I think it should close only for outside click, not inside dropdown.
Check this github's top right button and click on text ""Signed in as"". it will not close. 
--

--
@patrickhlauke 
Only when you use the < form > tag for dropdown-menu it will work. Otherwise, it is closing on click
Check this demo
https://codepen.io/vosidiy/pen/BrPqjQ 
--

--
@Johann-S then how to create tabs or some clickable element inside the dropdown-menu

(see screenshot example, there is no any form element)
So should we use always < form > tag even if there is no form element? 

![1](https://user-images.githubusercontent.com/36692987/38296370-37bd4452-3802-11e8-8ac1-a5315e52ad66.png)

--
",patrickhlauke,"
--
bug reports / issues need a working reduced test case showing the problem.

for what it's worth, out of the box bootstrap's form dropdowns don't close when clicking outside of links/form controls - see https://www.bootply.com/mhuf1l1jAV ... so might be a problem with whatever extra code you're running
--

--
indeed it would make sense to keep the dropdowns more generic and to swallow (as in, don't close the dropdown) any clicks inside the dropdown container itself regardless of content. authors WILL use dropdowns for any sort of arbitrary content beyond just forms, so i'd rather see us tackle this use case directly instead of expecting authors to have to hack it.
--
",Johann,"
--
That's due to this line: https://github.com/twbs/bootstrap/blob/v4-dev/js/src/dropdown.js#L57

But @vosidiy can you explain to us why it's an issue ? Because you just have to add a form tag to make it works
--

--
that's right seems to me a valid use case.

Any concerns @patrickhlauke or @mdo ?
--
",italodirenzo93,"
--
I'd like to try tackling this issue. Has it been agreed upon that dropdowns will not auto-close on clicks made inside the container?
--
",RyanBerliner,"
--
I know this is an older issue, but the behavior is still present in BS4 and (if I'm looking at the correct place) planned for BS5 as well. I'd also like to suggest that dropdowns do _not_ toggle closed when clicking inside of them (by default, at least). 

https://github.com/twbs/bootstrap/blob/main/js/src/dropdown.js

The dropdown js confirms the behavior that clicking inside of a `form` within the dropdown does _not_ close the dropdown, but clicking elsewhere inside the dropdown does. There are many use cases where you'd want the dropdown to stay open outside of using a form within it. For example, let's say there is a dropdown full of links, and you click one. I'd think the dropdown should stay open until either the new location loads, or you manually trigger a closure after something happens. When it disappears as it currently does, it can be disorienting.

I'd argue it is almost always going to be a better user experience for the item you click on to remain visible. Is there a major use case I'm missing or not understanding as to why dropdowns close when clicking inside of them currently?
--
",,
25941,OPEN,List of required static and dynamic classes per component to ease the use of tools like uncss,docs; help wanted; v4,2019-03-15 23:47:08 +0000 UTC,pamtbaau,Opened,,"I would like to cleanup unused classes by using tools like [uncss](https://github.com/uncss/uncss). Required classes can be manually added to uncss and will be ignored and not removed from the stylesheet. 

'Static' classed that should be ignored by uncss can easily be spotted when looking at the bootstrap code.

For some required styling, bootstrap uses dynamically added classes. For example. '.collapsing' is added to '.navbar-collapse' dynamically to smooth the transition of opening/closing dropdown of the navbar. These dynamic classes are not that easily spotted.

Is there a list per component of all required static and dynamic classes?",,,Johann,"
--
No, but that's something we should provide in our documentation
--
",mdo,"
--
If anyone wants to take a pass at listing out the classes for each relevant component, that'd be awesome! We could easily add a section to each docs page.
--
",aapljack,"
--
@mdo / @Johann-S  I would like to take this on. 

To make sure I am going down the right path, I created this list of classes for `alert`. This includes the classes used to build an alert and the classes needed to give it added dynamic functionality. Is this what we are looking for here?

### Alert Classes:
**Static**
alert
alert-primary
alert-secondary
alert-success
alert-danger
alert-warning
alert-info
alert-light
alert-dark
alert-link
alert-heading
alert-dismissible

**Dynamic (adds functionality)**
fade
show
--
",,,,,,
25920,OPEN,Modal state becomes stuck when toggling rapidly,js; v4,2018-03-23 14:04:10 +0000 UTC,joliss,Opened,,"When you toggle a modal programmatically with `$(...).modal('toggle')`, toggling it too rapidly causes the modal state to become ""stuck"", and the modal will not show anymore. I assume that this happens because the fade-in/fade-out CSS transitions haven't had a chance to finish.

The following JSBin demonstrates this:

https://jsbin.com/suhijuzodu/edit?html,js,console,output

* Click ""Run with JS"", and then click ""toggle every 1000ms"". The modal appears and disappears every second as expected.
* Click ""Run with JS"", and then click ""toggle every 250ms"". The modal appears and disappears once, and then nothing happens even though `$(...).modal('toggle')` is still being called.

I believe the correct behavior would be to either honor the toggle, or to ignore any toggle that occurs while the modal is still transitioning/animating.

This happens on v4-dev, though the behavior seems to have been present since 3.x at least.",,,,,,,,,,,,,,
25854,OPEN,Quickly switching tabs using Navs with JavaScript makes the tab content go wrong,js; v4,2018-03-23 14:18:01 +0000 UTC,magiclen,In progress,,"#### Environment

Operating system: Linux Mint 18.3 Cinnamon
Browser: Chrome 65.0.3325.162 and Firefox 58.0.2
JS Bin: https://jsbin.com/pidaziv

#### Snapshot
https://imgur.com/a/1MAWb

#### Steps to Reproduce

1. Click the tab `Contact`
1. Click the tab `Profile` and then click the tab `Contact` again in few milliseconds.",,,bakedbird,"
--
Can't reproduce using
os: macOs
browsers tested: Chrome, Firefox, Opera, Safari
--

--
Was able to reproduce on my Android device. It only happened when tapping on another tab before the animation of the previous has finished.
--

--
@Johann-S Found a way to reproduce it on a browser if that would be of more help to you.

On the jsbin @magiclen provided
**Steps to reproduce**
- Have the first tab shown (Home)
- hit `tab` then `enter` twice, fast

this will have the second and third tabs open simultaneously (Profile, Contact).
Now, if you click on the first or second tab (Home, Profile) the Contact tab remains shown (until you click to show that one too).
--

--
@Johann-S Took me some days to train my speed too 😝 
--
",magiclen,"
--
I made a video on YouTube. If you can't reproduce, perhaps you can check out the following link,
https://youtu.be/feXLwYA8D9M

Currently, I'm sure this problem happens on Linux Mint, Windows and Android.
--
",Johann,"
--
Unable to reproduce it too 😟 
--

--
ok, so we should handle the transitionning state and disallow to change tabs during this transition
--

--
I think I'm not quick enough to reproduce that but thanks @bakedbird 😆 But I see where is the issue
--
",sbrugman,"
--
Similar problem when switching tabs on changing via a select downdown.
`<select class=""nav nav-pills form-control"" onchange=""jQuery('#v-pills-' + jQuery(this).val() + '-tab').click(); return false;"">`
When the fade animation is not done, clicking a tab (or emulating in this case), causes that the previous tab is not hidden anymore.

--
",,,,
25765,OPEN,Responsive 'show' classes for collapsible items,css; feature; v4,2018-03-03 21:05:27 +0000 UTC,drdogbot7,Opened,,"It would be useful to be able to set the initial state of collapsible items at different breakpoints using css classes.  e.g.  `.show-md`, `.show-lg`.

```
<p>
  <a data-toggle=""collapse"" href=""#collapseExample"" role=""button"">
    toggle button
  </a>
</p>
<div class=""collapse show-md"" id=""collapseExample"">
   shown by default at 'md' breakpoint and up.
</div>
```",,,bkdotcom,"
--
any luck with the display utilities?
http://getbootstrap.com/docs/4.0/utilities/display/
--
",mdo,"
--
Display utils would override entirely. I'm unsure how we'd do this other than it wouldn't be a `show-md` so much as a `collapse-md`. That becomes the opposite behavior of our navbar's _expand_ behavior then, too, which is built on collapse :).
--
",,,,,,,,
25692,OPEN,"$(el).popover(""update"") not calling placement method",js; v4,2018-11-21 09:47:06 +0000 UTC,adrianstas,In progress,,"Hi. 
From unknown reason the function used for set up popover position is called only once when popover is on showing. After window resize I want again display popoup using my custom placement function, but unfortunately $(""el"").popover(""refresh"") not using it

https://codepen.io/gtdc/pen/XZBRQq?editors=1111

scenario:
- click the ""click me!"" button <- function placement is used
- click the ""refresh"" button 
     is: placement function **isn't** called out
     should be: placement function **is** called out

Thanks a lot
",,,Johann,"
--
Bug reports must include a live demo of the problem. Per our [contributing guidelines](https://github.com/twbs/bootstrap/blob/v4-dev/.github/CONTRIBUTING.md), please create a reduced test case via [CodePen](https://codepen.io/) or [JS Bin](https://jsbin.com/) and report back with your link, Bootstrap version, and specific browser and OS details.
--

--
Hmm I think we should disable Popper.js auto repositionning when user provide a placement method
--

--
sure
--
",adrianstas,"
--
@Johann-S I prepared codepen script. Let to know if you need any additional info. thanks,
--
",XhmikosR,"
--
@Johann-S: is this still valid?
--
",,,,,,
25610,OPEN,Bootstrap dropdown calls stopPropagation unconditionally,js; v4,2020-01-10 21:01:01 +0000 UTC,stuartlangridge,In progress,,"A Bootstrap dropdown element, when first clicked, attaches a `click` handler to the element which calls `event.stopPropagation()`, thus breaking any handlers that were attached to ancestor elements such as the document.

Demonstration at http://jsbin.com/lapanag/1/edit?html,output which shows the problem.

Is there a reason why this is done? It seems that it will always break anyone who has, for example, a click handler on the document `body`. (Many frameworks do this, Meteor among them.) I assume there are compatibility reasons for it or similar?

This is mostly a duplicate of #17008, which was closed because bootstrap development moved from v3 to v4. The design bug is (as you can see from the demo above) still present in v4, I think.",,,Johann,"
--
I cannot reproduce your issue on your JSBin 😟

We have a `stopPropagation` only when Dropdown are in forms see : https://github.com/twbs/bootstrap/blob/v4-dev/js/src/dropdown.js#L468
--

--
Oh ok, I have the same behavior 
--
",stuartlangridge,"
--
Just to confirm, with my jsbin demo:

If you click outside the dropdown, the ""clicks on the body"" count is correctly incremented
If you click on the dropdown, the ""clicks on the body"" count is correctly incremented the first time only. Further clicks on the dropdown (expanding or collapsing it, doesn't matter) do not increment the count. (This is because on the first click on the dropdown, it propagates as normal, and as a result of that first click, Bootstrap attaches the click handler which calls stopPropagation).

Are you experiencing something different from that? That's weird. I'm using Chrome 64, but I see the same issue in Firefox as well. Does it continually increment the clicks on the body count every time you click the dropdown?
--
",patrickhlauke,"
--
i've not had a chance to delve into the code, but i have a vague hunch that this was done because, from memory, when the dropdown is opened, a click handler is added to the body to close the dropdown is the user clicks anywhere outside of the dropdown, and if the user clicks on the dropdown trigger element, it may have resulted in some weird ""closes, then opens again"" kind of behavior.
--
",aldencolerain,"
--
@stuartlangridge @patrickhlauke Another approach might be checking if the event target is inside a dropdown and if it is let the dropdown handler take care of it so there is no ""close then open"" behavior.  It seems like there must be another reason for this?
--
",anargh,"
--
This issue has become a real pickle for me. Would love to hear alternatives and an explanation for moving forward with stopPropagation. In my knowledge usage of stopPropagation should be avoided, to prevent situation like this.
--
",shenron,"
--
I know it's not a solution, more a quick fix. But it works:
Catch the show/hide event and propagate a new custom event, the first time the counter increased twice because 'native' click event works once.

http://jsbin.com/jiyuhihuya/1/edit?html,output


--
"
25550,OPEN,BS4 custom.scss issue,css; docs; help wanted; v4,2021-01-10 03:29:26 +0000 UTC,ray73864,In progress,,"I must be the thickest person around.

Anyway, i'm trying to compile a slightly customised version of BS4, in this instance, number of columns/gutter size and form-control focus background colour.

I am using the source-download (using the instructions found in ""Tool Setup"" for windows, everything is working perfectly in that regard).

I went into my 'bootstrap' directory (the one that has node-modules, dist, scss, docs, etc...), shift-right clicked and chose 'Open Powershell window here' so that I could run the npm stuff, the environment is all set up and working, I can run 'npm run dist' and it creates all the css/min-css/js/min-js files in ""dist"".

I then went to follow the instructions for creating a custom.scss, I created that file in bootstrap/scss, imported all the optional stuff (the 'Theming' documentation has node_modules/bootstrap/scss which doesn't exist in my directory structure) so I changed it to match the bootstrap.scss file.

Changed $grid-columns, $grid-gutter-width, and $input-bg (I put these lines in before the import lines), re-ran 'npm run dist', checked the new bootstrap.css file and found it doesn't have my change for .form-control:focus in it.

I feel like i'm missing something, probably something minor.

If I make the change in _variables.scss and run 'npm run dist' it all works properly.",,,ray73864,"
--
Fired up a brand new Debian 9.3 VM, installed everything necessary, downloaded the source ZIP file, extracted it, ran 'npm install', everything installed fine (much better than on Windows), created a custom.scss file in /root/bootstrap/scss, added in my custom stuff, ran 'npm run dist', all created with no issues, checked /root/bootstrap/dist/css/bootstrap.css, still have none of my custom stuff in there.

My custom.scss file contains the following:

```
// Custom.scss
// Option B: Include parts of Bootstrap

// Override grid columns
$grid-columns:                48;
$grid-gutter-width:           8px;

// Override form-control focus colour, it needs to be lightblue!
$input-bg:                    ""lightblue"";

// Required
@import ""functions"";
@import ""variables"";
@import ""mixins"";
@import ""grid"";
```
--

--
Took the double quotes away from ""lightblue"", re-ran 'npm run dist', it errored out saying it didn't know what it was, so it is at least seeing the custom.scss file, it just doesn't appear to be doing much with it.
--

--
Importing custom.scss? I'm just doing what the 'Theming' page says to do 'https://getbootstrap.com/docs/4.0/getting-started/theming/'.

Though I don't have my directory structure set out like it shows because BS4 is the only NPM project thingy that I have (I didn't install BS4 from NPM, I simply downloaded the v4.0.0.zip file from github and extracted it, then made sure my node.js/Ruby environment was set up so that I could compile it).

My directory structure is basically '/root/bootstrap', all I want to do is customise a couple of things from BS4 without editing _variables.scss and the re-run 'npm run dist' so that my changes get compiled and I get a new .min.css and .min.js file that I can copy/paste to the webserver.

If I have to, I will just go back to changing _variables.scss, only reason I didn't want to have to do that was for in the future when a new BS4 patch comes out (such as the 4.1 that is currently being worked on).

The website is a point of sale system for the company I work for (so that our stores can sell to our trade customers), a long time ago it was decided that we would use some software that was created for the DB that we use, what it meant though was that all HTML files have to be stored in the database as this software pulls them out when a page is requested.

What it means though is that I can't use Angular or any of those fancy new concepts because a page request isn't a request for an HTML file it is a request for a Web-Object (basically a controller) which then determines the correct HTML file to pull out of the DB and show on screen (after internal markups are processed).

Which is why I have my directory structure set up the way I do, but hey, if the only option I am left with is changing _variables.scss then so be it, I was just hoping with BS4's new customisability that it was just a simple process of dumping a custom.scss file into bootstrap/scss and then hey presto it would work, if this is not possible, then the documentation should really be updated to reflect this.
--

--
That is how I have my custom.scss set up though.

My custom.scss is set up exactly as follows (as suggested by https://getbootstrap.com/docs/4.0/getting-started/theming/#importing):

```
// Custom.scss
// Option B: Include parts of Bootstrap

// Override grid columns
$grid-columns:                48;
$grid-gutter-width:           8px;

// Override form-control focus colour, it needs to be lightblue!
$input-bg:                    ""lightblue"";

// Required
@import ""functions"";
@import ""variables"";
@import ""mixins"";
@import ""grid"";
```
I placed my custom.scss into the same location as all the other Bootstrap 4 scss files (/root/bootstrap/scss), run 'npm run dist' but it never does anything.

What I can see is that under 'importing', it gives me 2 options, Option A is to just import all of Bootstrap's variables, etc... and Option B is to only import what I wish to change.

I am only choosing to change 3 things, all of which are in _variables.scss (Which I assume is being imported by @import ""variables""?)

However, looking at the 'variable defaults' section, it shows the import as being 'Option A' (Import the entire of bootstrap), these 2 sections seem to contradict each other, the first section suggests that Option B is the right way to go, however the second section suggests that 'Option A' is the only viable option.

bootstrap.scss is just a file containing a whole lot of imports and nothing else.

Am I to ignore the fact that there are 2 possible ways? (Option A, and Option B), and just go with the 'Option A' method of importing the entire of bootstrap via bootstrap.scss?

This is my first time using SASS (I am a SASS virgin basically) and it is the only project I will ever need that uses SASS, so I'm finding a lot of it rather difficult (even though I have a need to customise a few things, especially the number of grid columns).

Also, I would do a PR, but to do a PR I would need to figure out why the documentation is unclear in the first place, to me, it seems like the documentation is fine but the SASS setup is wrong, but then, as said, I know nothing of SASS so can't make that judgement call.
--

--
I am, yes, all I want to do is a minor customisation to BS4 without changing any BS4 files. 
The only use I have for SASS is to compile BS4.
--

--
Ahh OK, I figured since the Theming page said that a custom.scss should be created so that you don't have to modify the BS4 stuff that it wouldn't be necessary to do that.

If I have to alter the package.json file, then it would be just as easy to modify _variables.scss directly.
--

--
I'm still at a complete loss on this one.

I don't have my own package.json file, and looking at the Bootstrap 4 one, it looks like something out of a scary movie :(

I assume I would just create a directory structure such as: /root/bs4themes
Then inside that directory have my own custom.scss file, a simplified package.json, and the bootstrap4 directory?

I don't even understand where in css-compile i'm supposed to put custom.scss
--

--
@ThomasNucleus I have to agree, that's a lot of directory changes one has to do, I'm pretty sure it's extremely easy to miss one.

I'm not even entirely sure which ones I am supposed to change and which ones I'm not. Some of them look obvious, others you just can't tell.

When the help page was talking about customising it, I was just expecting to be able to drop a custom.scss file into bootstrap/scss, run 'npm run dist' and hey presto BS4's package.json thingy would auto-detect that I had a custom file in there and go with it.

What I've basically decided on doing right now (because it is the easier way so far) is having a separate directory for each 'theme' that I need (right now I need a light and a dark one), changing _variables.scss to suit, running 'npm run dist', then renaming the resultant bootstrap.min.css file to 'bootstrap-light.min.css' and 'bootstrap-dark.min.css'.

Obviously it's not the right way, but it is the most simplest unless someone can give an 'Idiots Guide to Customising Bootstrap 4'.

I tried searching on the net, but most guides I found are for earlier versions of BS4, some talked about an _custom.scss, others talked about a custom.scss, and others still talked about a completely different file for customising, it's just a complete mess right now in terms of useful guides for those that only need nodejs to deal with BS4.
--

--
@biteater I can't believe I didn't think of that method. Certainly easier than going through a very long _variables.scss file
--

--
Hrmm, adding my custom.scss to the top of bootstrap.scss didn't work either.

If I add it to the top of the file, I get my changes to the number of grids, I get my theme colours, but I don't have any of the other colours.

If I add it to the bottom of the file, I get my grid changes but nothing else.

I think i'm just going to go back to modifying _variables.scss, so far it is the only thing that has actually worked for me.
--

--
@ddn my problem was that I tried that, but I needed to update things that required access to the different maps (for colours, etc...) and trying to change/add before they got imported by _variables.scss just caused the sass compiler to complain and die.

Right now my method is to basically have multiple folders for each theme that I want (in this case a light and dark theme) and then edit the _variables.scss file, recompile, copy the dist/bootstrap.min.css file to the webserver (since my webserver is too old to work with the version of node.js required) and rename it to bs4-(dark/light).min.css.
--

--
They don't though, and as is evidenced by a few people commenting here, the documentation makes no mention of how to make a custom.scss file work.

I've basically had to resort to just having several directories for BS4, each with various modifications to _variables.scss as the helpfile provides no help at all in this case.

It MAY help people who know and use SASS for other projects, but for someone who just wants to customise bootstrap4 itself it provides little help.

Though because I have to edit _variables.scss, I am basically stuck on Bootstrap 4.0, unable to really move up to another version until I notate what changes I made.
--

--
I'm not entirely sure how I could make a PR to begin with. I simply don't understand how to do it and lack the time to try and work it out.

And near as I can tell, the documentation for 'Theming' in 4.1 is identical to what it was in 4.0 when I first created this issue.

By closing the issue, you've effectively said 'we don't care about how bad the documentation is', as it now hides the issue from people who could potentially fix it up to help people like me.
--

--
I've been using theme-kit lately, it's made things a little bit simpler as I couldn't get my head around how to make it work at all when looking at the BS4 documentation.
--
",C,"
--
Are you importing `custom.scss` **before** `variables.scss`? If so, then your varriables will be overriden, assuming the names are the same
--
",andresgalante,"
--
Hi @ray73864 the guide is correct, please read https://getbootstrap.com/docs/4.0/getting-started/theming/#variable-defaults

If the guide is not clear enough, it'd be great if you could send a PR to improve it based on your struggles.

The trick, as @C-Lodder mentions,  is to load your variables before bootstrap. that's how SASS works.
--

--
If you need all of bootstrap the easier way to do it is like to create an scss file, let's call it `app.scss` where you'll import `bootstrap.scss` and `_your-styles.scss`:

```
@import ""_your-styles"";

Include all of Bootstrap
@import ""node_modules/bootstrap/scss/bootstrap"";
```

Then compile `app.scss` to generate a `app.css` file that you'll use on your app.

--

--
@mmbpeople since custom.scss is importing bootstrap, then by compiling custom.scss into custom.css you'll get bootstrap + your things.

Maybe you are right and we need better guides. This will requiere an explanation of tooling, set up, etc. I don't know what is out of scope in this case.
--
",mdo,"
--
Point of clarification @ray73864—are you trying to compile your `custom.scss` file with our build tools  that are in this repository?
--

--
If you're using our build tooling, you'll need to modify it to build your own custom Sass file. See the scripts section in `package.json`, specifically the `css-compile` task at https://github.com/twbs/bootstrap/blob/9057d8da164bed683f49d30c6414753dad41de3e/package.json#L24. You'll need to change or add your `custom.scss` there.
--

--
This issue faded away and the since then we've created https://github.com/twbs/bootstrap-npm-starter which should help show folks how to compile (at least with npm) a custom build of Bootstrap. I'm thinking we can link this from both the v4 and v5 docs to help show folks how it works.

Perhaps we also need a more comprehensive guide on the compiling aspect per the last comment here?
--
",wolfy1339,"
--
I would just not touch vendors files.
Copy the script over to your `package.json` after editing it like mdo said and using a `_custom.scss`.
That way if bootstrap releases a new version, you won't have to re-apply the changes to either `package.json` or `_variables.scss`
--

--
Please read previous comments.
You don't need to change anything in Bootstrap's `package.json`
Make a `package.json` file, then use [this template](https://gist.github.com/matt-bailey/45246a9d19ecd3b9cdad), then copy the `scripts` section from Bootstrap's package.json and apply the changes you've made
--
",rik26,"
--
Hi,

Sorry guys, but customizing bs4 is a real pain in the ass.

Most tutorials are for bs4 alpha et beta. The nodejs way isn't really clear. There seems to be dozen of different explanation over the web.... and i'm lost right now.

I also tried to download the zip add a custom.scss. But the doc doesn't tell what to do to recompile : https://getbootstrap.com/docs/4.0/getting-started/theming

Maybe it's obvious to you because you wrote all the code, but for someone discovering the whole thing, it's really hard / esoteric.

Hope you won't get mad at me and just explain the whole process clearly.


--
"
25529,OPEN,New feature suggested for Dropdown: able to disable Popper's preventOverflow,feature; js; v4,2018-02-02 08:12:40 +0000 UTC,mapher87,In progress,,"Get an issue when using [Menu forms](https://getbootstrap.com/docs/4.0/components/dropdowns/#menu-forms) with a large form which is supposed to fix itself below the button.
The PreventOverflow feature is good, but we'd disable it in a lot of cases which is impossible when using Dropdown.

Thanks and Best Wishes.",,,Johann,"
--
Bug reports must include a live demo of the problem. Per our [contributing guidelines](https://github.com/twbs/bootstrap/blob/v4-dev/.github/CONTRIBUTING.md), please create a reduced test case via [CodePen](https://codepen.io/) or [JS Bin](https://jsbin.com/) and report back with your link, Bootstrap version, and specific browser and OS details.
--

--
A quick fix would be to add this line on your application : 
```js
Popper.Defaults.modifiers.preventOverflow = { enabled: false };
```

See the result here (with our first stable v4) : https://codepen.io/Johann-S/pen/vdNymv?editors=1010

Side note : not possible to do that if you use `bootstrap.bundle.js` or `bootstrap.bundle.min.js` 
--

--
They are a PR to disable Popper.js for dropdown : https://github.com/twbs/bootstrap/pull/24092
--
",mapher87,"
--
https://codepen.io/anon/pen/QQjKEJ
Click the button several times or scroll up and down, you will see the form reset its position by the preventOverflow feature.

This case use bootstrap 4.0.0 beta3
--

--
As there is an option ""data-boundary"" to manage the behavior of the preventOverflow, would you like to disable one Dropdown's preventOverflow feature by given false or null? 

For example:
```html
<button type=""button"" data-boundary=""false"" ...>
  button
</button>
```
--
",,,,,,,,
25432,OPEN,Bootstrap Tooltips display for effectively invisible elements when toggled manually,js; v4,2018-04-30 09:35:02 +0000 UTC,proteus-aholt,Opened,,"- Operating system and version (Windows, Mac OS X, Android, iOS, Win10 Mobile)
  Linux - Ubuntu 16.04
- Browser and version (Chrome, Firefox, Safari, IE, MS Edge, Opera 15+, Android Browser)
  Chrome 63
- Reduced test cases and potential fixes using [CodePen](https://codepen.io/) or [JS Bin](https://jsbin.com/)

Tried looking to see if there was anything already opened about this, but could not find any current issues related.

When toggling tooltips using `$('.selector').tooltip()` with a selector that matches on both elements that are visible and elements that are effectively not displayed, the tooltip is still toggled on those elements that are not displayed.

I think this is a result of the code within `tooltip.js` that checks the css `display` property, when it should, instead, check if the entire element is actually visible.

```
show() {
      if ($(this.element).css('display') === 'none') {
        throw new Error('Please use show on visible elements')
      }

      const showEvent = $.Event(this.constructor.Event.SHOW)
```

should be

```
show() {
      if (!$(this.element).is(':visible')) {
        throw new Error('Please use show on visible elements')
      }

      const showEvent = $.Event(this.constructor.Event.SHOW)
```

or

```
show() {
      if (!$(this.element).is(':visible')) {
        console.warn('Please use show on visible elements');
        return;
      }

      const showEvent = $.Event(this.constructor.Event.SHOW)
```

I'm in favor of logging a console warning here, rather than throwing an error.  A jquery selector can _easily_ select multiple elements, and throwing here can cause a short-circuit of the enumeration, resulting in some odd tooltip behavior.

I have put together a CodePen as a demo: https://codepen.io/aholtventuretech/pen/WdBmJG

Unless there is a completely sane reason to show tooltips for elements that aren't displayed, in which case, feel free to disregard.",,,Fouzyyyy,"
--
What about silently ignoring invisible elements? and only show tooltip on visible elements?
--
",proteus,"
--
That would be acceptable, as well, to me.   Was trying to keep the original functionality, to an extent, by letting the developer know that they were trying to show a tooltip for an invisible element
--
",Johann,"
--
`:visible` isn't a good solution here, related to jQuery documentation see: 
>Elements with visibility: hidden or opacity: 0 are considered visible, since they still consume space in the layout.

https://api.jquery.com/visible-selector/

maybe a combination like that should be better : 
```js
if ($(this.element).is(':hidden') || $(this.element).css('display') === 'none' || $(this.element).css('opacity') === '0') {

--
",,,,,,
25366,OPEN,[v4-dev] dispose method of alert and button is omited,js; v4,2018-01-21 20:26:05 +0000 UTC,tangxuyang,In progress,,"I am reading bs4 source code recently.
Today I find that the alert and button components forget to expose the dispose method. I think it is a bug. Below is the source code and I comment it.
```
    static _jQueryInterface(config) {
      return this.each(function () {
        let data = $(this).data(DATA_KEY)

        if (!data) {
          data = new Button(this)
          $(this).data(DATA_KEY, data)
        }

        if (config === 'toggle') {// here is the problem^_^
          data[config]()
        }
      })
    }
```",,,Johann,"
--
Good catch ! 👍 
A quick solution if you can't wait for a fix would be : `$('#yourButton').data().dispose()`
--
",tangxuyang,"
--
Thanks for your reply. 
I just learn you guys' coding practice through reading the source code.

--
",,,,,,,,
25335,OPEN,[v4 beta-3] Scrollspy: issues with Firefox,confirmed; js; v4,2019-01-07 19:13:53 +0000 UTC,Vitaliy-1,Opened,,"Don't know really if it is a bug. 
I am using Scrollspy for spying on elements just like in Bootstrap documentation. With Google Chrome all work ideally, but when using Firefox, it can be seen that on clicking an item from the menu the previous menu item becomes active (but not the one that was clicked).
You can see the example from the Bootstrap site by clicking these items on Firefox browser (except item 3-2):
http://getbootstrap.com/docs/4.0/components/scrollspy/#item-1-2",,,mdo,"
--
Confirming this is still an issue in v4.1 in latest macOS Firefox.
--
",,,,,,,,,,
25323,OPEN,[v4 beta-3] bug: dropdown('dispose') method doesn't seem to work.,docs; help wanted; js; v4,2021-01-11 01:00:08 +0000 UTC,WebDevBooster,In progress,,"Just came across the following SO post. 

According to that the `$().dropdown('dispose')` method doesn't seem to work... 

https://stackoverflow.com/questions/48243220/bootstrap-destroys-an-element-s-dropdown",,,mdo,"
--
Is there a live demo of the problem?
--

--
@Johann-S I'm unsure where in the source code this is an issue, but I tried disposing `.dropdown.show` from the Safari inspector and it did nothing. Using `toggle` worked perfectly though.
--

--
Hmm, maybe that's the problem. Folks are expecting `dispose` to destroy it, but it's unclear what that means. If `toggle` is the only way to remove, we need to clarify our docs everywhere to explain that.
--

--
Is this still relevant?
--
",xiuno,"
--
I have the same problem, becuase in modal dispose, only clear the variable to null, but DOM not removed. 

File: bootstrap.js Line: 2047:
```
    _proto.dispose = function dispose() {
      $$$1.removeData(this._element, DATA_KEY);
      $$$1(window, document, this._element, this._backdrop).off(EVENT_KEY);

      
      // fix by axiuno: remove the DOM
      $(this._dialog).remove();
      $(this._backdrop).remove();
      $(this._element).remove();
      // fixed end
      
      this._config = null;
      this._element = null;
      this._dialog = null;
      this._backdrop = null;
      this._isShown = null;
      this._isBodyOverflowing = null;
      this._ignoreBackdropClick = null;
      this._scrollbarWidth = null;
    };
```
--

--
modal have the same problem, dropdown I have not use yet.
--
",Johann,"
--
Our dispose method : clear listener and our variables that's all see : https://github.com/twbs/bootstrap/blob/v4-dev/js/src/dropdown.js#L187

@xiuno what you linked isn't the dropdown's dispose method
--

--
I don't see issue in Dropdown and Modal but if you have an issue please create a new issue with a live example which show your bug @xiuno 
--

--
Dispose should only clear our internal vars that's all but if you prefer we can add this behaviour to close the current Dropdown 
--
",WebDevBooster,"
--
I'm glad to hear that @xiuno can confirm the problem and provide further information. I myself have absolutely no clue about this particular problem. I just saw that post on SO and thought it would be a good idea to alert you guys about this issue.
--
",peterblazejewicz,"
--
@WebDevBooster 
The BS listens for document-level events and matches instances via data attrib. So on next event the control is being rebuilt from the ground up (the 'destroy' does what it means, the 'create' phase is not obvious here).
This will remove and deactivate:
```js
$().dropdown('dispose').removeAttr('data-toggle')
```
or better (less obtrusive):
```js
$().dropdown('dispose').prop('disabled', true)
```
--
",woto,"
--
Oh, may be it will help to locate the problem https://codesandbox.io/s/bootstrap-dropdown-demo-forked-ds6k4?file=/src/index.js
Thought that I'm doing something wrong :(

Damn there are also undocumented 'show', 'hide' methods!
https://codesandbox.io/s/bootstrap-dropdown-demo-forked-l926n
Happy again!
--

--
Can't say. Do not use this feature. Also switched to v5
--
"
25277,OPEN,Modal tabbing and shift+tabbing behavior,accessibility; js; v4,2019-05-21 15:31:50 +0000 UTC,andrewnding,In progress,,"Not sure if this is intended behavior, but the outermost div with the modal class has a tabindex of -1, which seems to me that it should get initial focus when the modal opens, but should not be reachable again by tabbing. However you can tab to it, which makes it seem like the focus highlighting has disappeared.

Another related possible issue is that when shift+tabbing, nothing happens if you try to shift tab past the first focusable element (so that the focus is on the outer div with tabindex -1). I would expect the focus to go from the first focusable element to the last focusable element, much like how if you tab forward, it jumps from the last focusable element to the first focusable element.

Modal demo for reference: https://getbootstrap.com/docs/4.0/components/modal/#live-demo",,,patrickhlauke,"
--
`tabindex=""-1""` should not be re-focusable by TAB/SHIFT+TAB. i suspect it's the JS that currently sets focus back to it (the JS that is meant to maintain focus inside the modal), as normally negative tabindex only indicates something as being programmatically focusable, and not in the regular focus cycle.

and yes, while not mandatory, it would probably be good if the focus handling ""wrapped"" the focus cycle, as per https://www.w3.org/TR/wai-aria-practices-1.1/#dialog_modal (so that once focus is on last item, next TAB sets it back to the first item, and vice-versa).
--

--
it is valid and desireable to have focus set to the dialog itself when it first opens - see https://github.com/w3c/aria-practices/issues/442. generally, even for wcag/508 compliant dialogs, that initial focus does not fail visible focus requirements (once the JS issue is addressed that re-cycles into the `tabindex=""-1""` modal itself.
--
",andrewnding,"
--
Ok that's what I suspected for the `tabindex=""-1""` behavior. So a followup question I would have is should the `tabindex=""-1""` div get focused at all, or would it be preferable to have it just be skipped over entirely? To meet 508 standards for my project, I can't have the `tabindex=""-1""` div ever get focused since there's no visual indicator for it when it is focused, and I imagine that other users might have the same problem. If this is a direction that would make sense to head in, I'd be glad to take a stab at an implementation that would not cause the focus to disappear, as well as backward-wrapped tabbing.

https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_focus_discernable_predictable
--

--
I see that makes sense. Yeah I would be ok with having the focus initially set to the containing div with `tabindex=""-1""`, as long as that `tabindex=""-1""` div does not get refocused while tabbing through. I can try working on the following issues then:
- Prevent the outer tabindex=""-1"" div from getting focused while tabbing through the modal (aside from it being initially focused)
- Allow backwards tabbing to wrap around when reaching the first focusable element
--
",wangpung12,"
--
Good
--
",b,"
--
> * Prevent the outer tabindex=""-1"" div from getting focused while tabbing through the modal (aside from it being initially focused)
> * Allow backwards tabbing to wrap around when reaching the first focusable element

How do I do this? And how do I focus on modal-dialog for example? 
--
",,,,
25267,OPEN,Popover on hover of item at top-left of page broken in IE11,confirmed; js; v4,2021-03-15 19:29:45 +0000 UTC,TheAnsarya,In progress,,"Bootstrap 4 beta 3
OS: Windows 10 (1511)
Browser: IE 11.1295.10586.0CO

This issue only seems to affect IE11 (and IE10) which are considered supported browsers. Chrome 63 is fine and Firefox 57 has a slight stutter but still works. This was also occurring in beta 2.

When a Popover is activated on hover by an element on the top left of the page, it is initially placed at top=0, left=0 and so the mouse is over the Popover, not the hover trigger so the Popover is hidden, which triggers the hover event again and this loop repeats very quickly causing the Popover to flash on the screen (still in the wrong position).

This can be recreated with a very simple demo:
```html
<body>
	<button id=""popoverButton"" class=""btn btn-primary"">Popover</button>
</body>
```
```javascript
$(function() {
	$(""#popoverButton"").popover({
		trigger: ""hover"",
		title: ""Title of the popover"",
		content: ""Enough content to make the Popover appear over the trigger.""
	});
});
```
( CodePen here: https://codepen.io/ansarya/pen/dJmdMm )

I haven't found any mention of this on the internet or in the issues or in the BS4 documentation. I also have not been able to find a fix on my own although I did wonder if it has to do with the top=0, left=0 and the position being determined by the transform property instead and IE not handling the transform immediately.

I do hope this is the correct place to raise this issue and if not, please direct me there.",,,Johann,"
--
Confirmed on IE 11 (with Win 10)
--

--
Seems like a positioning issue here 😟 

/CC @FezVrasta 
--
",ysds,"
--
Quick fix: Add `pointer-events: none` into popover via `template` option:
```js
template: '<div class=""popover"" role=""tooltip"" style=""pointer-events: none;""><div class=""arrow""></div><h3 class=""popover-header""></h3><div class=""popover-body""></div></div>',
```
--

--
Yes it just a quick fix for hover trigger. It will make low usability when click trigger because `pointer-event: none` disable selectable text in the popover. A fundamental fix should be necessary.

--
",TheAnsarya,"
--
@ysds - The quick fix does work well in IE 11.

https://codepen.io/ansarya/pen/qpMLRJ

I doubt if `pointer-events: none;` is appropriate for all Popovers but it does work in this use case.
--
",kbeckwith,"
--
Still broken
--
",VSquash,"
--
Still broken in IE
--
",,
25220,OPEN,Allow anchor links to automatically load JS tabs,feature; help wanted; js; v4,2021-01-10 03:15:09 +0000 UTC,ucffool,Opened,,"Currently it's necessary to add a small junk of JS (created below) to activate NAV tabs/pills based on the anchor link provided on the tab/pill itself when a page is loaded. This is for **deep linking** to a tab/pill on a page. This feature request is to integrate this *behaviour* automatically as part of bootstrap v4 JS.

```JS
// Show appropriate pill based on #anchor in URL
var url = window.location.href;
if (url.indexOf(""#"") > 0){
var activeTab = url.substring(url.indexOf(""#"") + 1);
  $('.nav[role=""tablist""] a[href=""#'+activeTab+'""]').tab('show');
}
```",,,XhmikosR,"
--
You can always make a PR.
--
",alainravet,"
--
You can obtain the url anchor directly with `window.location.hash`
```javascript
const anchor = window.location.hash;
$(`a[href=""${anchor}""]`).tab('show')
```
--
",weilinzung,"
--
@alainravet if possible also offset it to the anchor section?
--

--
never mind the offsetting function, this works for me.

```
.tab-pane {
     &::before {
       content: """";
       display: block;
       height: 80px;
       margin: -80px 0 0;
   }  
 }
```
--

--
@alainravet for this one 
```$(`a[href=""${anchor}""]`).tab('show'); ```
 if use `grave accent symbol(``)` on IE said Invalid Character which would not working on IE11.
--
",inwardmovement,"
--
Here is a code that handles a) changing the url on tab click and b) switching to it:

```
// LINK TO TABS
$(document).ready(() => {
  var url = window.location.href;
  if (url.indexOf(""#"") > 0){
  var activeTab = url.substring(url.indexOf(""#"") + 1);
    $('.nav[role=""tablist""] a[href=""#'+activeTab+'""]').tab('show');
  }

  $('a[role=""tab""]').on(""click"", function() {
    var newUrl;
    const hash = $(this).attr(""href"");
      newUrl = url.split(""#"")[0] + hash;
    history.replaceState(null, null, newUrl);
  });
});
```

Indeed it would be great if it was a default and/or switchable feature (via Sass variables).
--
",LightIllusion,"
--
Upfront warning - I have no real idea regarding scripts...
But, I am trying to use Deep Linking, and while I can get the correct tab to be selected and opened, I can't get the page to jump to the tab's location...
Any help appreciated.
https://www.lightillusion.com/testing-2.html#tabs-3
--

--
Just for info, and for any others searching the same issue, this is the code that eventually worked for me, opening the tab, jumping to its location, and allowing an offset for the menu bar.

```javascript
      $(document).ready(() => {
        var url = window.location.href;
          if (url.indexOf(""#"") > 0){
          var activeTab = url.substring(url.indexOf(""#"") + 1);
          $('.nav[role=""tablist""] a[href=""#'+activeTab+'""]').tab('show');
          var position = $(""#tab-options"").offset().top -57;
          $(""html, body"").animate({
            scrollTop: position
        }, 1000);
        }
      });
````
--
",,
25151,OPEN,Add documentation about bootstrap global var,docs; help wanted; js; v4; v5,2021-01-13 20:21:12 +0000 UTC,Johann-S,Opened,,"Since our beta 2 and now in beta 3, we have a `bootstrap` var available in the global scope, which allow folks to do for example : 

```js
bootstrap.Util.getUID('test')
```
So we should add that somewhere in our documentation",,,mstill3,"
--
I can handle this
--
",developerhb,"
--
Hello @Johann-S . I would like to start contributing to bootstrap. If @mstill3 is not working on this issue, I would like to work on this.
--
",mdo,"
--
Imagine this should go on https://getbootstrap.com/docs/4.5/getting-started/javascript/. What should be documented, if this is still relevant?
--
",XhmikosR,"
--
That everything is under the `window.bootstrap` object. Unsure what and how to document this, but we should do it eventually.
--
",,,,
24755,OPEN,Navs - activate hidden tab,js; v4,2020-11-21 13:23:55 +0000 UTC,ArmRes,In progress,,"In bootstrap 4 alpha 6 this code work (activate tab3, but only once)
In bootstrap beta 2 don't work, even once.

```html
<div>
  <ul class=""nav nav-tabs align-items-center"">
    <li class=""nav-item"">
      <a class=""nav-link active"" data-toggle=""tab"" data-target=""#tab1"" href="""">Tab 1</a>
    </li>
    <li class=""nav-item"">
      <a class=""nav-link"" data-toggle=""tab"" data-target=""#tab2"" href="""">Tab 2</a>
    </li>       
  </ul>
</div>
<div class=""tab-content"">
  <div id=""tab1"" class=""tab-pane fade show active"">
    Tab 1 <a data-toggle=""tab"" data-target=""#tab3"" href="""">Activate tab 3</a>
  </div>
  <div id=""tab2"" class=""tab-pane fade"">
    Tab 2
  </div>
  <div id=""tab3"" class=""tab-pane fade"">
    Tab 3
  </div>
</div>
```

It is necessary to be able to switch the panel from other panels, but at the same time in tab navs it was not",,,Johann,"
--
Bug reports must include a live demo of the problem. Per our [contributing guidelines](https://github.com/twbs/bootstrap/blob/v4-dev/.github/CONTRIBUTING.md), please create a reduced test case via [CodePen](https://codepen.io/) or [JS Bin](https://jsbin.com/) and report back with your link, Bootstrap version, and specific browser and OS details.
--

--
seems a bug in v4.1.3 too: https://codepen.io/Johann-S/pen/JmrYNQ
--
",ArmRes,"
--
OS: Windows 7; Browser: FireFox 52.4.1 (esr) & Chrome 62.0.3202.94

Action steps: 
1) Click ""Activate Tab 3""
2) Click ""Tab 2""
3) Click ""Tab 1""
4) Click ""Activate Tab 3""

[Bootstrap-4 alpha-6](https://codepen.io/armres/pen/ooWRrb): Step 4 - don't work, tab 3 in step 4 don't show
[Bootstrap-4 beta-1](https://codepen.io/armres/pen/qVjdvE): After step 1, tab 3 don't hide
[Bootstrap-4 beta-2](https://codepen.io/armres/pen/NwjVMw): Step 1 - don't work, tab 3 - don't show
--

--
@wolfy1339 update post
--

--
@Johann-S 
Anyone
--
",wolfy1339,"
--
What version of Windows, what version of Firefox

We also need browser version.
--
",XhmikosR,"
--
Is this still an issue?
--

--
I think this markup isn't supported by our plugin. Not sure if there's something we can do.
--
",,,,
24640,OPEN,Tooltip/popover overwrites existing aria-describedby attribute,js; v4,2019-02-22 01:15:26 +0000 UTC,tmorehouse,In progress,,"- Operating system and version : Any
- Browser and version: Any
- Reduced test case: https://codepen.io/tmorehouse/pen/RjWMgg (Bootstrap latest DEV version)

Tooltips and popovers do not preserve the trigger element's existing `aria-describedby` attribute value. 

The `aria-describedby` attribute supports specifying multiple space separated element ID's.

When adding a tooltip or popover to an element that has an existing `aria-describedby` attribute, the attribute is removed. And when opened the attribute is set only to the auto generated tooltip/popover ID.  When the tooltip (or popover) is closed, the original `aria-describedby` is not restored. (the attribute is completely removed)

The above codepen results in the following markup:
![image](https://user-images.githubusercontent.com/2781561/32302029-5eb5e83e-bf3f-11e7-9e12-3526241914a9.png)

Noe that the original `aria-describedby` attribute is not present on the input element.


**Expected behavior:**
That the tooltip (or popover) ID is added to the existing `aria-describedby` attribute when opened, and when closed the tooltip/popover ID is removed from the `aria-describedby` attribute (leaving any original ids in the attribute).  If there wasn't any `aria-describedby` attribute on the trigger element, then the attribute can be removed.",,,tmorehouse,"
--
The following code can be used to add/remove the tooltip/popover ID from `aria-describedby` (assumes the generated ID is in `id`)

```js
// Setting aria-describedby:
let adb = el.getattribute('aria-describedby') || ''
el.setAttribute('aria-describedby', adb.split(/\s+/).concat(id).join(' '))

// Clearing aria-describedby:
let adb = el.getAttribute('aria-describedby') || ''
adb = adb.split(/\s+/).filter(i => i !== id).join(' ')
if (adb) {
  el.setAttribute('aria-describedby', adb)
} else {
  el.removeAttribute('aria-describedby')
}
```
--
",,,,,,,,,,
24290,OPEN,Allow for popovers to stay open while hovered,feature; js; v4,2018-12-24 04:51:16 +0000 UTC,ashkitten,Opened,,"When I hover a popover trigger, then move my mouse the popover that appears, I expect for the popover to stay open as long as my mouse is on either the trigger or the popover itself. Can this behavior be implemented?

I would provide a gif of this behavior but I'm not sure how to record it.",,,,,,,,,,,,,,
24032,OPEN,Tooltip data-trigger with multiple triggers not working properly,js; v4,2021-01-20 21:46:25 +0000 UTC,asilcetin,In progress,,"[The documentation on tooltips' options](https://v4-alpha.getbootstrap.com/components/tooltips/#options) states that for the data-trigger attribute ""you may pass multiple triggers; separate them with a space.""

However when I use data-trigger=""focus click"" as in https://jsfiddle.net/8wc25b0e/ the trigger behaviour is strange: The tooltip is shown on click (so far so good) but it hides only after you click first on the button AND then somewhere else on the screen (losing focus), which would make no sense from a good UI perspective.

I think this combination (focus and click) is something that people would use often, which normally should result in tooltip being shown on click (which is a good choice for touchscreens rather than hover) and hidden on either click on the button OR somewhere else on the screen (losing the focus).

So I propose making the multiple data-trigger values work with OR logic rather than AND.",,,Johann,"
--
Same result with our last release : https://codepen.io/Johann-S/pen/yzJpBM
--
",freakymittal,"
--
Can you try
[Codepen](https://codepen.io/mayank_mittal/pen/gGxaQr)
--
",asilcetin,"
--
@mayank-mittal good that now it hides on clicking outside but it should also hide when user clicks the button again. That would be the behaviour of ""click OR focus"" that I imagine.
--
",Babita,"
--
That's exactly what I need. Do we now have anything in place for it?
--
",alecpl,"
--
The same for hover+click which is my use-case.
--
",obakengcondurre,"
--
> @mayank-mittal good that now it hides on clicking outside but it should also hide when user clicks the button again. That would be the behaviour of ""click OR focus"" that I imagine.

Were you able to resolve this issue?
--
"
24010,OPEN,Get the original event in event handlers,js; v4; v5,2019-12-23 10:17:42 +0000 UTC,alecpl,Opened,,"I'm using v4 beta's popovers with `trigger:'click'`, but it also works with Enter key which is good.

In the shown.bs.popover event handler I'd like to know whether the popover has been invoked by mouse or keyboard. The first argument of the handler is an event object, but it does not have originalEvent property.

The purpose is to focus first item of the list or first input in the form inside the popover, but only when it's been opened using keyboard. See also #18618. 

An additional feature request would be to add a possibility to pass the original event as a 2nd argument of `.popover('show')` call (also 'hide', 'toggle' and 'dispose').
",,,,,,,,,,,,,,
24005,OPEN,Popover documentation improvements; data-content movement and data-target feature,docs; feature; js; v4,2019-07-20 10:23:45 +0000 UTC,bkdotcom,Opened,,"## documentation
https://getbootstrap.com/docs/4.0/components/popovers/

What is this bullet under ""overview"" referring to?:
> When triggered from hyperlinks that span multiple lines, popovers will be centered. Use `white-space: nowrap;` on your <a>s to avoid this behavior.

anchor text?   popover content?  I couldn't reproduce.
example or remove the bullet

## Dismissible popovers
> Use the focus trigger to dismiss popovers on the next click that the user makes.""

Ironically not dismissed if the next click is on the button that opened the popover.  Yet Non-dismissible popover will toggle the popover on repeat btn clicks

## options
content option:  string | element | function
   * example usage for element/jquery-obj would be nice ie `$('#myPopoverContent')`
   * specifying an element currently moves the element within the dom when popover is displayed
   * since the element is moved,  something like `<div id=""myPopoverContent"" class=""d-hide"">tada</div>` will remain hidden.  calling `.show()` will not overwrite the `.d-hide`'s !important
   * add a small note that ""obviously"" only a string may be specified via `data-content` attribute
   
## Feature request:
new option:  `target`
This would provide the ability to specify content element via `data-target` attribute much like one can do with a modal.    
By providing this option, the ""element"" type could/should? be deprecated/removed from the `content` option",,,Johann,"
--
about dismissible popovers, I think that's the wanted behavior, so to close your popover you should click outside of the `<button>` which trigger your popover.

If you want to submit a PR which handle things you described do not hesitate :wink: 
--
",mdo,"
--
Addressed your first two points in 1a569bab3. Unsure how to handle the third—can you or @Johann-S take a stab at it?
--
",,,,,,,,
23813,OPEN,Improve docs with includes list,docs; feature; v4,2018-08-11 15:45:13 +0000 UTC,franz-josef-kaiser,Opened,,"The maybe toughest thing to get your head around when using TWBS is finding out which files are needed to be included when one wants to use a component. I have just (again) gone through all the hoops with the migration of a build that originally started with `v0.4.0-alpha.2` and is now on `v0.4.0-beta`. Files disappeared, additional ones were necessary and it took me three hours of just finding out what's missing and what changed. 
FYI: This is not a ""include CSS and JS from CDN and call it a day""–site, but one that includes only what's actually in use (by `@import`ing SCSS files, etc.).

**Feature request for documentation:** Please, add the files needed (SCSS, JS) that make a component work.",,,Johann,"
--
I think it's good idea 👍 
--
",andresgalante,"
--
If this can be automated, it'd be awesome!
--
",XhmikosR,"
--
We could add a new data file with each Javascript component and its dependencies.
--
",ohcibi,"
--
Almost a year with no activity so far. Any updates on this? Foundation had this ages ago. Its a freakin pain to create a custom bootstrap build for the reasons @franz-josef-kaiser describes.
--
",wolfy1339,"
--
Well, you could start by linking the same file names together, since they are the name of the component.
--
",,
23809,OPEN,Scrollspy beta 4 active state trigger points,js; v4,2018-09-18 07:28:12 +0000 UTC,DannyJoris,In progress,,"I'm confused on some of the behaviour of Scrollspy, and at this point I'm not sure if it's a bug or something I did wrong.

When the scrollable element is not the default window, the offset to the page top still affects when the nav links get set to active. Note that the navigation isn't fixed position, the navigation and content aren't positioned on top of each other: https://codepen.io/DannyJoris/pen/ZJwdbv

Active states are accurate here because the scrollable div has the same offset top as the window: https://codepen.io/DannyJoris/pen/dzaxyG

Also in this case both the window scroll position _and_ the scrollable element's position get updated. This seems confusing as I'd only expect the scrollable element (the one with `data-spy=""scroll""`) to update, not the window scroll: https://codepen.io/DannyJoris/pen/BdMXym

Clicking the navigation does always set the scrollable element to the correct position though. It's just that the active state trigger points seem inaccurate.",,,Johann,"
--
You can adjust the accuracy of our Scrollspy by using `data-offset` attribute see : https://getbootstrap.com/docs/4.0/components/scrollspy/#options
--

--
If you have something which is variable you should call the `update` method see : https://getbootstrap.com/docs/4.0/components/scrollspy/#methods

Currently we just jump on each sections vertically not horizontally if it's what you mean by ""double scroll position jump""
--

--
Sorry but I don't see any change on the `.scrollspy-example-content` except the move of the scrollbar and they are no change on the window offset 😟 
--
",DannyJoris,"
--
Thanks, I guess it works when there's a fixed offset: https://codepen.io/DannyJoris/pen/eEXZLW

But what if the offset to the window top is variable? I feel like the offset should be calculated to the top of the element and not to the top of the window.

And what about the double scroll position jump?
--

--
With the double jump I mean this: https://codepen.io/DannyJoris/pen/BdMXym
Clicking the navigation item updates both the `.scrollspy-example-content` element offset _and_ the window offset. I would expect it should only update any element with `data-spy=""scroll""`, not the window.

That's why I find it confusing that the window offset affects the offset in a contained (not `body`) `data-spy=""scroll""` element.
--

--
Oh ok, maybe it's a cross browser issue. I'm on Chrome 60, macOS 10.12.6.

![ilcxejx6sd](https://user-images.githubusercontent.com/110365/30005700-b55d67ac-90be-11e7-9ebd-0fdf7486ceb7.gif)

--
",dhimaskirana,"
--
I'm on Chrome version 68.0.3440.84 (Official Build) (64-bit) Windows 7 Professional and still have the same problem.

https://stackoverflow.com/questions/51691018/bootstrap-scrollspy-with-smooth-scroll-wrong-target
--
",orianna,"
--
> Oh ok, maybe it's a cross browser issue. I'm on Chrome 60, macOS 10.12.6.
> 
> ![ilcxejx6sd](https://user-images.githubusercontent.com/110365/30005700-b55d67ac-90be-11e7-9ebd-0fdf7486ceb7.gif)

I use scrollspy in my hugo theme and I came up with a similar problem. I checked on the bootstrap.js and found that `offset` is float array (using getBoundingClientRect()) while `scrollTop` is an int. I fix this with add 1 to `scrollTop` in `_proto._process = function _process()`, so it would be `var scrollTop = this._getScrollTop() + this._config.offset + 1;`. It works well in my case. 


--
",,,,
23635,OPEN,Look into enabling mangle-props and mangle-regex terser's options,build; help wanted; js; v4; v5,2020-11-21 14:47:00 +0000 UTC,XhmikosR,In progress,,See #21715 ,,,XhmikosR,"
--
@Johann-S: you want to leave this open or should we close it?
--

--
terser has the same options, at least for the time being, so this still applies.
--

--
FYI this does save us currently 608 bytes from the gzip bootstrap.min.js file on the current master:

<img src=""https://user-images.githubusercontent.com/349621/81507378-aa546a80-9305-11ea-9640-e5d8589f3344.png"" alt=""Screenshot_2020-05-10 Build Results BundleWatch"" width=""450"">

We just need to test the minified build or something, so that we are sure nothing breaks.
--

--
We should really try to do this:

<img src=""https://user-images.githubusercontent.com/349621/99879942-ece1f280-2c18-11eb-9fe1-d0b7ce79c1a8.png"" alt=""Screenshot_2020-11-21 Build Results BundleWatch"" width=""400"">

--
",Johann,"
--
Didn't hade time to shim on that issue :worried: but maybe in the futur :smile: so we can let that issue openned
--
",mdo,"
--
@XhmikosR Should we close this out if we're moving off Uglify?
--
",,,,,,
23604,OPEN,Modal with dynamic content does not close if animation is active,js; v4,2021-03-23 02:01:46 +0000 UTC,bluesurfer,In progress,,"I have upgraded to Bootstrap 4 Beta from Alpha 6 and I am using jQuery 3.2.1 to dynamically populate the content of a modal. Here's the JS code inspired from the [docs](https://getbootstrap.com/docs/4.0/components/modal/#varying-modal-content).

```
    var $modal = $('#modal');

    $modal.on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget);
        var target = button.data('url');
        if (target) {
            $modal.load(target, function () {
                $modal.find('input:visible:first').focus();
            });
        }
    });
```

And here's the HTML:

```
<button type=""button"" class=""btn btn-primary"" data-toggle=""modal"" data-target=""#modal"" data-url=""/foo"">Open modal</button>

<div class=""modal"" id=""modal"" tabindex='-1' role=""dialog"" aria-labelledby=""modal"" aria-hidden=""true""></div>
```

This works fine but if I add the `fade` class then the animation effect works but there's no way to close the modal. I had similar problem with Alpha 6 (see #22906)",,,InvisaMage,"
--
I have the same problem.
--
",Seika85,"
--
I have the exact same issue. I also had the ""Modal is transitioning"" Error with Alpha-6.

I don't know if it helps, but I debugged bootstrap itself a bit and found out that `transitionComplete()` is never called and therefor `_isTransitioning` is never reset - even though `transitionEndEmulator()` is called.
I tried adding a callback to its function parameter and added the callback call to the `setTimout`. Then I just needed to add the respective callback to the call of `emulateTransitionEnd` and it worked.

I don't know if it's ""good"" what I did, but I hope someone can at least use it to spot the actual issue better than me.
--
",bluesurfer,"
--
@Johann-S @Seika85 @InvisaMage 

At the end I manage to make this work (tested on Beta 2).  Adding `modal-dialog` and changing the event to `shown.bs.modal`did the trick.

```
    <div class=""modal fade"" id=""modal"" tabindex='-1' role=""dialog"" aria-labelledby=""modal"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"">
        </div>
    </div>
```

```
    // Vary modal content based on trigger button
    $modal.on('shown.bs.modal', function (event) {
        var button = $(event.relatedTarget);
        var target = button.data('url');
        if (target) {
            $modal.load(target, function () {
                $modal.find('input:visible:first').focus();
            });
        }
    });
```
And here the target url returns the HTML enclosed in modal-dialog tags.

--

--
@Johann-S

Seems a hack to me but it works. So, I guess it is fixed? It's up to you :)
--

--
@Johann-S 

> I made a Codepen with our latest release (beta 2) and it works fine see : https://codepen.io/Johann-S/pen/KXOPPj?editors=1010#0
> without using shown event 😉

This is slightly different: you are using the `modal-body` element to populate the modal. One, instead, may want to dynamically change the `modal-dialog` in order to control the size of the modal using `modal-sm/md/lg`. And that still does not work with the show event - you cannot close modal once it gets shown (**tested on beta-3**). 

The only thing that seem to work is my hack and I am not using it 😄  (I preferred to disable the fade effect).

--

--
@Johann-S 

I was looking back to this issue in my project and I think I finally come up with a clean solution using jQuery and data attributes:
```
    let $modal = $('#modal');

    // Vary modal content based on trigger button
    $modal.on('show.bs.modal', (e) => {
        let button = $(e.relatedTarget),
            target = button.data('url'),
            size = button.data('size') || 'modal-md';
        $modal.find('.modal-dialog').addClass(size);
        $modal.find('.modal-content').load(target);
    });
```
So for me this is closed :)


--
",Johann,"
--
So is it a fixed issue for you @bluesurfer ? 
--

--
I made a Codepen with our latest release (beta 2) and it works fine see : https://codepen.io/Johann-S/pen/KXOPPj?editors=1010#0

without using `shown` event :wink: 
--

--
We are on Beta 3 @ConorSheehan1 so you should update your Bootstrap version 😉 
--
",ConorSheehan1,"
--
Looks like this issue or something similar is on the getbootstrap website on the Tooltips and popovers modal. If you go to https://v4-alpha.getbootstrap.com/components/modal/#tooltips-and-popovers 
once you open the modal and click ```This button triggers a popover on click.```  
the modal can no longer be closed.  Exception in the console is ```Uncaught Error: Modal is transitioning```

(On Google Chrome 60.0.3112.78, centos 7) 
--
",habib535,"
--
In a scenario when you have initially empty HTML and then you fill it with contents as a result of a response or any late binding, the constructor of the modal is called before the contents are available.
```
<div id=""infoModal"" class=""modal fade"">
</div>
```

So in my case the modal object `this._dialog` is `null` and when you click the close button it will wait for the transition to end on the `this._dialog` element.
https://github.com/twbs/bootstrap/blob/main/js/src/modal.js#L280

Which will never happen unless you set the `this._dialog` property to proper element.

Adding the following line at https://github.com/twbs/bootstrap/blob/main/js/src/modal.js#L267 fixed my problem
```
      if (!this._dialog && this._element) {
        this._dialog = this._element.querySelector(Selector$5.DIALOG)
      }
```

Of course, changing the library is not ideal but the strange thing is this started happening after we upgraded from version 3.2 to 4.4, fixing it in the library is better than adding hacks. Hopefully, this fix will be available in future releases.
--
"
23507,OPEN,Esc key closes modal and dropdown if dropdown is open inside it,accessibility; help wanted; js; v3; v4,2021-03-24 16:32:36 +0000 UTC,GearTheWorld,In progress,,"When I have a modal and in the model I have a DropDown.  If I click the DropDown and it opens clicking ESC doesn't close de DropDown but the entire modal.

If it's by design I don't understand.  ESC should check if a DropDown is opened and if so closing it then if there's nothing else opened the second ESC should close de dialog

This happens right now in 3.3.7 but I want to know if this changed in 4 or if this will remain like that ?

For instance : I pick a DropDown but it was not the right one.  Now I have to click somewhere else with the mouse but many people uses TAB to go from one control to the next",,,bkdotcom,"
--
currently same behavior in 4
--
",XhmikosR,"
--
Nothing related has changed in 3.x for sure.

Can someone make a codepen?
--
",patrickhlauke,"
--
note that the behavior of ESC has been changed recently ... worth evaluating this in the context of the new code https://github.com/twbs/bootstrap/pull/28912

if the problematic behavior described here is still present, i'd hazard a guess that the the ESC handling in the dropdown.js needs to `stopPropagation` and or `preventDefault` after it closes the dropdown.
--

--
just checked, and this is not an issue anymore in `v5`. i believe i know where the issue in `v4` can be patched though...
--

--
i'm a bit stumped because we do seem to call `event.stopPropagation()` for key events ... not sure why it's not preventing the `Esc` from bubbling up to the modal. unless we're not capturing events in the bubbling stage, or there's something else weird happening  https://github.com/twbs/bootstrap/blob/v4-dev/js/src/dropdown.js#L470
--

--
digging a bit deeper, it seems that the modal gets the `Esc` keydown event before the dropdown (verified by setting some breakpoints in JS on both the modal's escape handling code, and the dropdown's code). this smells like it's to do with a fundamental way in which our events are being handled (capture phase rather than bubbling phase?) which is way beyond my JS knowledge to tackle (due to the overly convoluted event handling that we use)...
--

--
yes, in 5.0 the dropdown contains/swallows `Esc` (but also when it's closed, which arguably is a different sort of problem)
--

--
well yes as i said, the dropdown component swallows the `Esc` even when it's closed (as in when the button/trigger that opens the dropdown is focused)
--

--
no. `Esc` on a focused but closed dropdown trigger should not be intercepted/swallowed by the dropdown code. it would then travel up the DOM and be caught by the modal, which would then respond to it and close
--
",mdo,"
--
Looks like no one followed up on this, but this does indeed happen in v4.5.3: https://codepen.io/emdeoh/pen/ZEpjNRZ. This CodePen was from another issue, but this described behavior does exist here.

/cc @twbs/js-review 
--
",alpadev,"
--
@patrickhlauke looks like that's a problem with how we bind handlers with jQuery.

For `modals` we bind the key handlers directly to the [element](https://github.com/twbs/bootstrap/blob/v4.6.0/js/src/modal.js#L333) but for `dropdowns` the key handler is bound on the [document](https://github.com/twbs/bootstrap/blob/v4.6.0/js/src/dropdown.js#L512) instead (with a selector to filter events that are not related). This should explain the order in which events are fired and why `stopPropagation()` in the `dropdown` handler wouldn't help.

In v5 with our `EventHandler` implementation we use capture listeners when used with delegation `.on(element, event, selector, handler)` and regular listeners when used like this `.on(element, event, handler)`.

Hope that helps.
--
",Jarek300,"
--
I'm not sure that is is not an issue in v5.03. Check this [CodePen](https://codepen.io/Jarek3000/pen/LYxVJJg).

If you click dropdown and press Esc then dropdown closes and modal not. But if you press Esc again nothing happens - modal does not close. You have to press Tab to focus a button and then press Esc.
--
"
23189,OPEN,Dismissible popover at next click with link inside ...stop to work fine,js; v4,2018-11-20 13:11:03 +0000 UTC,jipexu,In progress,,"Hi
Dismissible popover at the next click with link inside ...
[current dev version and popper.js]

The popover open fine (and dismiss fine).
But the link inside not work [except if you are very fast ...] that means if you click imediatly you can have a chance to get a working link ... if you wait some seconds the links are not working ...
it was not the case with tether.js and alpha-6... 

https://codepen.io/jipexu/pen/Kvzvzp

where i am wrong ? some idea ?",,,Johann,"
--
I removed : `data-trigger=""focus""` and it works fine, maybe that's because you used that attribute and it takes the focus, so your links cannot be clicked

More informations here : https://github.com/twbs/bootstrap/blob/v4-dev/docs/4.0/components/tooltips.md#options
--

--
Indeed 🤔 for me it seems a bug
--
",jipexu,"
--
Thanks
yes but if we remove the data-trigger=""focus"" the popover is not more dismissible at the next click ...?
--

--
> as an aside: popovers should ideally not be used for interactive content - for instance, this makes it completely unusable for keyboard users. It's probably worth noting this in the documentation.
@patrickhlauke 

thank for the answer
i understand (and dont realize the lack for the keyboard user) but i though it was a very good way to use popover as a nice (rich) local menu ... 
i continue to investigate to find a better html (perhaps) because i dont find really why this work before and no more with the dev version and popper.js (and some of our team member can not reproduce this problem ?..)

if we can use data-html ... the html must work inside with the dismiss at next clic ... 
this problem remember me the early time of use of infowindow in google map api ...
--
",patrickhlauke,"
--
as an aside: popovers should ideally not be used for interactive content - for instance, this makes it completely unusable for keyboard users. It's probably worth noting this in the documentation.
--

--
as for the actual problem described here, this would likely require a modification of BS code to allow for clicks inside the popover, without them bubbling up further and closing the popover
--
",TGHI,"
--
+1

I thought that ""focus"" would be the solution to manual triggers + closing on document click.
--
",MiikaL,"
--
There may be reasons for not using popovers with interactive content, but this has been a working feature up until the official release.

I am using the popover as a list of notifications in the toolbar, and clicking on the notification in the popover should take the user to where they need to be. But with the latest release the popover is destroyed before the click on the link can be registered. What was changed in the latest release?
--

--
It seems that the solution to my problem at least is to also add a delay to the popover (in my case a ""delay: 200"" in popover creation), which will allow the click events to be handled before the popover is destroyed.
--
",vanillajonathan,"
--
This prevents a form from being used inside a popover.

This is used in Gmail on the search field where if you click on a button you get a type of popover with advanced search options.

![image](https://user-images.githubusercontent.com/10222521/48775670-0ec4d980-ecce-11e8-8131-1dc97a29b29c.png)

--
"
22962,OPEN,Support Popper positions,feature; help wanted; js; v4,2021-01-10 02:08:15 +0000 UTC,mdo,Opened,,"Replacement issue for #17759 and #19921. Would be rad to tackle this for a v4.1 or v4.2 release.

Also includes dropdowns now: #21510.

- [ ] Tooltips
- [ ] Popovers
- [ ] Dropdown

/cc @Johann-S ",,,pat270,"
--
Can we get more dropdown-menu positions as well?

![dropdown-positions](https://user-images.githubusercontent.com/788266/28692954-a105c2d6-72d7-11e7-8c13-3c4fe0116ed4.png)


--
",Acts7,"
--
Bootstrap 4's dropdown placement options currently mirror the ""basic"" positioning for popper.
EXCEPT:
position: 'bottom'.
Why was that left off and how can we get that replaced?

```
// approx line 48
var ClassName = {
....
//add this line:
MENUCENTER: 'dropdown-menu-center',  // add new css class for center align dropdown
....
};

// approx line 65
var AttachmentMap = {
....
//add this line:
BOTTOMCENTER: 'bottom',    // 'bottom' already exists in popper.js. this just maps to that placement.
....
};

// approx 227
_proto._getPlacement = function _getPlacement() {
  ....
//add these 3 lines
  } else if ($(this._menu).hasClass(ClassName.MENUCENTER)) {
    placement = AttachmentMap.BOTTOMCENTER;
  }
 ....
  return placement;
};
```

--
",itsjavi,"
--
Popper supports [placement variations](https://popper.js.org/popper-documentation.html#Popper.placements) using `-end` and `-start`, e.g.: `bottom-end` (which means bottom left alignment).

Is this issue going to address that problem? It seems that it is not supported via de BS popover options (I am using the 4.1.2 bundle JS).
--
",kikonen,"
--
Just hit this ""-start"" & ""-end"" problem with bootstrap 4.3.1. I would need to definitely be able to use ""top-start"" alignment for some tooltips, but bootstrap tooltip.js explicitly forbids that.

So I'm pondering what kind of workaround would solve the problem.

Found workaround, just overriding placement resolver from ""Tooltip class""

```
var AttachmentMap = {
  AUTO: 'auto',
  TOP: 'top',
  RIGHT: 'right',
  BOTTOM: 'bottom',
  LEFT: 'left',
  'TOP-START': 'top-start'
};

window.Tooltip.prototype._getAttachment = function(placement) {
  return AttachmentMap[placement.toUpperCase()];
};
```

--
",Jule,"
--
Still opened...

My little 2cts workaround, include/execute after bootstrap.js is loaded:
```js
;(function () {
  // Fix Bootstrap caveat regarding to Poppers.js placement capabilities
  // Allow overriding Dropdown placement with 'data-placement' attribute
  var original_getPlacement = bootstrap.Dropdown.prototype._getPlacement
  bootstrap.Dropdown.prototype._getPlacement = function () {
    return $(this._menu).data('placement') || original_getPlacement()
  }
})()
```

then for example:

```html
<div className=""dropdown-menu"" data-placement=""bottom"">
  ...
</div>
```

--
",tszalbot,"
--
+1
--
"
22885,OPEN,Using data-toggle on a <label> with an <input> prevents default functionality,confirmed; js; v4; v5,2021-04-08 11:41:03 +0000 UTC,callumstrubi,Opened,,"Using `data-toggle` on a `<label>` with a `<input type=""radio|checkbox"">` prevents default functionality of the input toggling between the items.

OS: MacOS Sierra
Browser: Safari

JSBin:
https://jsbin.com/selasukami/edit?html,css,output

v4 alpha-6 Bootstrap",,,trusche,"
--
Confirmed that this is still ongoing in 4.0.0-beta. I do recall a similar issue with a lengthy discussion but cannot find it now. It would be good to know if this is expected behaviour I have to work around, or a bug that might get fixed. 

Loving bootstrap! :heart:

--
",Johann,"
--
That's due to : https://github.com/twbs/bootstrap/blob/v4.2.1/js/src/tab.js#L240
--

--
Yep still valid
--
",XhmikosR,"
--
@Johann-S: is this still valid?
--

--
Must be present on v5 too:

https://github.com/twbs/bootstrap/blob/7e6d7b8f817ad1212238f15124335d37c93ebfea/js/src/tab.js#L205

Patches welcome to allow this case.
--
",mdo,"
--
Do we close this as a won't fix for v4? Still an issue in v4.5.x: https://jsbin.com/coguvof/edit?html,output.

Unclear if we need to do anything for v5 here either...
--
",GeoSot,"
--
I think that in 5-beta3 is ok, (yes  I admit I cannot understand it ).
In any case I made one more Pr

Example of beta-3: https://jsbin.com/hekipumuvi/edit?html,output


--
",,
22764,OPEN,Feature: Docs: JavaScript Styles,docs; v4,2018-10-20 09:32:23 +0000 UTC,misterdai,In progress,,"TLDR; List any CSS classes that each Bootstrap JavaScript code functionality adds, for easier optimisation.

It would be useful to have a list of styles applied by Bootstraps JavaScript code. Even after customising the CSS produced by Bootstrap, to only cover the functionality you may be using, there are further optimisations that could be made such as using [uncss](https://github.com/giakki/uncss).  The only issue with this is that styles that are only applied by JavaScript are not covered.  It's simple to add a list of styles to ignore, but without easily knowing which are made use of, it takes a lot of trial and error or tracking down.",,,Johann,"
--
I'm not sure about the use of `uncss` because Bootstrap possess a lots of CSS classes which aren't used in our JavaScript and it's pretty hard to list all the CSS classes available.

But I think it's a good idea to list CSS classes used by our Plugins. They are listed in our JS code in the object `ClassName`
--
",misterdai,"
--
I use `uncss` as a final step for my static based personal website, which is using the v4 alpha of Bootstrap at the moment.  Works really well as it'll process all my static HTML files (can do live site requests as well) for styles used and remove any that I don't from the optimised CSS.  So it wouldn't need a complete list of CSS classes, only the ones added through the JS code.

Useful tip about the `ClassName` object holding the styles, I'll use that for now :)
--
",XhmikosR,"
--
I was thinking that eventually we should prefix all of our classes with something like `bs-foo`. But that's for the future.
--

--
On the other hand purgecss seems to work much better.
--
",,,,,,
22719,OPEN,Scrollspy: Custom selector,feature; js; v4,2017-05-29 19:31:19 +0000 UTC,strarsis,Opened,,"The target option in scrollspy can be used for selecting a navigation element - 
but the selector for the anchor element (`<a>[...]</a>`) is always appended to it:
```js
[...]
    this.selector       = (this.options.target || '') + ' .nav li > a'
[...]
````
Because I really like to use the data attribute approach for initialization, 
it would be great if the anchor-element selector can be customized, too, using data attributes.",,,,,,,,,,,,,,
22410,OPEN,Fire modal event after appending to the DOM but before the transition begins,feature; js; v3; v4,2017-06-13 18:42:13 +0000 UTC,ElMassimo,In progress,,"Similar to #16124, but for modals.

Because `shown.bs.modal` is triggered after the transition ends, any transformation to the HTML in the modal happens after the modal has been displayed. This creates a jarring visual effect, if say, you want to add something like [selectize.js](http://selectize.github.io/selectize.js/) to a form in the modal.

Having an event that is triggered after the modal has been inserted in the DOM but before the transition begins would provide a hook that can be used to apply any transformation or event bindings, making it also useful for data binding or templating libraries as well.

Example implementation in [modal.js](https://github.com/twbs/bootstrap/blob/v3-dev/js/modal.js#L95-L97):
```js
       that.enforceFocus()
  
 +      that.$element.trigger($.Event('inserted.bs.modal', { relatedTarget: _relatedTarget }))
 +
        var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })
```
",,,Johann,"
--
I think you can use `show.bs.modal` event which is trigger before `shown.bs.modal`
--

--
In our examples modals are always in the DOM. We add `.show` to display modals that's all 
--
",ElMassimo,"
--
`show.bs.modal` is fired before the modal is appended to the DOM. There are several operations that can't be performed until the element is inserted.
--

--
Have in mind that [that's not always the case](https://github.com/twbs/bootstrap/blob/v3-dev/js/modal.js#L79-L81), and displaying a modal that is not in the DOM yet has been supported [since the beginning](https://github.com/twbs/bootstrap/commit/76cadd1d2a493d4cbcfe8acd984bd4f908b25abf).

Also, resizing, padding, and scrollbars are applied after `show` is fired, so if there's any calculation that needs to consider the modal's dimensions, it need to happen after the layout.

The point remains, having this event would be very useful in different circumstances.
--
",,,,,,,,
22402,OPEN,Feature Request: Modals: input autofocus attr; and keyboard focus (has-PR),has-pr; js; v4,2018-11-14 15:36:44 +0000 UTC,bkdotcom,Opened,,"Spinoff of #22362

**a)** Bootstrap should automatically exhibit this behavior:
```
$(document).on(""shown.bs.modal"", function (e) {
    $(""[autofocus]:first"", e.target).focus();
});
```
(ie, when opening a modal, find the first input with the `autofocus` attribute and focus it 
The `autofocus` attribute is currently ineffective in modals without the user implementing something like the above.
This would be a non-breaking change.

**b)** new modal option/data-attr

`<div class=""modal"" data-keyboard-bnav=""true""></div>`

Common use case:   confirmation dialog.  Enabled, this would allow the user to arrow between ""Cancel"" and ""OK""  (just like a native confirm dialog).
I know I always audibly \*sigh* when I open a non-native confirmation dialog and a) nothing's focused by default, and b) I can't select an option via keyboard/arrow-keys

(Keyboard functionality is a requirement for [Accessibility Compliance](https://www.w3.org/TR/WCAG20/))

---

**See the documentation demo modals**
https://v4-alpha.getbootstrap.com/components/modal/#live-demo

There are 9 ""live demos""

4 of the demos are true confirmation dialogs and would benefit from ` data-keyboard-nav=""true""` and/or having a default/autofocused action

3 of the demo modals are  email forms which would benefit from having `autofocus` on the message textarea

(The remaining 2 demos have no content)

**Edit:** It appears that autofocus has been suggested before (#12525)  but poo-poo'd out of consideration for mobile devices (don't want to trigger virtual keyboard).    Does focusing a button trigger virtual keyboard?  Potential solution: if touch device and element to focus is of the text/textarea variety: don't autofocus?   My opinion: the accessibility benefits gained by autofocusing are worth the challenge of dealing with the virtual-keyboard exception.",,,,,,,,,,,,,,
22311,OPEN,Modal background scrollable (iOS Safari),browser bug; docs; v4,2020-09-18 18:41:28 +0000 UTC,SebastianSchenk,In progress,,"**System**
iOS 10.2 (iPad Mini 3)

**Browser**
iOS Safari 

**Test case** 
https://v4-alpha.getbootstrap.com/components/modal/#live-demo

**Description**
When opening a modal in any other browser than iOS Safari, the background isn't scrollable; neither by mouse wheel nor by touch.

On iOS Safari the background is scrollable, which shouldn't be the case as far as i know.
 ",,,oktalk,"
--
To my knowledge there's no good solution for this issue. You'll end up making messy compromises. Even modals in Bootstrap v3 allow the background to scroll when a modal is open.
--
",bkdotcom,"
--
[Webkit Bug 153852](https://bugs.webkit.org/show_bug.cgi?id=153852)
--
",SebastianSchenk,"
--
Ok I see. Thank you.
--

--
@radogado don't know if this demo is intended to work on desktop, but on desktop the large modal is not scrollable at all
--

--
@radogado yes, was using Chrome 67 for Mac
--
",Johann,"
--
Sorry @SebastianSchenk but I reopen your issue because we have to note that's a bug browser in our documentation 
--
",a3rev,"
--
Hi - have used the bootstrap modal to create a form pop up in our plugin [Contact Us page Contact People](https://wordpress.org/plugins/contact-us-page-contact-people/) and the Premium Version. Love the script - but we are seeing bug in iOS - which is the bug raised in this issue.

The Modal pop opens a contact form from the profile card on the plugin - 

The issue we are having is scroll in Mobile with iOS regardless if using Safari or Chrome browser

Have made a [video to show the issue ](https://www.youtube.com/watch?v=XHghud6iN9I) 

When touch swipe if the finger lands on area between input fields on the form modal scrolls fine - but if the finger lands on an input field the modal don't scroll - the background does. 

For a user this is very bad UX - for a user they do not know that is the issue - like we didn't until we figured it out. 

We see this issue with Chrome on iOS as well as safari 
--
",Duplicants,"
--
Is there any workaround to this?
--
"
21845,OPEN,data-toggle collapse with data-target selector not using an #id does not update the control's aria-expanded attribute,js; v4,2021-01-10 06:38:22 +0000 UTC,jcwchriswalker,In progress,,"When using a data-toggle='collapse' and data-target selector is not an element id selector, the **aria-expanded** attribute in the control is not updated. However the collapse toggle function works.

Testcase: 
https://jsfiddle.net/jcwchriswalker/c07nv4hs/

1. Both <buttons> control a separate div container. The only difference in the buttons is how the data-target is defined. The 'By ID' button uses a '#collpsediv1' reference and the 'by ClassName' button uses a class selector .collapse.div2 to reference the target
2. Both buttons successfully collapse/uncollapse the target.
3. The <button> **By ID** will correctly set the aria-expanded attribute based on the state of the data-target
4. The <button> **By classname**, does not update its aria-expanded attribute based on the state of the data-target.
5. In both cases, the data-target <div> correctly sets it aria-expanded attribute
",,,pvdlg,"
--
I think it's solved by #21692. The main purpose of the PR is to support multi-targets, but it fix this issue because it rely on a different method to determine the trigger of a given `collapse` area.
Currently the methods rely on id only.
--
",jcwchriswalker,"
--
Thanks Pierre- I will be able to try this next week…

From: Pierre Vanduynslager [mailto:notifications@github.com]
Sent: Wednesday, January 25, 2017 4:14 PM
To: twbs/bootstrap <bootstrap@noreply.github.com>
Cc: Chris Walker <cwalker@reveillesoftware.com>; Author <author@noreply.github.com>
Subject: Re: [twbs/bootstrap] data-toggle collapse with data-target selector not using an #id does not update the control's aria-expanded attribute (#21845)


I think it's solved by #21692<https://github.com/twbs/bootstrap/pull/21692>. The main purpose of the PR is to support multi-targets, but it fix this issue because it rely on a different method to determine the trigger of a given collapse area.
Currently the methods rely on id only.

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub<https://github.com/twbs/bootstrap/issues/21845#issuecomment-275234127>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AVXC9OcCnInffoySv0mLKgOqzj8rEc_Pks5rV7r9gaJpZM4Lt_Q4>.

--
",alecpl,"
--
This is not fixed. Updated fiddle with 4.3.1 https://jsfiddle.net/3xburgo9/1/

Clicking ""By classname"" sets `aria-axpanded=true`, but clicking it again will not set it to `aria-expanded=false`. Works with the ""By ID"" button.
--
",kaptajnen,"
--
I'm seeing a similar issue but instead it seems ALL controls are updated when pressing one of them. Adding an id attribute to the rows fixes the issue: https://jsfiddle.net/auro02ph/
--
",mdo,"
--
https://jsfiddle.net/jcwchriswalker/c07nv4hs/ works as expected for me, `aria-expanded` is toggled in both situations.

@kaptajnen Can you open a new issue for that example? It seems that sharing the classes might be causing that problem... https://jsfiddle.net/9oubjkg1/ has the latest v4.x version in it.

Know I'm a year late here, sorry 😬 

/cc @twbs/js-review 
--
",XhmikosR,"
--
I'm not sure about this one, but I can confirm @kaptajnen observation.

The original issue does seem to work here too, though.
--
"
21661,OPEN,fix(modal): shift+tab without focused element within modal,accessibility; js; v3; v4,2017-07-12 23:44:44 +0000 UTC,Hardhik,Opened,,"Issue can be validated here: 
1) Navigate to http://getbootstrap.com/javascript/ 
2) Search for ""Launch demo modal"" and click on that. Now use shift+tab, nothing happens.

There was a similar bug in Angular-ui's bootstrap which got fixed: https://github.com/angular-ui/bootstrap/pull/5294

This should be done even in this library too.

I have tried on:
Operating system and version Windows, 
Browser and version Chrome: 55.0.2883.87",,,patrickhlauke,"
--
Not going to get any fixes for v3, but relabelled as v4 as it happens there as well
--
",,,,,,,,,,
20219,OPEN,Add ability to use DOM elements as popover content,feature; help wanted; js; v4,2021-01-10 02:08:36 +0000 UTC,Jezza,Opened,,"There were a couple of good reasons for implementing this, and they were brought up with the initial issue: #3722.

I'll repeat them here for completionist sake though.
- Event bindings break if you copy the html, and not use the actual element.
- This would let the popover work nicer with other JS frameworks, such as AngularJS.

_Current workaround_:
Just copy the html, and rebind the events. It's not fun or pretty.

_Side note:_
The initial issue (#3722) was closed simply because of lack of action, and the final comment: ""Locking this due to its age. Added a note to look at this for v4 though."" , which was stupid.
You don't close a ticket because of it's age, let alone if the ticket might be considered for a later version.
Keeping it open means people don't have to go through 13,000 other tickets to check if any are still actively wanted/needed.
Otherwise you run the risk of it just vanishing into the ether.

So, closing it was a stupid idea, and brings to question how many other issues have been closed similarly, and then completely forgotten?
In short, don't close a ticket like that.
",,,alecpl,"
--
Another issue here is that the content node is out of DOM tree of the page after you use `.popover('hide')`. So, it is not really possible to simply work with the popup content when it is in hidden state. And that's a real pita in my use-case.
Any workarounds? How about appending the content node back to the element specified in 'container' option (default document.body) and making it invisible on hide event?
--

--
@FezVrasta Maybe you have some hints for my issue? Not sure it's popper or bootstrap implementation limitation.
--

--
@FezVrasta At least with current Bootstrap implementation when popover is being shown the DOM element is appended to the popover. When the popover is hidden it's no longer in DOM tree of the page, so I can't access it with e.g. jquery css selectors.
--

--
That's a question, yeah. @Johann-S ideas?
--

--
Thanks. I don't feel confident to digg into Bootstrap code. For now I workaround this by:
```
$(button).on('hide.bs.popover', function() {
        $(popup).appendTo(document.body);
})
```
--
",FezVrasta,"
--
I don't think I understand where the problem is.
--

--
Couldn't Bootstrap simply hide it visually and not removing it from DOM in case you used an already existing DOM node as content?

Also, if you have a reference of the DOM node, even if it gets detached from the DOM three, you can still access it.
--
",Johann,"
--
What's @FezVrasta can be a possibility yes.
I remember they are some features in v4 asked about having a possibility to update the contents of a Popover
--
",,,,,,
19964,OPEN,Support multiple targets for tabs,feature; help wanted; js; v4,2021-02-03 10:21:54 +0000 UTC,ukipme-jr,Opened,,"Bootstrap 3 supports multiple targets for tab controls - http://stackoverflow.com/questions/19719653/control-multiple-tab-contents-with-one-nav-tabs 

Bootstrap 4 does not support this, yet, but it is a useful feature. I have added a basic workaround for time being:

file: /js/src/tab.js

line: 116
`
 target = $(selector)[0]
`
to 
`
target = $(selector)
`

line: 138
`
this._activate(target, target.parentNode, complete)
`
to
`
for (i=0; i<target.length; i++) {
    this._activate(target[i], target[i].parentNode, complete);
}
`
",,,realconspiracy,"
--
This workaround does not appear to work in v4alpha3. Can anyone else confirm?

--
",nimmolo,"
--
@mdo Maybe this is fixed as part of [#21692 Collapse module supports multi-target](https://github.com/twbs/bootstrap/pull/21692)
--
",DanielRHarris,"
--
Any update on this? 
--
",patrickhlauke,"
--
note that this pattern would be quite difficult to make accessible, as there's no equivalent mapping for this sort of thing in regular tab panel constructs...
--

--
Are there any actual live examples of the sort of thing people are wanting to do with this? The common format for what a tabbed interface doesn't seem to gel with having multiple things change. maybe we're talking across purposes about what sort of widget/interface authors are trying to achieve? (still maintain that bastardising a regular tabbed interface structure to open more than one panel will not be easy to make sensibly conveyable to assistive technologies).
--

--
i'll admit that to me, that feels a bit niche and perhaps better solved by a tiny bit of custom code (implement each code sample block as a normal tab widget, then hang code off any change to active tab, iterate over any other tab widgets, and switch them accordingly) rather than baking it into the tab component logic directly
--
",VJ22,"
--
Is this still open? I can not find any working example and after migrating from 3.x to 4.x , multiple targets for tabs wont work.
--
",darylknight,"
--
+1, just came across a need for this in BS 4 updating an old site.
_rrvw_
--
"
19145,OPEN,Allow CSS class strings in JS plugins to be overridden/configured,feature; help wanted; js; v4,2021-01-10 02:08:35 +0000 UTC,jonathaningram,Opened,,"I'm coming from the context of React+Webpack+CSS modules where I am getting the Bootstrap CSS class names like this in my React component:

``` js
import bsStyles from 'bootstrap.css'

// if you're unsure, bsStyles is now a hash of original classes to renamed classes, something like:
{
  collapse: 'bootstrap__collapse___1wPer',
  navbar: 'bootstrap__navbar___2YbzV'
}

<div className={bsStyles.collapse} id=""exCollapsingNavbar"">
  <div className={bsStyles.bgInverse + ' ' + bsStyles.pA1}>
    <h4>Collapsed content</h4>
  </div>
</div>
```

When you use the collapse component that ships with BS, the classes it adds in JS don't exist anymore.

The JS modules that ship with Bootstrap don't allow one to override/set the classes. E.g. imagine being able to do something like:

``` js
import collapse from 'bootstrap/dist/js/umd/collapse'

collapse.provideClassNames({ ...bsStyles })
```

Taking an example of how the current collapse JS module looks:

``` js
var ClassName = {
  IN: 'in',
  COLLAPSE: 'collapse',
  COLLAPSING: 'collapsing',
  COLLAPSED: 'collapsed'
};
```

Could that object be made configurable when the module is included? I would suspect that maybe it needs to be changed to lowercase first since the keys in `bsStyles` are the original classes with no uppercasing and the object could almost be swapped out exactly for the given replacement (but making sure that the default classes are also defined for the standard Bootstrap use cases):

``` js
var ClassName = {
  in: 'in',
  collapse: 'collapse',
  collapsing: 'collapsing',
  collapsed: 'collapsed'
};
```

Thoughts?
",,,,,,,,,,,,,,
17496,OPEN,Horizontal collapse,feature; help wanted; v4,2021-03-18 15:04:33 +0000 UTC,vanillajonathan,In progress,,"It would be nice with a horizontal collapse feature.

This would be very handy for collapsing sidebars.
",,,TheBuzzer67,"
--
Offset Canvas already do it!? But we have to use a bit jquery to  exchange collapse for canvas!

--
",WebDragon,"
--
one would also like the option to have a slide-(left|right) nav on tablet and mobile, that overlays the content rather than pushing it aside. 
--

--
https://github.com/bootstrapstudio/bootstrap-better-nav  so this is a thing that exists and which I've used successfully in a redesign. 
--
",viktorsmari,"
--
What is the status of this? 
I am waiting for the option to slide a nav menu from the sides, which appears to be the standard today on mobile apps.
--
",stormriderstudios,"
--
Any chance of an update on this?
I can see that it's in the Feature Ideas of the Bootstrap 5 project but currently unassigned.
I would be hugely keen the see this feature added, especially if it has support for partial and total collapse (whether through collapsing child elements or some similar mechanism or directly in the feature).
I envisage it being able to completely collapse something to the side, collapse to the side and expand other elements on the same horizontal plane (which I realise is more difficult than vertical collapse) or the popular option to collapse a text menu to icons only.
Cheers!
--
",mdo,"
--
https://github.com/twbs/bootstrap/pull/31285 is planned for off canvas, and https://github.com/twbs/bootstrap/pull/31681 is stubbed out but troublesome for horizontal collapse.
--

--
Tried in #31681 but couldn't make it work with just CSS. Would love if someone could give it a go!
--
",vanillajonathan,"
--
 @mdo, it looks really good! 👍
--

--
I thought this would be just as the existing [vertical collapse](https://getbootstrap.com/docs/5.0/components/collapse/) but horizontal and hence be a minor change that was easy.
--
"
17324,OPEN,modal with text input display up and down when input get focus in Android Chrome,help wanted; js; v4,2019-09-15 16:17:06 +0000 UTC,billsliu,In progress,,"Open a long page with some text and one button in the middle of page using Android Chrome browser. Scroll the page to show the button, the Android Chrome address bar will hide, Click the button to open a modal box that has text input control. After the modal box shown you click on the text input control to set focus on input control. The modal box will move up and down in the first time. The problem happens only in the first time, you need to refresh the page and scroll the page to hide Chrome address bar to show the problem again. It only happens in Android Chrome but it works fine in IOS.

Example (you need to use an android): http://demo.clubclouds.com/sandbox/modal.html

Bootstrap 3.3.5
Android OS 4.4, 5.0, 5.1
Chrome 44
Samsung S6, S5, S4, S3
",,,cvrebert,"
--
> The modal box will move up and down in the first time.

@billsliu So, it kinda flickers once? But it's displayed acceptably after that flicker is done?

--

--
@billsliu Could you please re-test with the Bootstrap v4 alpha release (warning: not backward-compatible; docs: http://v4-alpha.getbootstrap.com )? I suspect it'd also be affected, and we might not bother trying to fix this for v3 since it's not a showstopper and v3 is on the back burner.

--

--
JS Bin copy of http://demo.clubclouds.com/sandbox/modal.html : 
http://output.jsbin.com/xupafu

--

--
With those minor and probably-irrelevant issues fixed: http://output.jsbin.com/xupafu

--

--
On Sauce Labs, the Samsung Galaxy S4 emulator running Android 4.4 doesn't exhibit any address bar hiding effect. Neither does my physical Nexus 10 tablet running Android 5.1.1.

@twbs/team Anyone have an Android smartphone to test this on?

--

--
@juthilo If you perform the test on http://output.jsbin.com/sidejo/quiet and then close the modal and look at the list at the bottom, what does it say?

--

--
Perhaps we could try debouncing the `resize` event handler. And/or filing a Chrome bug.

--
",billsliu,"
--
Yes it will show correctly after flicker is done. Click on the input control,  the chrome address bar show up and software keyboard show up, the modal box moves up after keyboard and address bar show, and one or two seconds later modal box moves down to its correct position. It looks like the bootstrap modal sense the container size change event and try to move up or down to justify the size change event. The problem is bootstrap modal captures two size change event (address bar and keyboard) and adjust twice, so the bootstrap modal move up and down. 

This is just my guess and the problem may be able to fix.

--

--
bootstrap 4 has the same issue. example for bootstrap 4: http://demo.clubclouds.com/sandbox/modal4.html

I dig into bootstrap 3 javascript source code, I found modal resize event, but bootstrap only handle scrollbar width in resize event, no code related with address bar and soft keyboard change. 

It is definitely a browser related issue, it may have a way to work around and improve bootstrap modal. I currently have not got a clue, I will leave the issue for a while since the behavior is acceptable even not perfect.

--

--
ios has problem too, it flicker and move dramatically and quickly. I have dirty hack for ios device. see example ios hack for model: http://demo.clubclouds.com/sandbox/modalios.html
First. Html code modal (`<div class=""modal"" id=""myModal"">...</div>`) must be child of body.
Second. Add dirty hack to show.bs.modal event

``` javascript
// bootstrap modal enhancement with input field
$('body').on('show.bs.modal', '.modal', function (e) {
    // fix the problem of ios modal form with input field
    var $this = $(this);
    if (navigator.userAgent.match(/iPhone|iPad|iPod/i)) {
        // Position modal absolute and bump it down to the scrollPosition
        var heightModal = Math.max($('body').height(), $(window).height(), $(document).height()) + 1;
        $this.css({
            position: 'absolute',
            paddingTop: $(window).scrollTop() + 'px',
            height: heightModal + 'px'
        });
        // Position backdrop absolute and make it span the entire page
        //
        // Also dirty, but we need to tap into the backdrop after Boostrap 
        // positions it but before transitions finish.
        //
        setTimeout(function () {
            $('.modal-backdrop').css({
                position: 'absolute',
                top: 0,
                left: 0,
                width: '100%',
                height: heightModal + 'px'
            });
        }, 500);
    }
});
```

The above code is very ugly, but it just provide some idea this problem can be fixed.

--
",twbs,"
--
Hi @cvrebert!

You appear to have posted a live example (http://jsbin.com/xupafu/edit), which is always a good first step. However, according to [Bootlint](https://github.com/twbs/bootlint), **your example has some Bootstrap usage errors**, which might potentially be causing your issue:
- line 35, column 5: [E046](https://github.com/twbs/bootlint/wiki/E046): `.modal` elements must have a `tabindex` attribute.
- [W002](https://github.com/twbs/bootlint/wiki/W002): `<head>` is missing X-UA-Compatible `<meta>` tag that disables old IE compatibility modes

You'll need to **fix these errors** and post a revised example before we can proceed further.
Thanks!

(_Please note that this is a [fully automated](https://github.com/cvrebert/lmvtfy) comment._)

--
",juthilo,"
--
I can observe a slight flicker to the top and back down on my Nexus 6P running Android 6.0.1 and Chrome 49.0.2623.91.

--

--
@cvrebert

```
visual: 323, layout: 365
visual: 309, layout: 309
visual: 604, layout: 604
```

--
",Ruffio,"
--
With same version Chrome but on LG G4 I don't see any problems/flickering

--
",suriyaprakash,"
--
For me it works:
Remove everything from modal-content class and paste that in modal-head..those flickers gone.

--
"
