version: '3.4'

configs:
  ml_model:
    file: finalized_model.sav

services:
  jira:
    env_file:
      - .env
    container_name: jira
    depends_on:
      - postgresql
    image: atlassian/jira-software:8.5.4
    networks:
      - jiranet
    volumes:
      - jiradata:/var/atlassian/jira
    ports:
      - '8001:8080'
    environment:
      ATL_JDBC_USER: "${jira_user_env}"
      ATL_JDBC_PASSWORD: "${jira_pass_env}"
      ATL_JDBC_URL: "postgresql:5432"
      SETENV_JVM_MINIMUM_MEMORY: "2048m"

  postgresql:
    env_file:
      - .env
    container_name: postgres
    image: postgres:9.6
    expose:
      - '5432'
    networks:
      - postgreenet
    volumes:
      - postgresqldata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "${postgres_user_env}"
      POSTGRES_PASSWORD: "${postgres_pass_env}"
      POSTGRES_DB: "${postgres_database_env}"
      POSTGRES_ENCODING: "UNICODE"
      POSTGRES_COLLATE: "C"
      POSTGRES_COLLATE_TYPE: "C"

# Application composition with dockerfile
#  app:
#    depends_on:
#      - mongo
#      - jira
#    build: ./src
#    command: sh -c "/wait && /classification_scheduler.py"
#    environment:
#      - WAIT_HOSTS=mongodb:27017
#      - WAIT_HOSTS_TIMEOUT=300
#      - WAIT_SLEEP_INTERVAL=30
#      - WAIT_HOST_CONNECT_TIMEOUT=30

  mongo:
    env_file:
      - .env
    build:
      context: ./mongo
      dockerfile: Dockerfile_mongo
    networks:
      - mongonet
    expose:
      - 27017
    ports:
      - "27017:27017"
    restart: always
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    volumes:
      - type: volume
        source: mongodata
        target: /var/lib/mongodb
      - type: bind
        source: ./finalized_model.sav
        target: /tmp/model/model.sav
      - type: bind
        source: ./vectorizer.sav
        target: /tmp/model/vectorizer.sav
      - type: bind
        source: ./tfidftransformer.sav
        target: /tmp/model/tf_transformer.sav
      # Add python inserter which inserst to mongodb
      - type: bind
        source: ./insert_model.py
        target: /home/insert_model.py
    logging:
      options:
        max-size: 1m
        max-file: "10"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${db_mongo_user_env}"
      MONGO_INITDB_ROOT_PASSWORD: "${db_mongo_pass_env}"
      DATABASE: "${db_mongo_database_env}"
  redis:
    image: "redis:alpine"
    expose:
      - '6379'
    ports:
      - '6379:6379'

volumes:
  jiradata:
    external: false
  postgresqldata:
    external: false
  mongodata:
    external: false
  model:
    external: false

networks:
  jiranet:
    driver: bridge
  mongonet:
    driver: bridge
  postgreenet:
    driver: bridge
